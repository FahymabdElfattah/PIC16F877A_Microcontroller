

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 22:54:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 09/02/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000E                     	;# 
   138     000F                     	;# 
   139     0010                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001D                     	;# 
   155     001E                     	;# 
   156     001F                     	;# 
   157     0081                     	;# 
   158     0085                     	;# 
   159     0086                     	;# 
   160     0087                     	;# 
   161     0088                     	;# 
   162     0089                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0094                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182                           
   183                           	psect	idataBANK0
   184     04AC                     __pidataBANK0:
   185                           
   186                           ;initializer for _Keypad
   187     04AC  3401               	retlw	1
   188     04AD  3402               	retlw	2
   189     04AE  3403               	retlw	3
   190     04AF  3400               	retlw	0
   191     04B0  3404               	retlw	4
   192     04B1  3405               	retlw	5
   193     04B2  3406               	retlw	6
   194     04B3  3400               	retlw	0
   195     04B4  3407               	retlw	7
   196     04B5  3408               	retlw	8
   197     04B6  3409               	retlw	9
   198     04B7  3400               	retlw	0
   199                           
   200                           	psect	strings
   201     0003                     __pstrings:
   202     0003                     stringtab:
   203     0003                     __stringtab:
   204                           
   205                           ;	String table - string pointers are 1 byte each
   206     0003  1BFF               	btfsc	btemp+1,7
   207     0004  280D               	ljmp	stringcode
   208     0005  1383               	bcf	3,7
   209     0006  187F               	btfsc	btemp+1,0
   210     0007  1783               	bsf	3,7
   211     0008  0800               	movf	0,w
   212     0009  0A84               	incf	4,f
   213     000A  1903               	skipnz
   214     000B  0AFF               	incf	btemp+1,f
   215     000C  0008               	return
   216     000D                     stringcode:
   217     000D                     stringdir:
   218     000D  3000               	movlw	high stringdir
   219     000E  008A               	movwf	10
   220     000F  0804               	movf	4,w
   221     0010  0A84               	incf	4,f
   222     0011  0782               	addwf	2,f
   223     0012                     __stringbase:
   224     0012  3400               	retlw	0
   225     0013                     __end_of__stringtab:
   226     0013                     _dpowers:
   227     0013  3401               	retlw	1
   228     0014  3400               	retlw	0
   229     0015  340A               	retlw	10
   230     0016  3400               	retlw	0
   231     0017  3464               	retlw	100
   232     0018  3400               	retlw	0
   233     0019  34E8               	retlw	232
   234     001A  3403               	retlw	3
   235     001B  3410               	retlw	16
   236     001C  3427               	retlw	39
   237     001D                     __end_of_dpowers:
   238     0006                     _PORTBbits	set	6
   239     0006                     _PORTB	set	6
   240     0007                     _PORTCbits	set	7
   241     0087                     _TRISC	set	135
   242     0086                     _TRISB	set	134
   243     001D                     STR_2:
   244     001D  346B               	retlw	107	;'k'
   245     001E  3465               	retlw	101	;'e'
   246     001F  3479               	retlw	121	;'y'
   247     0020  3470               	retlw	112	;'p'
   248     0021  3461               	retlw	97	;'a'
   249     0022  3464               	retlw	100	;'d'
   250     0023  343D               	retlw	61	;'='
   251     0024  3420               	retlw	32	;' '
   252     0025  3400               	retlw	0
   253     0026                     STR_1:
   254     0026  3454               	retlw	84	;'T'
   255     0027  343D               	retlw	61	;'='
   256     0028  3420               	retlw	32	;' '
   257     0029  3400               	retlw	0
   258     002A                     STR_5:
   259     002A  3425               	retlw	37	;'%'
   260     002B  3464               	retlw	100	;'d'
   261     002C  3400               	retlw	0
   262     002D                     STR_3:
   263     002D  3423               	retlw	35	;'#'
   264     002E  3400               	retlw	0
   265     002F                     STR_4:
   266     002F  342A               	retlw	42	;'*'
   267     0030  3400               	retlw	0
   268                           
   269                           	psect	cinit
   270     07E3                     start_initialization:	
   271                           ; #config settings
   272                           
   273     07E3                     __initialization:
   274                           
   275                           ; Initialize objects allocated to BANK0
   276     07E3  1383               	bcf	3,7	;select IRP bank0
   277     07E4  3048               	movlw	low (__pdataBANK0+12)
   278     07E5  00FD               	movwf	btemp+-1
   279     07E6  3004               	movlw	high __pidataBANK0
   280     07E7  00FE               	movwf	btemp
   281     07E8  30AC               	movlw	low __pidataBANK0
   282     07E9  00FF               	movwf	btemp+1
   283     07EA  303C               	movlw	low __pdataBANK0
   284     07EB  0084               	movwf	4
   285     07EC  120A  118A  24BC  120A  118A  	fcall	init_ram0
   286                           
   287                           ; Clear objects allocated to BANK0
   288     07F1  01C8               	clrf	__pbssBANK0& (0+127)
   289     07F2  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   290     07F3  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   291     07F4  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   292     07F5  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   293     07F6  01CD               	clrf	(__pbssBANK0+5)& (0+127)
   294     07F7  01CE               	clrf	(__pbssBANK0+6)& (0+127)
   295     07F8  01CF               	clrf	(__pbssBANK0+7)& (0+127)
   296     07F9  01D0               	clrf	(__pbssBANK0+8)& (0+127)
   297     07FA  01D1               	clrf	(__pbssBANK0+9)& (0+127)
   298     07FB  01D2               	clrf	(__pbssBANK0+10)& (0+127)
   299     07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302     07FC                     __end_of__initialization:
   303     07FC  0183               	clrf	3
   304     07FD  120A  118A  2E7E   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307     0048                     __pbssBANK0:
   308     0048                     _row:
   309     0048                     	ds	4
   310     004C                     _column:
   311     004C                     	ds	3
   312     004F                     _r:
   313     004F                     	ds	1
   314     0050                     _c:
   315     0050                     	ds	1
   316     0051                     _j:
   317     0051                     	ds	1
   318     0052                     _i:
   319     0052                     	ds	1
   320                           
   321                           	psect	dataBANK0
   322     003C                     __pdataBANK0:
   323     003C                     _Keypad:
   324     003C                     	ds	12
   325                           
   326                           	psect	inittext
   327     04B8                     init_fetch0:	
   328                           ;	Called with low address in FSR and high address in W
   329                           
   330     04B8  087E               	movf	btemp,w
   331     04B9  008A               	movwf	10
   332     04BA  087F               	movf	btemp+1,w
   333     04BB  0082               	movwf	2
   334     04BC                     init_ram0:	
   335                           ;Called with:
   336                           ;	high address of idata address in btemp 
   337                           ;	low address of idata address in btemp+1 
   338                           ;	low address of data in FSR
   339                           ;	high address + 1 of data in btemp-1
   340                           
   341     04BC  120A  118A  24B8  120A  118A  	fcall	init_fetch0
   342     04C1  0080               	movwf	0
   343     04C2  0A84               	incf	4,f
   344     04C3  0804               	movf	4,w
   345     04C4  067D               	xorwf	btemp+-1,w
   346     04C5  1903               	btfsc	3,2
   347     04C6  3400               	retlw	0
   348     04C7  0AFF               	incf	btemp+1,f
   349     04C8  1903               	btfsc	3,2
   350     04C9  0AFE               	incf	btemp,f
   351     04CA  2CBC               	goto	init_ram0
   352                           
   353                           	psect	cstackCOMMON
   354     0070                     __pcstackCOMMON:
   355     0070                     ?_int_Port:
   356     0070                     ??_int_Port:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ?_lcd_init:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_keybad_4x3:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ??_keybad_4x3:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_lcd_cmd:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ??_lcd_cmd:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_lcd_data:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ??_lcd_data:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_strlen:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?___lwdiv:	
   387                           ; 2 bytes @ 0x0
   388                           
   389     0070                     ___lwdiv@divisor:	
   390                           ; 2 bytes @ 0x0
   391                           
   392     0070                     strlen@s:	
   393                           ; 2 bytes @ 0x0
   394                           
   395                           
   396                           ; 2 bytes @ 0x0
   397     0070                     	ds	2
   398     0072                     ??_strlen:
   399     0072                     lcd_cmd@cmd:	
   400                           ; 1 bytes @ 0x2
   401                           
   402     0072                     lcd_data@data:	
   403                           ; 1 bytes @ 0x2
   404                           
   405     0072                     ___lwdiv@dividend:	
   406                           ; 1 bytes @ 0x2
   407                           
   408     0072                     strlen@cp:	
   409                           ; 2 bytes @ 0x2
   410                           
   411                           
   412                           ; 2 bytes @ 0x2
   413     0072                     	ds	1
   414     0073                     ??_lcd_init:
   415                           
   416                           ; 1 bytes @ 0x3
   417     0073                     	ds	1
   418     0074                     ?_lcd_caracter:
   419     0074                     ??___lwdiv:	
   420                           ; 1 bytes @ 0x4
   421                           
   422     0074                     lcd_caracter@str:	
   423                           ; 1 bytes @ 0x4
   424                           
   425     0074                     ___lwdiv@quotient:	
   426                           ; 2 bytes @ 0x4
   427                           
   428                           
   429                           ; 2 bytes @ 0x4
   430     0074                     	ds	2
   431     0076                     ??_lcd_caracter:
   432     0076                     lcd_caracter@num:	
   433                           ; 1 bytes @ 0x6
   434                           
   435     0076                     ___lwdiv@counter:	
   436                           ; 1 bytes @ 0x6
   437                           
   438                           
   439                           ; 1 bytes @ 0x6
   440     0076                     	ds	1
   441     0077                     ?___lwmod:
   442     0077                     lcd_caracter@i:	
   443                           ; 2 bytes @ 0x7
   444                           
   445     0077                     ___lwmod@divisor:	
   446                           ; 1 bytes @ 0x7
   447                           
   448                           
   449                           ; 2 bytes @ 0x7
   450     0077                     	ds	2
   451     0079                     ___lwmod@dividend:
   452                           
   453                           ; 2 bytes @ 0x9
   454     0079                     	ds	2
   455     007B                     ??___lwmod:
   456     007B                     ___lwmod@counter:	
   457                           ; 1 bytes @ 0xB
   458                           
   459                           
   460                           ; 1 bytes @ 0xB
   461     007B                     	ds	1
   462     007C                     ?_lcd_number:
   463     007C                     lcd_number@nb:	
   464                           ; 1 bytes @ 0xC
   465                           
   466                           
   467                           ; 2 bytes @ 0xC
   468     007C                     	ds	2
   469     007E                     ??_lcd_number:
   470                           
   471                           	psect	cstackBANK0
   472     0020                     __pcstackBANK0:	
   473                           ; 1 bytes @ 0xE
   474                           
   475     0020                     ?_sprintf:
   476     0020                     sprintf@f:	
   477                           ; 2 bytes @ 0x0
   478                           
   479                           
   480                           ; 1 bytes @ 0x0
   481     0020                     	ds	3
   482     0023                     ??_sprintf:
   483                           
   484                           ; 1 bytes @ 0x3
   485     0023                     	ds	3
   486     0026                     sprintf@ap:
   487                           
   488                           ; 1 bytes @ 0x6
   489     0026                     	ds	1
   490     0027                     sprintf@flag:
   491                           
   492                           ; 1 bytes @ 0x7
   493     0027                     	ds	1
   494     0028                     sprintf@prec:
   495                           
   496                           ; 1 bytes @ 0x8
   497     0028                     	ds	1
   498     0029                     sprintf@val:
   499                           
   500                           ; 2 bytes @ 0x9
   501     0029                     	ds	2
   502     002B                     sprintf@sp:
   503                           
   504                           ; 1 bytes @ 0xB
   505     002B                     	ds	1
   506     002C                     sprintf@c:
   507                           
   508                           ; 1 bytes @ 0xC
   509     002C                     	ds	1
   510     002D                     lcd_number@strNb:
   511                           
   512                           ; 10 bytes @ 0xD
   513     002D                     	ds	10
   514     0037                     ??_main:
   515                           
   516                           ; 1 bytes @ 0x17
   517     0037                     	ds	5
   518                           
   519                           	psect	maintext
   520     067E                     __pmaintext:	
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 43 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : B00/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       5       0       0       0
   543 ;;      Totals:         0       5       0       0       0
   544 ;;Total ram usage:        5 bytes
   545 ;; Hardware stack levels required when called: 4
   546 ;; This function calls:
   547 ;;		_int_Port
   548 ;;		_keybad_4x3
   549 ;;		_lcd_caracter
   550 ;;		_lcd_cmd
   551 ;;		_lcd_init
   552 ;;		_lcd_number
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558     067E                     _main:	
   559                           ;psect for function _main
   560                           
   561     067E                     l1217:	
   562                           ;incstack = 0
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   564                           
   565                           
   566                           ;main.c: 44:     int_Port();
   567     067E  120A  118A  24A1  120A  118A  	fcall	_int_Port
   568                           
   569                           ;main.c: 45:     lcd_init();
   570     0683  120A  118A  24E3  120A  118A  	fcall	_lcd_init
   571     0688                     l1219:
   572                           
   573                           ;main.c: 46:     lcd_caracter("T= ");
   574     0688  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   575     0689  00F4               	movwf	lcd_caracter@str
   576     068A  3080               	movlw	128
   577     068B  00F5               	movwf	lcd_caracter@str+1
   578     068C  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   579     0691                     l1221:
   580                           
   581                           ;main.c: 48:         keybad_4x3();
   582     0691  120A  118A  2631  120A  118A  	fcall	_keybad_4x3
   583                           
   584                           ;main.c: 49:         lcd_cmd(0x80);
   585     0696  3080               	movlw	128
   586     0697  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
   587     069C                     l1223:
   588                           
   589                           ;main.c: 50:         lcd_caracter("keypad= ");
   590     069C  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   591     069D  00F4               	movwf	lcd_caracter@str
   592     069E  3080               	movlw	128
   593     069F  00F5               	movwf	lcd_caracter@str+1
   594     06A0  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   595     06A5                     l1225:
   596                           
   597                           ;main.c: 51:         lcd_number(Keypad[i][j]);
   598     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   599     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   600     06A7  0852               	movf	_i,w
   601     06A8  00B7               	movwf	??_main
   602     06A9  3002               	movlw	2
   603     06AA                     u605:
   604     06AA  1003               	clrc
   605     06AB  0DB7               	rlf	??_main,f
   606     06AC  3EFF               	addlw	-1
   607     06AD  1D03               	skipz
   608     06AE  2EAA               	goto	u605
   609     06AF  303C               	movlw	(low (_Keypad| 0))& (0+255)
   610     06B0  0737               	addwf	??_main,w
   611     06B1  00B8               	movwf	??_main+1
   612     06B2  0851               	movf	_j,w
   613     06B3  0738               	addwf	??_main+1,w
   614     06B4  00B9               	movwf	??_main+2
   615     06B5  0839               	movf	??_main+2,w
   616     06B6  0084               	movwf	4
   617     06B7  1383               	bcf	3,7	;select IRP bank0
   618     06B8  0800               	movf	0,w
   619     06B9  00BA               	movwf	??_main+3
   620     06BA  01BB               	clrf	??_main+4
   621     06BB  083A               	movf	??_main+3,w
   622     06BC  00FC               	movwf	lcd_number@nb
   623     06BD  083B               	movf	??_main+4,w
   624     06BE  00FD               	movwf	lcd_number@nb+1
   625     06BF  120A  118A  24CB  120A  118A  	fcall	_lcd_number
   626     06C4                     l1227:
   627                           
   628                           ;main.c: 52:         if(i == 3 && j== 2){
   629     06C4  3003               	movlw	3
   630     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   631     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   632     06C7  0652               	xorwf	_i,w
   633     06C8  1D03               	btfss	3,2
   634     06C9  2ECB               	goto	u611
   635     06CA  2ECC               	goto	u610
   636     06CB                     u611:
   637     06CB  2EDB               	goto	l1233
   638     06CC                     u610:
   639     06CC                     l1229:
   640     06CC  3002               	movlw	2
   641     06CD  0651               	xorwf	_j,w
   642     06CE  1D03               	btfss	3,2
   643     06CF  2ED1               	goto	u621
   644     06D0  2ED2               	goto	u620
   645     06D1                     u621:
   646     06D1  2EDB               	goto	l1233
   647     06D2                     u620:
   648     06D2                     l1231:
   649                           
   650                           ;main.c: 53:             lcd_caracter("#");
   651     06D2  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   652     06D3  00F4               	movwf	lcd_caracter@str
   653     06D4  3080               	movlw	128
   654     06D5  00F5               	movwf	lcd_caracter@str+1
   655     06D6  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   656     06DB                     l1233:
   657                           
   658                           ;main.c: 55:         if(i == 3 && j == 0){
   659     06DB  3003               	movlw	3
   660     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   661     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   662     06DE  0652               	xorwf	_i,w
   663     06DF  1D03               	btfss	3,2
   664     06E0  2EE2               	goto	u631
   665     06E1  2EE3               	goto	u630
   666     06E2                     u631:
   667     06E2  2EF1               	goto	l1239
   668     06E3                     u630:
   669     06E3                     l1235:
   670     06E3  0851               	movf	_j,w
   671     06E4  1D03               	btfss	3,2
   672     06E5  2EE7               	goto	u641
   673     06E6  2EE8               	goto	u640
   674     06E7                     u641:
   675     06E7  2EF1               	goto	l1239
   676     06E8                     u640:
   677     06E8                     l1237:
   678                           
   679                           ;main.c: 56:             lcd_caracter("*");
   680     06E8  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   681     06E9  00F4               	movwf	lcd_caracter@str
   682     06EA  3080               	movlw	128
   683     06EB  00F5               	movwf	lcd_caracter@str+1
   684     06EC  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   685     06F1                     l1239:
   686                           
   687                           ;main.c: 59:         _delay((unsigned long)((200)*(20000000/4000.0)));
   688     06F1  3006               	movlw	6
   689     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   690     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   691     06F4  00B9               	movwf	??_main+2
   692     06F5  3013               	movlw	19
   693     06F6  00B8               	movwf	??_main+1
   694     06F7  30AD               	movlw	173
   695     06F8  00B7               	movwf	??_main
   696     06F9                     u657:
   697     06F9  0BB7               	decfsz	??_main,f
   698     06FA  2EF9               	goto	u657
   699     06FB  0BB8               	decfsz	??_main+1,f
   700     06FC  2EF9               	goto	u657
   701     06FD  0BB9               	decfsz	??_main+2,f
   702     06FE  2EF9               	goto	u657
   703     06FF                     l1241:
   704                           
   705                           ;main.c: 60:         lcd_cmd(0x01);
   706     06FF  3001               	movlw	1
   707     0700  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
   708     0705  2E91               	goto	l1221
   709     0706  120A  118A  2800   	ljmp	start
   710     0709                     __end_of_main:
   711                           
   712                           	psect	text1
   713     04CB                     __ptext1:	
   714 ;; *************** function _lcd_number *****************
   715 ;; Defined at:
   716 ;;		line 116 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  nb              2   12[COMMON] int 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  strNb          10   13[BANK0 ] unsigned char [10]
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         2       0       0       0       0
   731 ;;      Locals:         0      10       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         2      10       0       0       0
   734 ;;Total ram usage:       12 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 3
   737 ;; This function calls:
   738 ;;		_lcd_caracter
   739 ;;		_sprintf
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745     04CB                     _lcd_number:	
   746                           ;psect for function _lcd_number
   747                           
   748     04CB                     l1215:	
   749                           ;incstack = 0
   750                           ; Regs used in _lcd_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   751                           
   752                           
   753                           ;main.c: 117:     unsigned char strNb[10];;main.c: 118:     sprintf(strNb, "%d", nb) ;
   754     04CB  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   755     04CC  1283               	bcf	3,5	;RP0=0, select bank0
   756     04CD  1303               	bcf	3,6	;RP1=0, select bank0
   757     04CE  00A0               	movwf	sprintf@f
   758     04CF  087D               	movf	lcd_number@nb+1,w
   759     04D0  00A2               	movwf	?_sprintf+2
   760     04D1  087C               	movf	lcd_number@nb,w
   761     04D2  00A1               	movwf	?_sprintf+1
   762     04D3  302D               	movlw	(low (lcd_number@strNb| 0))& (0+255)
   763     04D4  120A  118A  2709  120A  118A  	fcall	_sprintf
   764                           
   765                           ;main.c: 119:     lcd_caracter(strNb);
   766     04D9  302D               	movlw	(low (lcd_number@strNb| 0))& (0+255)
   767     04DA  00F4               	movwf	lcd_caracter@str
   768     04DB  3000               	movlw	0
   769     04DC  00F5               	movwf	lcd_caracter@str+1
   770     04DD  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   771     04E2                     l73:
   772     04E2  0008               	return
   773     04E3                     __end_of_lcd_number:
   774                           
   775                           	psect	text2
   776     0709                     __ptext2:	
   777 ;; *************** function _sprintf *****************
   778 ;; Defined at:
   779 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  sp              1    wreg     PTR unsigned char 
   782 ;;		 -> lcd_number@strNb(10), 
   783 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   784 ;;		 -> STR_5(3), 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   787 ;;		 -> lcd_number@strNb(10), 
   788 ;;  tmpval          4    0        struct .
   789 ;;  val             2    9[BANK0 ] unsigned int 
   790 ;;  cp              2    0        PTR const unsigned char 
   791 ;;  len             2    0        unsigned int 
   792 ;;  c               1   12[BANK0 ] unsigned char 
   793 ;;  prec            1    8[BANK0 ] char 
   794 ;;  flag            1    7[BANK0 ] unsigned char 
   795 ;;  ap              1    6[BANK0 ] PTR void [1]
   796 ;;		 -> ?_sprintf(2), 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2    0[BANK0 ] int 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       3       0       0       0
   807 ;;      Locals:         0       7       0       0       0
   808 ;;      Temps:          0       3       0       0       0
   809 ;;      Totals:         0      13       0       0       0
   810 ;;Total ram usage:       13 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 1
   813 ;; This function calls:
   814 ;;		___lwdiv
   815 ;;		___lwmod
   816 ;; This function is called by:
   817 ;;		_lcd_number
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821     0709                     _sprintf:	
   822                           ;psect for function _sprintf
   823                           
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   827                           ;sprintf@sp stored from wreg
   828     0709  1283               	bcf	3,5	;RP0=0, select bank0
   829     070A  1303               	bcf	3,6	;RP1=0, select bank0
   830     070B  00AB               	movwf	sprintf@sp
   831     070C                     l1101:
   832                           
   833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   834     070C  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   835     070D  00A6               	movwf	sprintf@ap
   836                           
   837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   838     070E  2FCE               	goto	l1155
   839     070F                     l1103:
   840                           
   841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   842     070F  3025               	movlw	37
   843     0710  062C               	xorwf	sprintf@c,w
   844     0711  1903               	btfsc	3,2
   845     0712  2F14               	goto	u501
   846     0713  2F15               	goto	u500
   847     0714                     u501:
   848     0714  2F1F               	goto	l1109
   849     0715                     u500:
   850     0715                     l1105:
   851                           
   852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   853     0715  082B               	movf	sprintf@sp,w
   854     0716  0084               	movwf	4
   855     0717  082C               	movf	sprintf@c,w
   856     0718  1383               	bcf	3,7	;select IRP bank0
   857     0719  0080               	movwf	0
   858     071A                     l1107:
   859     071A  3001               	movlw	1
   860     071B  00FF               	movwf	btemp+1
   861     071C  087F               	movf	btemp+1,w
   862     071D  07AB               	addwf	sprintf@sp,f
   863                           
   864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   865     071E  2FCE               	goto	l1155
   866     071F                     l1109:
   867                           
   868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   869     071F  01A7               	clrf	sprintf@flag
   870     0720                     l1113:	
   871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   872                           
   873     0720  3001               	movlw	1
   874     0721  07A0               	addwf	sprintf@f,f
   875     0722  30FF               	movlw	-1
   876     0723  0720               	addwf	sprintf@f,w
   877     0724  0084               	movwf	4
   878     0725  120A  118A  200D  120A  118A  	fcall	stringdir
   879     072A  00AC               	movwf	sprintf@c
   880     072B  00A3               	movwf	??_sprintf
   881     072C  01A4               	clrf	??_sprintf+1
   882                           
   883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 1, Range of values is 0 to 0
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte            4     3 (average)
   889                           ; direct_byte           11     8 (fixed)
   890                           ; jumptable            260     6 (fixed)
   891                           ;	Chosen strategy is simple_byte
   892     072D  0824               	movf	??_sprintf+1,w
   893     072E  3A00               	xorlw	0	; case 0
   894     072F  1903               	skipnz
   895     0730  2F32               	goto	l1263
   896     0731  2FCE               	goto	l1155
   897     0732                     l1263:
   898                           
   899                           ; Switch size 1, requested type "simple"
   900                           ; Number of cases is 3, Range of values is 0 to 105
   901                           ; switch strategies available:
   902                           ; Name         Instructions Cycles
   903                           ; simple_byte           10     6 (average)
   904                           ; jumptable            260     6 (fixed)
   905                           ;	Chosen strategy is simple_byte
   906     0732  0823               	movf	??_sprintf,w
   907     0733  3A00               	xorlw	0	; case 0
   908     0734  1903               	skipnz
   909     0735  2FDE               	goto	l1157
   910     0736  3A64               	xorlw	100	; case 100
   911     0737  1903               	skipnz
   912     0738  2F3D               	goto	l1115
   913     0739  3A0D               	xorlw	13	; case 105
   914     073A  1903               	skipnz
   915     073B  2F3D               	goto	l1115
   916     073C  2FCE               	goto	l1155
   917     073D                     l1115:
   918                           
   919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   920     073D  0826               	movf	sprintf@ap,w
   921     073E  0084               	movwf	4
   922     073F  1383               	bcf	3,7	;select IRP bank0
   923     0740  0800               	movf	0,w
   924     0741  00A9               	movwf	sprintf@val
   925     0742  0A84               	incf	4,f
   926     0743  0800               	movf	0,w
   927     0744  00AA               	movwf	sprintf@val+1
   928     0745                     l1117:
   929     0745  3002               	movlw	2
   930     0746  00FF               	movwf	btemp+1
   931     0747  087F               	movf	btemp+1,w
   932     0748  07A6               	addwf	sprintf@ap,f
   933     0749                     l1119:
   934                           
   935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   936     0749  1FAA               	btfss	sprintf@val+1,7
   937     074A  2F4C               	goto	u511
   938     074B  2F4D               	goto	u510
   939     074C                     u511:
   940     074C  2F56               	goto	l1125
   941     074D                     u510:
   942     074D                     l1121:
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   945     074D  3003               	movlw	3
   946     074E  00FF               	movwf	btemp+1
   947     074F  087F               	movf	btemp+1,w
   948     0750  04A7               	iorwf	sprintf@flag,f
   949     0751                     l1123:
   950                           
   951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   952     0751  09A9               	comf	sprintf@val,f
   953     0752  09AA               	comf	sprintf@val+1,f
   954     0753  0AA9               	incf	sprintf@val,f
   955     0754  1903               	skipnz
   956     0755  0AAA               	incf	sprintf@val+1,f
   957     0756                     l1125:
   958                           
   959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   960     0756  01AC               	clrf	sprintf@c
   961     0757  0AAC               	incf	sprintf@c,f
   962     0758                     l1131:
   963                           
   964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   965     0758  082C               	movf	sprintf@c,w
   966     0759  00A3               	movwf	??_sprintf
   967     075A  0723               	addwf	??_sprintf,w
   968     075B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   969     075C  0084               	movwf	4
   970     075D  120A  118A  200D  120A  118A  	fcall	stringdir
   971     0762  00A4               	movwf	??_sprintf+1
   972     0763  120A  118A  200D  120A  118A  	fcall	stringdir
   973     0768  00A5               	movwf	??_sprintf+2
   974     0769  0825               	movf	??_sprintf+2,w
   975     076A  022A               	subwf	sprintf@val+1,w
   976     076B  1D03               	skipz
   977     076C  2F6F               	goto	u525
   978     076D  0824               	movf	??_sprintf+1,w
   979     076E  0229               	subwf	sprintf@val,w
   980     076F                     u525:
   981     076F  1803               	skipnc
   982     0770  2F72               	goto	u521
   983     0771  2F73               	goto	u520
   984     0772                     u521:
   985     0772  2F74               	goto	l1135
   986     0773                     u520:
   987     0773  2F7E               	goto	l1139
   988     0774                     l1135:
   989     0774  3001               	movlw	1
   990     0775  00FF               	movwf	btemp+1
   991     0776  087F               	movf	btemp+1,w
   992     0777  07AC               	addwf	sprintf@c,f
   993     0778                     l1137:
   994     0778  3005               	movlw	5
   995     0779  062C               	xorwf	sprintf@c,w
   996     077A  1D03               	btfss	3,2
   997     077B  2F7D               	goto	u531
   998     077C  2F7E               	goto	u530
   999     077D                     u531:
  1000     077D  2F58               	goto	l1131
  1001     077E                     u530:
  1002     077E                     l1139:
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1005     077E  0827               	movf	sprintf@flag,w
  1006     077F  3903               	andlw	3
  1007     0780  1903               	btfsc	3,2
  1008     0781  2F83               	goto	u541
  1009     0782  2F84               	goto	u540
  1010     0783                     u541:
  1011     0783  2F8D               	goto	l1145
  1012     0784                     u540:
  1013     0784                     l1141:
  1014                           
  1015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1016     0784  082B               	movf	sprintf@sp,w
  1017     0785  0084               	movwf	4
  1018     0786  302D               	movlw	45
  1019     0787  1383               	bcf	3,7	;select IRP bank0
  1020     0788  0080               	movwf	0
  1021     0789                     l1143:
  1022     0789  3001               	movlw	1
  1023     078A  00FF               	movwf	btemp+1
  1024     078B  087F               	movf	btemp+1,w
  1025     078C  07AB               	addwf	sprintf@sp,f
  1026     078D                     l1145:
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1029     078D  082C               	movf	sprintf@c,w
  1030     078E  00A8               	movwf	sprintf@prec
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1033     078F  2FC5               	goto	l1153
  1034     0790                     l1147:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1037     0790  300A               	movlw	10
  1038     0791  00F7               	movwf	___lwmod@divisor
  1039     0792  3000               	movlw	0
  1040     0793  00F8               	movwf	___lwmod@divisor+1
  1041     0794  0828               	movf	sprintf@prec,w
  1042     0795  00A3               	movwf	??_sprintf
  1043     0796  0723               	addwf	??_sprintf,w
  1044     0797  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1045     0798  0084               	movwf	4
  1046     0799  120A  118A  200D  120A  118A  	fcall	stringdir
  1047     079E  00F0               	movwf	___lwdiv@divisor
  1048     079F  120A  118A  200D  120A  118A  	fcall	stringdir
  1049     07A4  00F1               	movwf	___lwdiv@divisor+1
  1050     07A5  082A               	movf	sprintf@val+1,w
  1051     07A6  00F3               	movwf	___lwdiv@dividend+1
  1052     07A7  0829               	movf	sprintf@val,w
  1053     07A8  00F2               	movwf	___lwdiv@dividend
  1054     07A9  120A  118A  25ED  120A  118A  	fcall	___lwdiv
  1055     07AE  0871               	movf	?___lwdiv+1,w
  1056     07AF  00FA               	movwf	___lwmod@dividend+1
  1057     07B0  0870               	movf	?___lwdiv,w
  1058     07B1  00F9               	movwf	___lwmod@dividend
  1059     07B2  120A  118A  25B3  120A  118A  	fcall	___lwmod
  1060     07B7  0877               	movf	?___lwmod,w
  1061     07B8  3E30               	addlw	48
  1062     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1063     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1064     07BB  00AC               	movwf	sprintf@c
  1065     07BC                     l1149:
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1068     07BC  082B               	movf	sprintf@sp,w
  1069     07BD  0084               	movwf	4
  1070     07BE  082C               	movf	sprintf@c,w
  1071     07BF  1383               	bcf	3,7	;select IRP bank0
  1072     07C0  0080               	movwf	0
  1073     07C1                     l1151:
  1074     07C1  3001               	movlw	1
  1075     07C2  00FF               	movwf	btemp+1
  1076     07C3  087F               	movf	btemp+1,w
  1077     07C4  07AB               	addwf	sprintf@sp,f
  1078     07C5                     l1153:
  1079                           
  1080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1081     07C5  30FF               	movlw	255
  1082     07C6  00FF               	movwf	btemp+1
  1083     07C7  087F               	movf	btemp+1,w
  1084     07C8  07A8               	addwf	sprintf@prec,f
  1085     07C9  0A28               	incf	sprintf@prec,w
  1086     07CA  1D03               	btfss	3,2
  1087     07CB  2FCD               	goto	u551
  1088     07CC  2FCE               	goto	u550
  1089     07CD                     u551:
  1090     07CD  2F90               	goto	l1147
  1091     07CE                     u550:
  1092     07CE                     l1155:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1095     07CE  3001               	movlw	1
  1096     07CF  07A0               	addwf	sprintf@f,f
  1097     07D0  30FF               	movlw	-1
  1098     07D1  0720               	addwf	sprintf@f,w
  1099     07D2  0084               	movwf	4
  1100     07D3  120A  118A  200D  120A  118A  	fcall	stringdir
  1101     07D8  00AC               	movwf	sprintf@c
  1102     07D9  082C               	movf	sprintf@c,w
  1103     07DA  1D03               	btfss	3,2
  1104     07DB  2FDD               	goto	u561
  1105     07DC  2FDE               	goto	u560
  1106     07DD                     u561:
  1107     07DD  2F0F               	goto	l1103
  1108     07DE                     u560:
  1109     07DE                     l1157:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1112     07DE  082B               	movf	sprintf@sp,w
  1113     07DF  0084               	movwf	4
  1114     07E0  1383               	bcf	3,7	;select IRP bank0
  1115     07E1  0180               	clrf	0
  1116     07E2                     l191:
  1117     07E2  0008               	return
  1118     07E3                     __end_of_sprintf:
  1119                           
  1120                           	psect	text3
  1121     05B3                     __ptext3:	
  1122 ;; *************** function ___lwmod *****************
  1123 ;; Defined at:
  1124 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  divisor         2    7[COMMON] unsigned int 
  1127 ;;  dividend        2    9[COMMON] unsigned int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  counter         1   11[COMMON] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    7[COMMON] unsigned int 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, btemp+1
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         4       0       0       0       0
  1140 ;;      Locals:         1       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         5       0       0       0       0
  1143 ;;Total ram usage:        5 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_sprintf
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152     05B3                     ___lwmod:	
  1153                           ;psect for function ___lwmod
  1154                           
  1155     05B3                     l1045:	
  1156                           ;incstack = 0
  1157                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1158                           
  1159     05B3  0877               	movf	___lwmod@divisor,w
  1160     05B4  0478               	iorwf	___lwmod@divisor+1,w
  1161     05B5  1903               	btfsc	3,2
  1162     05B6  2DB8               	goto	u421
  1163     05B7  2DB9               	goto	u420
  1164     05B8                     u421:
  1165     05B8  2DE8               	goto	l1063
  1166     05B9                     u420:
  1167     05B9                     l1047:
  1168     05B9  01FB               	clrf	___lwmod@counter
  1169     05BA  0AFB               	incf	___lwmod@counter,f
  1170     05BB  2DC7               	goto	l1053
  1171     05BC                     l1049:
  1172     05BC  3001               	movlw	1
  1173     05BD                     u435:
  1174     05BD  1003               	clrc
  1175     05BE  0DF7               	rlf	___lwmod@divisor,f
  1176     05BF  0DF8               	rlf	___lwmod@divisor+1,f
  1177     05C0  3EFF               	addlw	-1
  1178     05C1  1D03               	skipz
  1179     05C2  2DBD               	goto	u435
  1180     05C3                     l1051:
  1181     05C3  3001               	movlw	1
  1182     05C4  00FF               	movwf	btemp+1
  1183     05C5  087F               	movf	btemp+1,w
  1184     05C6  07FB               	addwf	___lwmod@counter,f
  1185     05C7                     l1053:
  1186     05C7  1FF8               	btfss	___lwmod@divisor+1,7
  1187     05C8  2DCA               	goto	u441
  1188     05C9  2DCB               	goto	u440
  1189     05CA                     u441:
  1190     05CA  2DBC               	goto	l1049
  1191     05CB                     u440:
  1192     05CB                     l1055:
  1193     05CB  0878               	movf	___lwmod@divisor+1,w
  1194     05CC  027A               	subwf	___lwmod@dividend+1,w
  1195     05CD  1D03               	skipz
  1196     05CE  2DD1               	goto	u455
  1197     05CF  0877               	movf	___lwmod@divisor,w
  1198     05D0  0279               	subwf	___lwmod@dividend,w
  1199     05D1                     u455:
  1200     05D1  1C03               	skipc
  1201     05D2  2DD4               	goto	u451
  1202     05D3  2DD5               	goto	u450
  1203     05D4                     u451:
  1204     05D4  2DDB               	goto	l1059
  1205     05D5                     u450:
  1206     05D5                     l1057:
  1207     05D5  0877               	movf	___lwmod@divisor,w
  1208     05D6  02F9               	subwf	___lwmod@dividend,f
  1209     05D7  0878               	movf	___lwmod@divisor+1,w
  1210     05D8  1C03               	skipc
  1211     05D9  03FA               	decf	___lwmod@dividend+1,f
  1212     05DA  02FA               	subwf	___lwmod@dividend+1,f
  1213     05DB                     l1059:
  1214     05DB  3001               	movlw	1
  1215     05DC                     u465:
  1216     05DC  1003               	clrc
  1217     05DD  0CF8               	rrf	___lwmod@divisor+1,f
  1218     05DE  0CF7               	rrf	___lwmod@divisor,f
  1219     05DF  3EFF               	addlw	-1
  1220     05E0  1D03               	skipz
  1221     05E1  2DDC               	goto	u465
  1222     05E2                     l1061:
  1223     05E2  3001               	movlw	1
  1224     05E3  02FB               	subwf	___lwmod@counter,f
  1225     05E4  1D03               	btfss	3,2
  1226     05E5  2DE7               	goto	u471
  1227     05E6  2DE8               	goto	u470
  1228     05E7                     u471:
  1229     05E7  2DCB               	goto	l1055
  1230     05E8                     u470:
  1231     05E8                     l1063:
  1232     05E8  087A               	movf	___lwmod@dividend+1,w
  1233     05E9  00F8               	movwf	?___lwmod+1
  1234     05EA  0879               	movf	___lwmod@dividend,w
  1235     05EB  00F7               	movwf	?___lwmod
  1236     05EC                     l477:
  1237     05EC  0008               	return
  1238     05ED                     __end_of___lwmod:
  1239                           
  1240                           	psect	text4
  1241     05ED                     __ptext4:	
  1242 ;; *************** function ___lwdiv *****************
  1243 ;; Defined at:
  1244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  divisor         2    0[COMMON] unsigned int 
  1247 ;;  dividend        2    2[COMMON] unsigned int 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  quotient        2    4[COMMON] unsigned int 
  1250 ;;  counter         1    6[COMMON] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2    0[COMMON] unsigned int 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, btemp+1
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         4       0       0       0       0
  1261 ;;      Locals:         3       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0
  1263 ;;      Totals:         7       0       0       0       0
  1264 ;;Total ram usage:        7 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_sprintf
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     05ED                     ___lwdiv:	
  1274                           ;psect for function ___lwdiv
  1275                           
  1276     05ED                     l1019:	
  1277                           ;incstack = 0
  1278                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1279                           
  1280     05ED  01F4               	clrf	___lwdiv@quotient
  1281     05EE  01F5               	clrf	___lwdiv@quotient+1
  1282     05EF                     l1021:
  1283     05EF  0870               	movf	___lwdiv@divisor,w
  1284     05F0  0471               	iorwf	___lwdiv@divisor+1,w
  1285     05F1  1903               	btfsc	3,2
  1286     05F2  2DF4               	goto	u351
  1287     05F3  2DF5               	goto	u350
  1288     05F4                     u351:
  1289     05F4  2E2C               	goto	l1041
  1290     05F5                     u350:
  1291     05F5                     l1023:
  1292     05F5  01F6               	clrf	___lwdiv@counter
  1293     05F6  0AF6               	incf	___lwdiv@counter,f
  1294     05F7  2E03               	goto	l1029
  1295     05F8                     l1025:
  1296     05F8  3001               	movlw	1
  1297     05F9                     u365:
  1298     05F9  1003               	clrc
  1299     05FA  0DF0               	rlf	___lwdiv@divisor,f
  1300     05FB  0DF1               	rlf	___lwdiv@divisor+1,f
  1301     05FC  3EFF               	addlw	-1
  1302     05FD  1D03               	skipz
  1303     05FE  2DF9               	goto	u365
  1304     05FF                     l1027:
  1305     05FF  3001               	movlw	1
  1306     0600  00FF               	movwf	btemp+1
  1307     0601  087F               	movf	btemp+1,w
  1308     0602  07F6               	addwf	___lwdiv@counter,f
  1309     0603                     l1029:
  1310     0603  1FF1               	btfss	___lwdiv@divisor+1,7
  1311     0604  2E06               	goto	u371
  1312     0605  2E07               	goto	u370
  1313     0606                     u371:
  1314     0606  2DF8               	goto	l1025
  1315     0607                     u370:
  1316     0607                     l1031:
  1317     0607  3001               	movlw	1
  1318     0608                     u385:
  1319     0608  1003               	clrc
  1320     0609  0DF4               	rlf	___lwdiv@quotient,f
  1321     060A  0DF5               	rlf	___lwdiv@quotient+1,f
  1322     060B  3EFF               	addlw	-1
  1323     060C  1D03               	skipz
  1324     060D  2E08               	goto	u385
  1325     060E  0871               	movf	___lwdiv@divisor+1,w
  1326     060F  0273               	subwf	___lwdiv@dividend+1,w
  1327     0610  1D03               	skipz
  1328     0611  2E14               	goto	u395
  1329     0612  0870               	movf	___lwdiv@divisor,w
  1330     0613  0272               	subwf	___lwdiv@dividend,w
  1331     0614                     u395:
  1332     0614  1C03               	skipc
  1333     0615  2E17               	goto	u391
  1334     0616  2E18               	goto	u390
  1335     0617                     u391:
  1336     0617  2E1F               	goto	l1037
  1337     0618                     u390:
  1338     0618                     l1033:
  1339     0618  0870               	movf	___lwdiv@divisor,w
  1340     0619  02F2               	subwf	___lwdiv@dividend,f
  1341     061A  0871               	movf	___lwdiv@divisor+1,w
  1342     061B  1C03               	skipc
  1343     061C  03F3               	decf	___lwdiv@dividend+1,f
  1344     061D  02F3               	subwf	___lwdiv@dividend+1,f
  1345     061E                     l1035:
  1346     061E  1474               	bsf	___lwdiv@quotient,0
  1347     061F                     l1037:
  1348     061F  3001               	movlw	1
  1349     0620                     u405:
  1350     0620  1003               	clrc
  1351     0621  0CF1               	rrf	___lwdiv@divisor+1,f
  1352     0622  0CF0               	rrf	___lwdiv@divisor,f
  1353     0623  3EFF               	addlw	-1
  1354     0624  1D03               	skipz
  1355     0625  2E20               	goto	u405
  1356     0626                     l1039:
  1357     0626  3001               	movlw	1
  1358     0627  02F6               	subwf	___lwdiv@counter,f
  1359     0628  1D03               	btfss	3,2
  1360     0629  2E2B               	goto	u411
  1361     062A  2E2C               	goto	u410
  1362     062B                     u411:
  1363     062B  2E07               	goto	l1031
  1364     062C                     u410:
  1365     062C                     l1041:
  1366     062C  0875               	movf	___lwdiv@quotient+1,w
  1367     062D  00F1               	movwf	?___lwdiv+1
  1368     062E  0874               	movf	___lwdiv@quotient,w
  1369     062F  00F0               	movwf	?___lwdiv
  1370     0630                     l467:
  1371     0630  0008               	return
  1372     0631                     __end_of___lwdiv:
  1373                           
  1374                           	psect	text5
  1375     0526                     __ptext5:	
  1376 ;; *************** function _lcd_caracter *****************
  1377 ;; Defined at:
  1378 ;;		line 110 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  str             2    4[COMMON] PTR const unsigned char 
  1381 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1382 ;;		 -> STR_1(4), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  i               1    7[COMMON] unsigned char 
  1385 ;;  num             1    6[COMMON] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         2       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0
  1398 ;;      Totals:         4       0       0       0       0
  1399 ;;Total ram usage:        4 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		_lcd_data
  1404 ;;		_strlen
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;;		_lcd_number
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411     0526                     _lcd_caracter:	
  1412                           ;psect for function _lcd_caracter
  1413                           
  1414     0526                     l1067:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _lcd_caracter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1417                           
  1418                           
  1419                           ;main.c: 111:     unsigned char i ,num = strlen(str) ;
  1420     0526  0874               	movf	lcd_caracter@str,w
  1421     0527  00F0               	movwf	strlen@s
  1422     0528  0875               	movf	lcd_caracter@str+1,w
  1423     0529  00F1               	movwf	strlen@s+1
  1424     052A  120A  118A  2502  120A  118A  	fcall	_strlen
  1425     052F  0870               	movf	?_strlen,w
  1426     0530  00F6               	movwf	lcd_caracter@num
  1427     0531                     l1069:
  1428                           
  1429                           ;main.c: 112:     for(i=0;i<num;i++){
  1430     0531  01F7               	clrf	lcd_caracter@i
  1431     0532  2D4A               	goto	l1075
  1432     0533                     l1071:
  1433                           
  1434                           ;main.c: 113:         lcd_data(str[i]);
  1435     0533  0877               	movf	lcd_caracter@i,w
  1436     0534  0774               	addwf	lcd_caracter@str,w
  1437     0535  0084               	movwf	4
  1438     0536  0875               	movf	lcd_caracter@str+1,w
  1439     0537  1803               	skipnc
  1440     0538  0A75               	incf	lcd_caracter@str+1,w
  1441     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1442     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1443     053B  00FF               	movwf	btemp+1
  1444     053C  120A  118A  2003  120A  118A  	fcall	stringtab
  1445     0541  120A  118A  2582  120A  118A  	fcall	_lcd_data
  1446     0546                     l1073:
  1447                           
  1448                           ;main.c: 114:     }
  1449     0546  3001               	movlw	1
  1450     0547  00FF               	movwf	btemp+1
  1451     0548  087F               	movf	btemp+1,w
  1452     0549  07F7               	addwf	lcd_caracter@i,f
  1453     054A                     l1075:
  1454     054A  0876               	movf	lcd_caracter@num,w
  1455     054B  0277               	subwf	lcd_caracter@i,w
  1456     054C  1C03               	skipc
  1457     054D  2D4F               	goto	u481
  1458     054E  2D50               	goto	u480
  1459     054F                     u481:
  1460     054F  2D33               	goto	l1071
  1461     0550                     u480:
  1462     0550                     l70:
  1463     0550  0008               	return
  1464     0551                     __end_of_lcd_caracter:
  1465                           
  1466                           	psect	text6
  1467     0502                     __ptext6:	
  1468 ;; *************** function _strlen *****************
  1469 ;; Defined at:
  1470 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  s               2    0[COMMON] PTR const unsigned char 
  1473 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1474 ;;		 -> STR_1(4), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  cp              2    2[COMMON] PTR const unsigned char 
  1477 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1478 ;;		 -> STR_1(4), 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  2    0[COMMON] unsigned int 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         2       0       0       0       0
  1489 ;;      Locals:         2       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         4       0       0       0       0
  1492 ;;Total ram usage:        4 bytes
  1493 ;; Hardware stack levels used: 2
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_lcd_caracter
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501     0502                     _strlen:	
  1502                           ;psect for function _strlen
  1503                           
  1504     0502                     l1009:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1507                           
  1508     0502  0870               	movf	strlen@s,w
  1509     0503  00F2               	movwf	strlen@cp
  1510     0504  0871               	movf	strlen@s+1,w
  1511     0505  00F3               	movwf	strlen@cp+1
  1512     0506  2D0D               	goto	l1013
  1513     0507                     l1011:
  1514     0507  3001               	movlw	1
  1515     0508  07F2               	addwf	strlen@cp,f
  1516     0509  1803               	skipnc
  1517     050A  0AF3               	incf	strlen@cp+1,f
  1518     050B  3000               	movlw	0
  1519     050C  07F3               	addwf	strlen@cp+1,f
  1520     050D                     l1013:
  1521     050D  0873               	movf	strlen@cp+1,w
  1522     050E  1283               	bcf	3,5	;RP0=0, select bank0
  1523     050F  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0510  00FF               	movwf	btemp+1
  1525     0511  0872               	movf	strlen@cp,w
  1526     0512  0084               	movwf	4
  1527     0513  120A  118A  2003  120A  118A  	fcall	stringtab
  1528     0518  3A00               	xorlw	0
  1529     0519  1D03               	skipz
  1530     051A  2D1C               	goto	u341
  1531     051B  2D1D               	goto	u340
  1532     051C                     u341:
  1533     051C  2D07               	goto	l1011
  1534     051D                     u340:
  1535     051D                     l1015:
  1536     051D  0870               	movf	strlen@s,w
  1537     051E  0272               	subwf	strlen@cp,w
  1538     051F  00F0               	movwf	?_strlen
  1539     0520  0871               	movf	strlen@s+1,w
  1540     0521  1C03               	skipc
  1541     0522  0A71               	incf	strlen@s+1,w
  1542     0523  0273               	subwf	strlen@cp+1,w
  1543     0524  00F1               	movwf	?_strlen+1
  1544     0525                     l649:
  1545     0525  0008               	return
  1546     0526                     __end_of_strlen:
  1547                           
  1548                           	psect	text7
  1549     0582                     __ptext7:	
  1550 ;; *************** function _lcd_data *****************
  1551 ;; Defined at:
  1552 ;;		line 89 in file "main.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  data            1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  data            1    2[COMMON] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0
  1569 ;;      Totals:         3       0       0       0       0
  1570 ;;Total ram usage:        3 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_lcd_caracter
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579     0582                     _lcd_data:	
  1580                           ;psect for function _lcd_data
  1581                           
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1585                           ;lcd_data@data stored from wreg
  1586     0582  00F2               	movwf	lcd_data@data
  1587     0583                     l985:
  1588                           
  1589                           ;main.c: 90:     PORTB = (data & 0xF0);
  1590     0583  0872               	movf	lcd_data@data,w
  1591     0584  39F0               	andlw	240
  1592     0585  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0586  1303               	bcf	3,6	;RP1=0, select bank0
  1594     0587  0086               	movwf	6	;volatile
  1595     0588                     l987:
  1596                           
  1597                           ;main.c: 91:     PORTBbits.RB2 = 1;
  1598     0588  1506               	bsf	6,2	;volatile
  1599     0589                     l989:
  1600                           
  1601                           ;main.c: 92:     PORTBbits.RB1 = 0;
  1602     0589  1086               	bcf	6,1	;volatile
  1603     058A                     l991:
  1604                           
  1605                           ;main.c: 93:     PORTBbits.RB0 = 1;
  1606     058A  1406               	bsf	6,0	;volatile
  1607     058B                     l993:
  1608                           
  1609                           ;main.c: 94:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1610     058B  300D               	movlw	13
  1611     058C  00F1               	movwf	??_lcd_data+1
  1612     058D  30FB               	movlw	251
  1613     058E  00F0               	movwf	??_lcd_data
  1614     058F                     u667:
  1615     058F  0BF0               	decfsz	??_lcd_data,f
  1616     0590  2D8F               	goto	u667
  1617     0591  0BF1               	decfsz	??_lcd_data+1,f
  1618     0592  2D8F               	goto	u667
  1619     0593  2D94               	nop2
  1620     0594                     l995:
  1621                           
  1622                           ;main.c: 95:     PORTBbits.RB2 = 0 ;
  1623     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1624     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1625     0596  1106               	bcf	6,2	;volatile
  1626     0597                     l997:
  1627                           
  1628                           ;main.c: 96:     PORTB = ((data<<4)& 0xF0);
  1629     0597  0872               	movf	lcd_data@data,w
  1630     0598  00F0               	movwf	??_lcd_data
  1631     0599  3003               	movlw	3
  1632     059A                     u335:
  1633     059A  1003               	clrc
  1634     059B  0DF0               	rlf	??_lcd_data,f
  1635     059C  3EFF               	addlw	-1
  1636     059D  1D03               	skipz
  1637     059E  2D9A               	goto	u335
  1638     059F  1003               	clrc
  1639     05A0  0D70               	rlf	??_lcd_data,w
  1640     05A1  39F0               	andlw	240
  1641     05A2  0086               	movwf	6	;volatile
  1642     05A3                     l999:
  1643                           
  1644                           ;main.c: 97:     PORTBbits.RB2 = 1;
  1645     05A3  1506               	bsf	6,2	;volatile
  1646     05A4                     l1001:
  1647                           
  1648                           ;main.c: 98:     PORTBbits.RB1 = 0;
  1649     05A4  1086               	bcf	6,1	;volatile
  1650     05A5                     l1003:
  1651                           
  1652                           ;main.c: 99:     PORTBbits.RB0 = 1;
  1653     05A5  1406               	bsf	6,0	;volatile
  1654     05A6                     l1005:
  1655                           
  1656                           ;main.c: 100:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1657     05A6  300D               	movlw	13
  1658     05A7  00F1               	movwf	??_lcd_data+1
  1659     05A8  30FB               	movlw	251
  1660     05A9  00F0               	movwf	??_lcd_data
  1661     05AA                     u677:
  1662     05AA  0BF0               	decfsz	??_lcd_data,f
  1663     05AB  2DAA               	goto	u677
  1664     05AC  0BF1               	decfsz	??_lcd_data+1,f
  1665     05AD  2DAA               	goto	u677
  1666     05AE  2DAF               	nop2
  1667     05AF                     l1007:
  1668                           
  1669                           ;main.c: 101:     PORTBbits.RB2 = 0;
  1670     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1671     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1672     05B1  1106               	bcf	6,2	;volatile
  1673     05B2                     l61:
  1674     05B2  0008               	return
  1675     05B3                     __end_of_lcd_data:
  1676                           
  1677                           	psect	text8
  1678     04E3                     __ptext8:	
  1679 ;; *************** function _lcd_init *****************
  1680 ;; Defined at:
  1681 ;;		line 103 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 1
  1702 ;; This function calls:
  1703 ;;		_lcd_cmd
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709     04E3                     _lcd_init:	
  1710                           ;psect for function _lcd_init
  1711                           
  1712     04E3                     l1171:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1715                           
  1716                           
  1717                           ;main.c: 104:     lcd_cmd(0x02);
  1718     04E3  3002               	movlw	2
  1719     04E4  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1720                           
  1721                           ;main.c: 105:     lcd_cmd(0x28);
  1722     04E9  3028               	movlw	40
  1723     04EA  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1724                           
  1725                           ;main.c: 106:     lcd_cmd(0x0C);
  1726     04EF  300C               	movlw	12
  1727     04F0  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1728                           
  1729                           ;main.c: 107:     lcd_cmd(0x04);
  1730     04F5  3004               	movlw	4
  1731     04F6  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1732                           
  1733                           ;main.c: 108:     lcd_cmd(0x01);
  1734     04FB  3001               	movlw	1
  1735     04FC  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1736     0501                     l64:
  1737     0501  0008               	return
  1738     0502                     __end_of_lcd_init:
  1739                           
  1740                           	psect	text9
  1741     0551                     __ptext9:	
  1742 ;; *************** function _lcd_cmd *****************
  1743 ;; Defined at:
  1744 ;;		line 74 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  cmd             1    wreg     unsigned char 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  cmd             1    2[COMMON] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0
  1760 ;;      Temps:          2       0       0       0       0
  1761 ;;      Totals:         3       0       0       0       0
  1762 ;;Total ram usage:        3 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;;		_lcd_init
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772     0551                     _lcd_cmd:	
  1773                           ;psect for function _lcd_cmd
  1774                           
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1778                           ;lcd_cmd@cmd stored from wreg
  1779     0551  00F2               	movwf	lcd_cmd@cmd
  1780     0552                     l1077:
  1781                           
  1782                           ;main.c: 76:     PORTB = (cmd & 0xF0);
  1783     0552  0872               	movf	lcd_cmd@cmd,w
  1784     0553  39F0               	andlw	240
  1785     0554  1283               	bcf	3,5	;RP0=0, select bank0
  1786     0555  1303               	bcf	3,6	;RP1=0, select bank0
  1787     0556  0086               	movwf	6	;volatile
  1788     0557                     l1079:
  1789                           
  1790                           ;main.c: 77:     PORTBbits.RB2 = 1;
  1791     0557  1506               	bsf	6,2	;volatile
  1792     0558                     l1081:
  1793                           
  1794                           ;main.c: 78:     PORTBbits.RB1 = 0;
  1795     0558  1086               	bcf	6,1	;volatile
  1796     0559                     l1083:
  1797                           
  1798                           ;main.c: 79:     PORTBbits.RB0 = 0;
  1799     0559  1006               	bcf	6,0	;volatile
  1800     055A                     l1085:
  1801                           
  1802                           ;main.c: 80:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1803     055A  300D               	movlw	13
  1804     055B  00F1               	movwf	??_lcd_cmd+1
  1805     055C  30FB               	movlw	251
  1806     055D  00F0               	movwf	??_lcd_cmd
  1807     055E                     u687:
  1808     055E  0BF0               	decfsz	??_lcd_cmd,f
  1809     055F  2D5E               	goto	u687
  1810     0560  0BF1               	decfsz	??_lcd_cmd+1,f
  1811     0561  2D5E               	goto	u687
  1812     0562  2D63               	nop2
  1813     0563                     l1087:
  1814                           
  1815                           ;main.c: 81:     PORTBbits.RB2 = 0 ;
  1816     0563  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0564  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0565  1106               	bcf	6,2	;volatile
  1819     0566                     l1089:
  1820                           
  1821                           ;main.c: 82:     PORTB = ((cmd<<4)& 0xF0);
  1822     0566  0872               	movf	lcd_cmd@cmd,w
  1823     0567  00F0               	movwf	??_lcd_cmd
  1824     0568  3003               	movlw	3
  1825     0569                     u495:
  1826     0569  1003               	clrc
  1827     056A  0DF0               	rlf	??_lcd_cmd,f
  1828     056B  3EFF               	addlw	-1
  1829     056C  1D03               	skipz
  1830     056D  2D69               	goto	u495
  1831     056E  1003               	clrc
  1832     056F  0D70               	rlf	??_lcd_cmd,w
  1833     0570  39F0               	andlw	240
  1834     0571  0086               	movwf	6	;volatile
  1835     0572                     l1091:
  1836                           
  1837                           ;main.c: 83:     PORTBbits.RB2 = 1;
  1838     0572  1506               	bsf	6,2	;volatile
  1839     0573                     l1093:
  1840                           
  1841                           ;main.c: 84:     PORTBbits.RB1 = 0;
  1842     0573  1086               	bcf	6,1	;volatile
  1843     0574                     l1095:
  1844                           
  1845                           ;main.c: 85:     PORTBbits.RB0 = 0;
  1846     0574  1006               	bcf	6,0	;volatile
  1847     0575                     l1097:
  1848                           
  1849                           ;main.c: 86:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1850     0575  300D               	movlw	13
  1851     0576  00F1               	movwf	??_lcd_cmd+1
  1852     0577  30FB               	movlw	251
  1853     0578  00F0               	movwf	??_lcd_cmd
  1854     0579                     u697:
  1855     0579  0BF0               	decfsz	??_lcd_cmd,f
  1856     057A  2D79               	goto	u697
  1857     057B  0BF1               	decfsz	??_lcd_cmd+1,f
  1858     057C  2D79               	goto	u697
  1859     057D  2D7E               	nop2
  1860     057E                     l1099:
  1861                           
  1862                           ;main.c: 87:     PORTBbits.RB2 = 0;
  1863     057E  1283               	bcf	3,5	;RP0=0, select bank0
  1864     057F  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0580  1106               	bcf	6,2	;volatile
  1866     0581                     l58:
  1867     0581  0008               	return
  1868     0582                     __end_of_lcd_cmd:
  1869                           
  1870                           	psect	text10
  1871     0631                     __ptext10:	
  1872 ;; *************** function _keybad_4x3 *****************
  1873 ;; Defined at:
  1874 ;;		line 121 in file "main.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901     0631                     _keybad_4x3:	
  1902                           ;psect for function _keybad_4x3
  1903                           
  1904     0631                     l1173:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _keybad_4x3: [wreg-fsr0h+status,2+status,0+btemp+1]
  1907                           
  1908                           
  1909                           ;main.c: 122:     for(c=0;c<3;c++){
  1910     0631  1283               	bcf	3,5	;RP0=0, select bank0
  1911     0632  1303               	bcf	3,6	;RP1=0, select bank0
  1912     0633  01D0               	clrf	_c
  1913     0634                     l1179:
  1914                           
  1915                           ;main.c: 123:         column[0] = 0;
  1916     0634  01CC               	clrf	_column
  1917                           
  1918                           ;main.c: 124:         column[1] = 0;
  1919     0635  01CD               	clrf	_column+1
  1920                           
  1921                           ;main.c: 125:         column[2] = 0;
  1922     0636  01CE               	clrf	_column+2
  1923     0637                     l1181:
  1924                           
  1925                           ;main.c: 126:         column[c] = 1;
  1926     0637  0850               	movf	_c,w
  1927     0638  3E4C               	addlw	(low (_column| 0))& (0+255)
  1928     0639  0084               	movwf	4
  1929     063A  1383               	bcf	3,7	;select IRP bank0
  1930     063B  0180               	clrf	0
  1931     063C  0A80               	incf	0,f
  1932     063D                     l1183:
  1933                           
  1934                           ;main.c: 127:         PORTCbits.RC0 = column[0];
  1935     063D  0C4C               	rrf	_column,w
  1936     063E  1C03               	skipc
  1937     063F  1007               	bcf	7,0	;volatile
  1938     0640  1803               	skipnc
  1939     0641  1407               	bsf	7,0	;volatile
  1940     0642                     l1185:
  1941                           
  1942                           ;main.c: 128:         PORTCbits.RC1 = column[1];
  1943     0642  0C4D               	rrf	_column+1,w
  1944     0643  1C03               	skipc
  1945     0644  1087               	bcf	7,1	;volatile
  1946     0645  1803               	skipnc
  1947     0646  1487               	bsf	7,1	;volatile
  1948     0647                     l1187:
  1949                           
  1950                           ;main.c: 129:         PORTCbits.RC2 = column[2];
  1951     0647  0C4E               	rrf	_column+2,w
  1952     0648  1C03               	skipc
  1953     0649  1107               	bcf	7,2	;volatile
  1954     064A  1803               	skipnc
  1955     064B  1507               	bsf	7,2	;volatile
  1956     064C                     l1189:
  1957                           
  1958                           ;main.c: 130:         row[0] = PORTCbits.RC3;
  1959     064C  3000               	movlw	0
  1960     064D  1987               	btfsc	7,3	;volatile
  1961     064E  3001               	movlw	1
  1962     064F  00C8               	movwf	_row
  1963     0650                     l1191:
  1964                           
  1965                           ;main.c: 131:         row[1] = PORTCbits.RC4;
  1966     0650  3000               	movlw	0
  1967     0651  1A07               	btfsc	7,4	;volatile
  1968     0652  3001               	movlw	1
  1969     0653  00C9               	movwf	_row+1
  1970     0654                     l1193:
  1971                           
  1972                           ;main.c: 132:         row[2] = PORTCbits.RC5;
  1973     0654  3000               	movlw	0
  1974     0655  1A87               	btfsc	7,5	;volatile
  1975     0656  3001               	movlw	1
  1976     0657  00CA               	movwf	_row+2
  1977     0658                     l1195:
  1978                           
  1979                           ;main.c: 133:         row[3] = PORTCbits.RC6;
  1980     0658  3000               	movlw	0
  1981     0659  1B07               	btfsc	7,6	;volatile
  1982     065A  3001               	movlw	1
  1983     065B  00CB               	movwf	_row+3
  1984     065C                     l1197:
  1985                           
  1986                           ;main.c: 134:         for(r=0;r<4;r++){
  1987     065C  01CF               	clrf	_r
  1988     065D                     l1203:
  1989                           
  1990                           ;main.c: 135:             if(row[r] == 1){
  1991     065D  084F               	movf	_r,w
  1992     065E  3E48               	addlw	(low (_row| 0))& (0+255)
  1993     065F  0084               	movwf	4
  1994     0660  0300               	decf	0,w
  1995     0661  1D03               	btfss	3,2
  1996     0662  2E64               	goto	u571
  1997     0663  2E65               	goto	u570
  1998     0664                     u571:
  1999     0664  2E69               	goto	l1207
  2000     0665                     u570:
  2001     0665                     l1205:
  2002                           
  2003                           ;main.c: 136:               i=r;
  2004     0665  084F               	movf	_r,w
  2005     0666  00D2               	movwf	_i
  2006                           
  2007                           ;main.c: 137:               j=c;
  2008     0667  0850               	movf	_c,w
  2009     0668  00D1               	movwf	_j
  2010     0669                     l1207:
  2011                           
  2012                           ;main.c: 139:         }
  2013     0669  3001               	movlw	1
  2014     066A  00FF               	movwf	btemp+1
  2015     066B  087F               	movf	btemp+1,w
  2016     066C  07CF               	addwf	_r,f
  2017     066D                     l1209:
  2018     066D  3004               	movlw	4
  2019     066E  024F               	subwf	_r,w
  2020     066F  1C03               	skipc
  2021     0670  2E72               	goto	u581
  2022     0671  2E73               	goto	u580
  2023     0672                     u581:
  2024     0672  2E5D               	goto	l1203
  2025     0673                     u580:
  2026     0673                     l1211:
  2027                           
  2028                           ;main.c: 140:     }
  2029     0673  3001               	movlw	1
  2030     0674  00FF               	movwf	btemp+1
  2031     0675  087F               	movf	btemp+1,w
  2032     0676  07D0               	addwf	_c,f
  2033     0677                     l1213:
  2034     0677  3003               	movlw	3
  2035     0678  0250               	subwf	_c,w
  2036     0679  1C03               	skipc
  2037     067A  2E7C               	goto	u591
  2038     067B  2E7D               	goto	u590
  2039     067C                     u591:
  2040     067C  2E34               	goto	l1179
  2041     067D                     u590:
  2042     067D                     l81:
  2043     067D  0008               	return
  2044     067E                     __end_of_keybad_4x3:
  2045                           
  2046                           	psect	text11
  2047     04A1                     __ptext11:	
  2048 ;; *************** function _int_Port *****************
  2049 ;; Defined at:
  2050 ;;		line 68 in file "main.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077     04A1                     _int_Port:	
  2078                           ;psect for function _int_Port
  2079                           
  2080     04A1                     l1165:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _int_Port: [wreg+status,2]
  2083                           
  2084                           
  2085                           ;main.c: 69:     TRISB = 0x00;
  2086     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2087     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2088     04A3  0186               	clrf	6	;volatile
  2089     04A4                     l1167:
  2090                           
  2091                           ;main.c: 70:     TRISC = 0x78;
  2092     04A4  3078               	movlw	120
  2093     04A5  0087               	movwf	7	;volatile
  2094     04A6                     l1169:
  2095                           
  2096                           ;main.c: 71:     PORTCbits.RC0 =PORTCbits.RC1 =PORTCbits.RC2 =0;
  2097     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2098     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2099     04A8  1107               	bcf	7,2	;volatile
  2100     04A9  1087               	bcf	7,1	;volatile
  2101     04AA  1007               	bcf	7,0	;volatile
  2102     04AB                     l55:
  2103     04AB  0008               	return
  2104     04AC                     __end_of_int_Port:
  2105     007E                     btemp	set	126	;btemp
  2106     007E                     wtemp0	set	126
  2107                           
  2108                           	psect	idloc
  2109                           
  2110                           ;Config register IDLOC0 @ 0x2000
  2111                           ;	unspecified, using default values
  2112     2000                     	org	8192
  2113     2000  3FFF               	dw	16383
  2114                           
  2115                           ;Config register IDLOC1 @ 0x2001
  2116                           ;	unspecified, using default values
  2117     2001                     	org	8193
  2118     2001  3FFF               	dw	16383
  2119                           
  2120                           ;Config register IDLOC2 @ 0x2002
  2121                           ;	unspecified, using default values
  2122     2002                     	org	8194
  2123     2002  3FFF               	dw	16383
  2124                           
  2125                           ;Config register IDLOC3 @ 0x2003
  2126                           ;	unspecified, using default values
  2127     2003                     	org	8195
  2128     2003  3FFF               	dw	16383
  2129                           
  2130                           	psect	config
  2131                           
  2132                           ;Config register CONFIG @ 0x2007
  2133                           ;	Oscillator Selection bits
  2134                           ;	FOSC = EXTRC, RC oscillator
  2135                           ;	Watchdog Timer Enable bit
  2136                           ;	WDTE = OFF, WDT disabled
  2137                           ;	Power-up Timer Enable bit
  2138                           ;	PWRTE = OFF, PWRT disabled
  2139                           ;	Brown-out Reset Enable bit
  2140                           ;	BOREN = ON, BOR enabled
  2141                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2142                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2143                           ;	Data EEPROM Memory Code Protection bit
  2144                           ;	CPD = OFF, Data EEPROM code protection off
  2145                           ;	Flash Program Memory Write Enable bits
  2146                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2147                           ;	In-Circuit Debugger Mode bit
  2148                           ;	DEBUG = 0x1, unprogrammed default
  2149                           ;	Flash Program Memory Code Protection bit
  2150                           ;	CP = OFF, Code protection off
  2151     2007                     	org	8199
  2152     2007  3FFB               	dw	16379

Data Sizes:
    Strings     20
    Constant    10
    Data        12
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_caracter@str	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_number
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_caracter->_strlen
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_lcd_number
    _lcd_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2857
                                             23 BANK0      5     5      0
                           _int_Port
                         _keybad_4x3
                       _lcd_caracter
                            _lcd_cmd
                           _lcd_init
                         _lcd_number
 ---------------------------------------------------------------------------------
 (1) _lcd_number                                          12    10      2    2066
                                             12 COMMON     2     0      2
                                             13 BANK0     10    10      0
                       _lcd_caracter
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         4     2      2     703
                                              4 COMMON     4     2      2
                           _lcd_data
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keybad_4x3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_Port
   _keybad_4x3
   _lcd_caracter
     _lcd_data
     _strlen
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_number
     _lcd_caracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 22:54:33 2023

                      _c 0050                        _i 0052                        _j 0051  
                      _r 004F                        pc 0002             lcd_data@data 0072  
                     l61 05B2                       l70 0550                       l55 04AB  
                     l64 0501                       l81 067D                       l73 04E2  
                     l58 0581                       fsr 0004                      l191 07E2  
                    l467 0630                      l477 05EC                      l649 0525  
                    l991 058A                      l993 058B                      l985 0583  
                    l995 0594                      l987 0588                      l997 0597  
                    l989 0589                      l999 05A3                      u410 062C  
                    u411 062B                      u340 051D                      u420 05B9  
                    u500 0715                      u341 051C                      u405 0620  
                    u421 05B8                      u501 0714                      u350 05F5  
                    u510 074D                      u335 059A                      u351 05F4  
                    u511 074C                      u440 05CB                      u520 0773  
                    u441 05CA                      u521 0772                      u370 0607  
                    u450 05D5                      u530 077E                      u610 06CC  
                    u371 0606                      u451 05D4                      u435 05BD  
                    u531 077D                      u611 06CB                      u540 0784  
                    u620 06D2                      u365 05F9                      u541 0783  
                    u525 076F                      u621 06D1                      u605 06AA  
                    u390 0618                      u470 05E8                      u550 07CE  
                    u630 06E3                      u391 0617                      u471 05E7  
                    u455 05D1                      u551 07CD                      u631 06E2  
                    u480 0550                      u560 07DE                      u640 06E8  
                    u481 054F                      u385 0608                      u465 05DC  
                    u561 07DD                      u641 06E7                      u570 0665  
                    u571 0664                      u395 0614                      u580 0673  
                    u581 0672                      u590 067D                      u591 067C  
                    u495 0569                      u657 06F9                      u667 058F  
                    u677 05AA                      u687 055E                      u697 0579  
          lcd_caracter@i 0077                      fsr0 0004                      _row 0048  
                    indf 0000           ??_lcd_caracter 0076                     l1001 05A4  
                   l1003 05A5                     l1011 0507                     l1005 05A6  
                   l1013 050D                     l1021 05EF                     l1101 070C  
                   l1007 05AF                     l1015 051D                     l1031 0607  
                   l1023 05F5                     l1103 070F                     l1009 0502  
                   l1033 0618                     l1025 05F8                     l1041 062C  
                   l1121 074D                     l1113 0720                     l1105 0715  
                   l1211 0673                     l1203 065D                     l1035 061E  
                   l1027 05FF                     l1019 05ED                     l1051 05C3  
                   l1131 0758                     l1123 0751                     l1115 073D  
                   l1107 071A                     l1213 0677                     l1205 0665  
                   l1037 061F                     l1029 0603                     l1061 05E2  
                   l1053 05C7                     l1045 05B3                     l1141 0784  
                   l1125 0756                     l1117 0745                     l1109 071F  
                   l1221 0691                     l1207 0669                     l1071 0533  
                   l1039 0626                     l1055 05CB                     l1047 05B9  
                   l1063 05E8                     l1151 07C1                     l1143 0789  
                   l1135 0774                     l1119 0749                     l1215 04CB  
                   l1231 06D2                     l1223 069C                     l1209 066D  
                   l1081 0558                     l1073 0546                     l1057 05D5  
                   l1049 05BC                     l1153 07C5                     l1145 078D  
                   l1137 0778                     l1241 06FF                     l1233 06DB  
                   l1225 06A5                     l1217 067E                     l1091 0572  
                   l1083 0559                     l1171 04E3                     l1075 054A  
                   l1067 0526                     l1059 05DB                     l1147 0790  
                   l1139 077E                     l1155 07CE                     l1235 06E3  
                   l1227 06C4                     l1219 0688                     l1165 04A1  
                   l1181 0637                     l1173 0631                     l1093 0573  
                   l1085 055A                     l1077 0552                     l1069 0531  
                   l1149 07BC                     l1157 07DE                     l1237 06E8  
                   l1229 06CC                     l1167 04A4                     l1191 0650  
                   l1183 063D                     l1095 0574                     l1087 0563  
                   l1079 0557                     l1263 0732                     l1239 06F1  
                   l1169 04A6                     l1193 0654                     l1185 0642  
                   l1097 0575                     l1089 0566                     l1195 0658  
                   l1187 0647                     l1179 0634                     l1099 057E  
                   l1197 065C                     l1189 064C                     STR_1 0026  
                   STR_2 001D                     STR_3 002D                     STR_4 002F  
                   STR_5 002A                     _main 067E                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0631  
        __end_of___lwmod 05ED                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087             lcd_number@nb 007C          lcd_caracter@num 0076  
        lcd_caracter@str 0074          __end_of_lcd_cmd 0582          __end_of_dpowers 001D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07E3          __initialization 07E3             __end_of_main 0709  
                 ??_main 0037                   _Keypad 003C         __end_of_lcd_data 05B3  
       __end_of_lcd_init 0502     __end_of_lcd_caracter 0551                ??___lwdiv 0074  
              ??___lwmod 007B                   _column 004C         __end_of_int_Port 04AC  
              ??_lcd_cmd 0070                   _strlen 0502                ??_sprintf 0023  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 04AC  
             __pbssBANK0 0048               __pmaintext 067E                  ?_strlen 0070  
             _lcd_number 04CB                ?_lcd_data 0070                ?_lcd_init 0070  
             __stringtab 0003                ?_int_Port 0070               _keybad_4x3 0631  
                ___lwdiv 05ED                  ___lwmod 05B3                  __ptext1 04CB  
                __ptext2 0709                  __ptext3 05B3                  __ptext4 05ED  
                __ptext5 0526                  __ptext6 0502                  __ptext7 0582  
                __ptext8 04E3                  __ptext9 0551                  _lcd_cmd 0551  
                _dpowers 0013             _lcd_caracter 0526               ??_lcd_data 0070  
                _sprintf 0709               ??_lcd_init 0073     end_of_initialization 07FC  
             ??_int_Port 0070                  strlen@s 0070                _PORTBbits 0006  
              _PORTCbits 0007               lcd_cmd@cmd 0072              ?_lcd_number 007C  
            ?_keybad_4x3 0070           __end_of_strlen 0526      start_initialization 07E3  
             init_fetch0 04B8              __pdataBANK0 003C                 ??_strlen 0072  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0027  
            sprintf@prec 0028         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0003                 ?_lcd_cmd 0070  
       ___lwdiv@quotient 0074                 ?_sprintf 0020              __stringbase 0012  
        lcd_number@strNb 002D             ??_lcd_number 007E             ??_keybad_4x3 0070  
     __end_of_lcd_number 04E3       __end_of__stringtab 0013               sprintf@val 0029  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 __ptext10 0631  
               __ptext11 04A1                 _lcd_data 0582                 _lcd_init 04E3  
     __end_of_keybad_4x3 067E                 _int_Port 04A1                 init_ram0 04BC  
              sprintf@ap 0026                sprintf@sp 002B         ___lwmod@dividend 0079  
              stringcode 000D                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0077                 strlen@cp 0072          ___lwmod@counter 007B  
               stringdir 000D                 stringtab 0003            ?_lcd_caracter 0074  
