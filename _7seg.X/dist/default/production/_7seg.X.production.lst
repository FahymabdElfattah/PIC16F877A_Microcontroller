

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 20:22:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 09/02/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     05B1                     __pidataBANK0:
   180                           
   181                           ;initializer for _segment
   182     05B1  343F               	retlw	63
   183     05B2  3406               	retlw	6
   184     05B3  345B               	retlw	91
   185     05B4  344F               	retlw	79
   186     05B5  3466               	retlw	102
   187     05B6  346D               	retlw	109
   188     05B7  347D               	retlw	125
   189     05B8  3407               	retlw	7
   190     05B9  347F               	retlw	127
   191     05BA  346F               	retlw	111
   192                           
   193                           ;initializer for _nb
   194     05BB  3460               	retlw	96
   195     05BC  3400               	retlw	0
   196                           
   197                           	psect	nvBANK0
   198     002C                     __pnvBANK0:
   199     002C                     _Lu:
   200     002C                     	ds	1
   201     002D                     _Ld:
   202     002D                     	ds	1
   203     002E                     _L:
   204     002E                     	ds	1
   205     002F                     _Ru:
   206     002F                     	ds	1
   207     0030                     _Rd:
   208     0030                     	ds	1
   209     0031                     _R:
   210     0031                     	ds	1
   211     0007                     _PORTCbits	set	7
   212     0007                     _PORTC	set	7
   213     0006                     _PORTB	set	6
   214     0087                     _TRISC	set	135
   215     0086                     _TRISB	set	134
   216                           
   217                           	psect	cinit
   218     07EB                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07EB                     __initialization:
   222                           
   223                           ; Initialize objects allocated to BANK0
   224     07EB  1383               	bcf	3,7	;select IRP bank0
   225     07EC  302C               	movlw	low (__pdataBANK0+12)
   226     07ED  00FD               	movwf	btemp+-1
   227     07EE  3005               	movlw	high __pidataBANK0
   228     07EF  00FE               	movwf	btemp
   229     07F0  30B1               	movlw	low __pidataBANK0
   230     07F1  00FF               	movwf	btemp+1
   231     07F2  3020               	movlw	low __pdataBANK0
   232     07F3  0084               	movwf	4
   233     07F4  120A  118A  25C1  120A  118A  	fcall	init_ram0
   234                           
   235                           ; Clear objects allocated to BANK0
   236     07F9  01B2               	clrf	__pbssBANK0& (0+127)
   237     07FA  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   238     07FB  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   239     07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     07FC                     __end_of__initialization:
   243     07FC  0183               	clrf	3
   244     07FD  120A  118A  2E65   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247     0032                     __pbssBANK0:
   248     0032                     _j:
   249     0032                     	ds	1
   250     0033                     _i:
   251     0033                     	ds	1
   252     0034                     _timer_count:
   253     0034                     	ds	1
   254                           
   255                           	psect	dataBANK0
   256     0020                     __pdataBANK0:
   257     0020                     _segment:
   258     0020                     	ds	10
   259     002A                     _nb:
   260     002A                     	ds	2
   261                           
   262                           	psect	inittext
   263     05BD                     init_fetch0:	
   264                           ;	Called with low address in FSR and high address in W
   265                           
   266     05BD  087E               	movf	btemp,w
   267     05BE  008A               	movwf	10
   268     05BF  087F               	movf	btemp+1,w
   269     05C0  0082               	movwf	2
   270     05C1                     init_ram0:	
   271                           ;Called with:
   272                           ;	high address of idata address in btemp 
   273                           ;	low address of idata address in btemp+1 
   274                           ;	low address of data in FSR
   275                           ;	high address + 1 of data in btemp-1
   276                           
   277     05C1  120A  118A  25BD  120A  118A  	fcall	init_fetch0
   278     05C6  0080               	movwf	0
   279     05C7  0A84               	incf	4,f
   280     05C8  0804               	movf	4,w
   281     05C9  067D               	xorwf	btemp+-1,w
   282     05CA  1903               	btfsc	3,2
   283     05CB  3400               	retlw	0
   284     05CC  0AFF               	incf	btemp+1,f
   285     05CD  1903               	btfsc	3,2
   286     05CE  0AFE               	incf	btemp,f
   287     05CF  2DC1               	goto	init_ram0
   288                           
   289                           	psect	cstackCOMMON
   290     0070                     __pcstackCOMMON:
   291     0070                     ?_int_Port:
   292     0070                     ??_int_Port:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?_select_Seg:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?___awdiv:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?___awmod:	
   305                           ; 2 bytes @ 0x0
   306                           
   307     0070                     ?___lwdiv:	
   308                           ; 2 bytes @ 0x0
   309                           
   310     0070                     ?___lwmod:	
   311                           ; 2 bytes @ 0x0
   312                           
   313     0070                     select_Seg@rc0:	
   314                           ; 2 bytes @ 0x0
   315                           
   316     0070                     ___awdiv@divisor:	
   317                           ; 2 bytes @ 0x0
   318                           
   319     0070                     ___awmod@divisor:	
   320                           ; 2 bytes @ 0x0
   321                           
   322     0070                     ___lwdiv@divisor:	
   323                           ; 2 bytes @ 0x0
   324                           
   325     0070                     ___lwmod@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 2 bytes @ 0x0
   330     0070                     	ds	2
   331     0072                     select_Seg@rc1:
   332     0072                     ___awdiv@dividend:	
   333                           ; 2 bytes @ 0x2
   334                           
   335     0072                     ___awmod@dividend:	
   336                           ; 2 bytes @ 0x2
   337                           
   338     0072                     ___lwdiv@dividend:	
   339                           ; 2 bytes @ 0x2
   340                           
   341     0072                     ___lwmod@dividend:	
   342                           ; 2 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346     0072                     	ds	2
   347     0074                     ??___awdiv:
   348     0074                     ??___awmod:	
   349                           ; 1 bytes @ 0x4
   350                           
   351     0074                     ??___lwdiv:	
   352                           ; 1 bytes @ 0x4
   353                           
   354     0074                     ??___lwmod:	
   355                           ; 1 bytes @ 0x4
   356                           
   357     0074                     ___awdiv@counter:	
   358                           ; 1 bytes @ 0x4
   359                           
   360     0074                     ___awmod@counter:	
   361                           ; 1 bytes @ 0x4
   362                           
   363     0074                     ___lwmod@counter:	
   364                           ; 1 bytes @ 0x4
   365                           
   366     0074                     select_Seg@rc2:	
   367                           ; 1 bytes @ 0x4
   368                           
   369     0074                     ___lwdiv@quotient:	
   370                           ; 2 bytes @ 0x4
   371                           
   372                           
   373                           ; 2 bytes @ 0x4
   374     0074                     	ds	1
   375     0075                     ___awdiv@sign:
   376     0075                     ___awmod@sign:	
   377                           ; 1 bytes @ 0x5
   378                           
   379                           
   380                           ; 1 bytes @ 0x5
   381     0075                     	ds	1
   382     0076                     ___lwdiv@counter:
   383     0076                     select_Seg@rc3:	
   384                           ; 1 bytes @ 0x6
   385                           
   386     0076                     ___awdiv@quotient:	
   387                           ; 2 bytes @ 0x6
   388                           
   389                           
   390                           ; 2 bytes @ 0x6
   391     0076                     	ds	2
   392     0078                     ?_display_Seg:
   393     0078                     ??_select_Seg:	
   394                           ; 1 bytes @ 0x8
   395                           
   396     0078                     display_Seg@a:	
   397                           ; 1 bytes @ 0x8
   398                           
   399                           
   400                           ; 2 bytes @ 0x8
   401     0078                     	ds	2
   402     007A                     ??_display_Seg:
   403                           
   404                           ; 1 bytes @ 0xA
   405     007A                     	ds	2
   406     007C                     ??_main:
   407                           
   408                           ; 1 bytes @ 0xC
   409     007C                     	ds	2
   410                           
   411                           	psect	maintext
   412     0665                     __pmaintext:	
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 25 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : B00/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0
   435 ;;      Totals:         2       0       0       0       0
   436 ;;Total ram usage:        2 bytes
   437 ;; Hardware stack levels required when called: 2
   438 ;; This function calls:
   439 ;;		_display_Seg
   440 ;;		_int_Port
   441 ;;		_select_Seg
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447     0665                     _main:	
   448                           ;psect for function _main
   449                           
   450     0665                     l935:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   453                           
   454                           
   455                           ;main.c: 27: int_Port();
   456     0665  120A  118A  25A8  120A  118A  	fcall	_int_Port
   457     066A                     l937:
   458                           
   459                           ;main.c: 29: display_Seg(nb);
   460     066A  3060               	movlw	96
   461     066B  00F8               	movwf	display_Seg@a
   462     066C  3000               	movlw	0
   463     066D  00F9               	movwf	display_Seg@a+1
   464     066E  120A  118A  2778  120A  118A  	fcall	_display_Seg
   465     0673                     l939:
   466                           
   467                           ;main.c: 30: select_Seg(0,1,1,1);
   468     0673  3000               	movlw	0
   469     0674  00F0               	movwf	select_Seg@rc0
   470     0675  00F1               	movwf	select_Seg@rc0+1
   471     0676  3001               	movlw	1
   472     0677  00F2               	movwf	select_Seg@rc1
   473     0678  3000               	movlw	0
   474     0679  00F3               	movwf	select_Seg@rc1+1
   475     067A  3001               	movlw	1
   476     067B  00F4               	movwf	select_Seg@rc2
   477     067C  3000               	movlw	0
   478     067D  00F5               	movwf	select_Seg@rc2+1
   479     067E  3001               	movlw	1
   480     067F  00F6               	movwf	select_Seg@rc3
   481     0680  3000               	movlw	0
   482     0681  00F7               	movwf	select_Seg@rc3+1
   483     0682  120A  118A  25D0  120A  118A  	fcall	_select_Seg
   484     0687                     l941:
   485                           
   486                           ;main.c: 31: PORTB = segment[Ld];
   487     0687  1283               	bcf	3,5	;RP0=0, select bank0
   488     0688  1303               	bcf	3,6	;RP1=0, select bank0
   489     0689  082D               	movf	_Ld,w
   490     068A  3E20               	addlw	(low (_segment| 0))& (0+255)
   491     068B  0084               	movwf	4
   492     068C  1383               	bcf	3,7	;select IRP bank0
   493     068D  0800               	movf	0,w
   494     068E  0086               	movwf	6	;volatile
   495     068F                     l943:
   496                           
   497                           ;main.c: 32: _delay((unsigned long)((10)*(20000000/4000.0)));
   498     068F  3041               	movlw	65
   499     0690  00FD               	movwf	??_main+1
   500     0691  30EE               	movlw	238
   501     0692  00FC               	movwf	??_main
   502     0693                     u657:
   503     0693  0BFC               	decfsz	??_main,f
   504     0694  2E93               	goto	u657
   505     0695  0BFD               	decfsz	??_main+1,f
   506     0696  2E93               	goto	u657
   507     0697  0000               	nop
   508     0698                     l945:
   509                           
   510                           ;main.c: 33: select_Seg(1,0,1,1);
   511     0698  3001               	movlw	1
   512     0699  00F0               	movwf	select_Seg@rc0
   513     069A  3000               	movlw	0
   514     069B  00F1               	movwf	select_Seg@rc0+1
   515     069C  3000               	movlw	0
   516     069D  00F2               	movwf	select_Seg@rc1
   517     069E  00F3               	movwf	select_Seg@rc1+1
   518     069F  3001               	movlw	1
   519     06A0  00F4               	movwf	select_Seg@rc2
   520     06A1  3000               	movlw	0
   521     06A2  00F5               	movwf	select_Seg@rc2+1
   522     06A3  3001               	movlw	1
   523     06A4  00F6               	movwf	select_Seg@rc3
   524     06A5  3000               	movlw	0
   525     06A6  00F7               	movwf	select_Seg@rc3+1
   526     06A7  120A  118A  25D0  120A  118A  	fcall	_select_Seg
   527     06AC                     l947:
   528                           
   529                           ;main.c: 34: PORTB = segment[Lu];
   530     06AC  1283               	bcf	3,5	;RP0=0, select bank0
   531     06AD  1303               	bcf	3,6	;RP1=0, select bank0
   532     06AE  082C               	movf	_Lu,w
   533     06AF  3E20               	addlw	(low (_segment| 0))& (0+255)
   534     06B0  0084               	movwf	4
   535     06B1  1383               	bcf	3,7	;select IRP bank0
   536     06B2  0800               	movf	0,w
   537     06B3  0086               	movwf	6	;volatile
   538     06B4  2E6A               	goto	l937
   539     06B5  120A  118A  2800   	ljmp	start
   540     06B8                     __end_of_main:
   541                           
   542                           	psect	text1
   543     05D0                     __ptext1:	
   544 ;; *************** function _select_Seg *****************
   545 ;; Defined at:
   546 ;;		line 53 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  rc0             2    0[COMMON] unsigned short 
   549 ;;  rc1             2    2[COMMON] unsigned short 
   550 ;;  rc2             2    4[COMMON] unsigned short 
   551 ;;  rc3             2    6[COMMON] unsigned short 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,0
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         8       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         8       0       0       0       0
   567 ;;Total ram usage:        8 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576     05D0                     _select_Seg:	
   577                           ;psect for function _select_Seg
   578                           
   579     05D0                     l933:	
   580                           ;incstack = 0
   581                           ; Regs used in _select_Seg: [wreg+status,0]
   582                           
   583                           
   584                           ;main.c: 54: PORTCbits.RC0 = rc0 ;
   585     05D0  0C70               	rrf	select_Seg@rc0,w
   586     05D1  1283               	bcf	3,5	;RP0=0, select bank0
   587     05D2  1303               	bcf	3,6	;RP1=0, select bank0
   588     05D3  1C03               	skipc
   589     05D4  1007               	bcf	7,0	;volatile
   590     05D5  1803               	skipnc
   591     05D6  1407               	bsf	7,0	;volatile
   592                           
   593                           ;main.c: 55: PORTCbits.RC1 = rc1 ;
   594     05D7  0C72               	rrf	select_Seg@rc1,w
   595     05D8  1C03               	skipc
   596     05D9  1087               	bcf	7,1	;volatile
   597     05DA  1803               	skipnc
   598     05DB  1487               	bsf	7,1	;volatile
   599                           
   600                           ;main.c: 56: PORTCbits.RC2 = rc2 ;
   601     05DC  0C74               	rrf	select_Seg@rc2,w
   602     05DD  1C03               	skipc
   603     05DE  1107               	bcf	7,2	;volatile
   604     05DF  1803               	skipnc
   605     05E0  1507               	bsf	7,2	;volatile
   606                           
   607                           ;main.c: 57: PORTCbits.RC3 = rc3 ;
   608     05E1  0C76               	rrf	select_Seg@rc3,w
   609     05E2  1C03               	skipc
   610     05E3  1187               	bcf	7,3	;volatile
   611     05E4  1803               	skipnc
   612     05E5  1587               	bsf	7,3	;volatile
   613     05E6                     l57:
   614     05E6  0008               	return
   615     05E7                     __end_of_select_Seg:
   616                           
   617                           	psect	text2
   618     05A8                     __ptext2:	
   619 ;; *************** function _int_Port *****************
   620 ;; Defined at:
   621 ;;		line 39 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648     05A8                     _int_Port:	
   649                           ;psect for function _int_Port
   650                           
   651     05A8                     l929:	
   652                           ;incstack = 0
   653                           ; Regs used in _int_Port: [status,2]
   654                           
   655                           
   656                           ;main.c: 40: TRISB = 0x00;
   657     05A8  1683               	bsf	3,5	;RP0=1, select bank1
   658     05A9  1303               	bcf	3,6	;RP1=0, select bank1
   659     05AA  0186               	clrf	6	;volatile
   660                           
   661                           ;main.c: 41: TRISC = 0x00;
   662     05AB  0187               	clrf	7	;volatile
   663                           
   664                           ;main.c: 42: PORTC = 0x00;
   665     05AC  1283               	bcf	3,5	;RP0=0, select bank0
   666     05AD  1303               	bcf	3,6	;RP1=0, select bank0
   667     05AE  0187               	clrf	7	;volatile
   668                           
   669                           ;main.c: 43: PORTB = 0x00;
   670     05AF  0186               	clrf	6	;volatile
   671     05B0                     l51:
   672     05B0  0008               	return
   673     05B1                     __end_of_int_Port:
   674                           
   675                           	psect	text3
   676     0778                     __ptext3:	
   677 ;; *************** function _display_Seg *****************
   678 ;; Defined at:
   679 ;;		line 45 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  a               2    8[COMMON] unsigned short 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         2       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0
   695 ;;      Temps:          2       0       0       0       0
   696 ;;      Totals:         4       0       0       0       0
   697 ;;Total ram usage:        4 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 1
   700 ;; This function calls:
   701 ;;		___awdiv
   702 ;;		___awmod
   703 ;;		___lwdiv
   704 ;;		___lwmod
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     0778                     _display_Seg:	
   711                           ;psect for function _display_Seg
   712                           
   713     0778                     l931:	
   714                           ;incstack = 0
   715                           ; Regs used in _display_Seg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   716                           
   717                           
   718                           ;main.c: 46: R = a/100;
   719     0778  3064               	movlw	100
   720     0779  00F0               	movwf	___lwdiv@divisor
   721     077A  3000               	movlw	0
   722     077B  00F1               	movwf	___lwdiv@divisor+1
   723     077C  0879               	movf	display_Seg@a+1,w
   724     077D  00F3               	movwf	___lwdiv@dividend+1
   725     077E  0878               	movf	display_Seg@a,w
   726     077F  00F2               	movwf	___lwdiv@dividend
   727     0780  120A  118A  2621  120A  118A  	fcall	___lwdiv
   728     0785  0870               	movf	?___lwdiv,w
   729     0786  1283               	bcf	3,5	;RP0=0, select bank0
   730     0787  1303               	bcf	3,6	;RP1=0, select bank0
   731     0788  00B1               	movwf	_R
   732                           
   733                           ;main.c: 47: Rd = R/10;
   734     0789  300A               	movlw	10
   735     078A  00F0               	movwf	___awdiv@divisor
   736     078B  3000               	movlw	0
   737     078C  00F1               	movwf	___awdiv@divisor+1
   738     078D  0831               	movf	_R,w
   739     078E  00FA               	movwf	??_display_Seg
   740     078F  01FB               	clrf	??_display_Seg+1
   741     0790  087A               	movf	??_display_Seg,w
   742     0791  00F2               	movwf	___awdiv@dividend
   743     0792  087B               	movf	??_display_Seg+1,w
   744     0793  00F3               	movwf	___awdiv@dividend+1
   745     0794  120A  118A  2711  120A  118A  	fcall	___awdiv
   746     0799  0870               	movf	?___awdiv,w
   747     079A  1283               	bcf	3,5	;RP0=0, select bank0
   748     079B  1303               	bcf	3,6	;RP1=0, select bank0
   749     079C  00B0               	movwf	_Rd
   750                           
   751                           ;main.c: 48: Ru = R%10;
   752     079D  300A               	movlw	10
   753     079E  00F0               	movwf	___awmod@divisor
   754     079F  3000               	movlw	0
   755     07A0  00F1               	movwf	___awmod@divisor+1
   756     07A1  0831               	movf	_R,w
   757     07A2  00FA               	movwf	??_display_Seg
   758     07A3  01FB               	clrf	??_display_Seg+1
   759     07A4  087A               	movf	??_display_Seg,w
   760     07A5  00F2               	movwf	___awmod@dividend
   761     07A6  087B               	movf	??_display_Seg+1,w
   762     07A7  00F3               	movwf	___awmod@dividend+1
   763     07A8  120A  118A  26B8  120A  118A  	fcall	___awmod
   764     07AD  0870               	movf	?___awmod,w
   765     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   766     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   767     07B0  00AF               	movwf	_Ru
   768                           
   769                           ;main.c: 49: L = a%100;
   770     07B1  3064               	movlw	100
   771     07B2  00F0               	movwf	___lwmod@divisor
   772     07B3  3000               	movlw	0
   773     07B4  00F1               	movwf	___lwmod@divisor+1
   774     07B5  0879               	movf	display_Seg@a+1,w
   775     07B6  00F3               	movwf	___lwmod@dividend+1
   776     07B7  0878               	movf	display_Seg@a,w
   777     07B8  00F2               	movwf	___lwmod@dividend
   778     07B9  120A  118A  25E7  120A  118A  	fcall	___lwmod
   779     07BE  0870               	movf	?___lwmod,w
   780     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   781     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   782     07C1  00AE               	movwf	_L
   783                           
   784                           ;main.c: 50: Ld = L/10;
   785     07C2  300A               	movlw	10
   786     07C3  00F0               	movwf	___awdiv@divisor
   787     07C4  3000               	movlw	0
   788     07C5  00F1               	movwf	___awdiv@divisor+1
   789     07C6  082E               	movf	_L,w
   790     07C7  00FA               	movwf	??_display_Seg
   791     07C8  01FB               	clrf	??_display_Seg+1
   792     07C9  087A               	movf	??_display_Seg,w
   793     07CA  00F2               	movwf	___awdiv@dividend
   794     07CB  087B               	movf	??_display_Seg+1,w
   795     07CC  00F3               	movwf	___awdiv@dividend+1
   796     07CD  120A  118A  2711  120A  118A  	fcall	___awdiv
   797     07D2  0870               	movf	?___awdiv,w
   798     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   799     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   800     07D5  00AD               	movwf	_Ld
   801                           
   802                           ;main.c: 51: Lu = L%10;
   803     07D6  300A               	movlw	10
   804     07D7  00F0               	movwf	___awmod@divisor
   805     07D8  3000               	movlw	0
   806     07D9  00F1               	movwf	___awmod@divisor+1
   807     07DA  082E               	movf	_L,w
   808     07DB  00FA               	movwf	??_display_Seg
   809     07DC  01FB               	clrf	??_display_Seg+1
   810     07DD  087A               	movf	??_display_Seg,w
   811     07DE  00F2               	movwf	___awmod@dividend
   812     07DF  087B               	movf	??_display_Seg+1,w
   813     07E0  00F3               	movwf	___awmod@dividend+1
   814     07E1  120A  118A  26B8  120A  118A  	fcall	___awmod
   815     07E6  0870               	movf	?___awmod,w
   816     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   817     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   818     07E9  00AC               	movwf	_Lu
   819     07EA                     l54:
   820     07EA  0008               	return
   821     07EB                     __end_of_display_Seg:
   822                           
   823                           	psect	text4
   824     05E7                     __ptext4:	
   825 ;; *************** function ___lwmod *****************
   826 ;; Defined at:
   827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  divisor         2    0[COMMON] unsigned int 
   830 ;;  dividend        2    2[COMMON] unsigned int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  counter         1    4[COMMON] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  2    0[COMMON] unsigned int 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0, btemp+1
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         4       0       0       0       0
   843 ;;      Locals:         1       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         5       0       0       0       0
   846 ;;Total ram usage:        5 bytes
   847 ;; Hardware stack levels used: 1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_display_Seg
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855     05E7                     ___lwmod:	
   856                           ;psect for function ___lwmod
   857                           
   858     05E7                     l907:	
   859                           ;incstack = 0
   860                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   861                           
   862     05E7  0870               	movf	___lwmod@divisor,w
   863     05E8  0471               	iorwf	___lwmod@divisor+1,w
   864     05E9  1903               	btfsc	3,2
   865     05EA  2DEC               	goto	u591
   866     05EB  2DED               	goto	u590
   867     05EC                     u591:
   868     05EC  2E1C               	goto	l925
   869     05ED                     u590:
   870     05ED                     l909:
   871     05ED  01F4               	clrf	___lwmod@counter
   872     05EE  0AF4               	incf	___lwmod@counter,f
   873     05EF  2DFB               	goto	l915
   874     05F0                     l911:
   875     05F0  3001               	movlw	1
   876     05F1                     u605:
   877     05F1  1003               	clrc
   878     05F2  0DF0               	rlf	___lwmod@divisor,f
   879     05F3  0DF1               	rlf	___lwmod@divisor+1,f
   880     05F4  3EFF               	addlw	-1
   881     05F5  1D03               	skipz
   882     05F6  2DF1               	goto	u605
   883     05F7                     l913:
   884     05F7  3001               	movlw	1
   885     05F8  00FF               	movwf	btemp+1
   886     05F9  087F               	movf	btemp+1,w
   887     05FA  07F4               	addwf	___lwmod@counter,f
   888     05FB                     l915:
   889     05FB  1FF1               	btfss	___lwmod@divisor+1,7
   890     05FC  2DFE               	goto	u611
   891     05FD  2DFF               	goto	u610
   892     05FE                     u611:
   893     05FE  2DF0               	goto	l911
   894     05FF                     u610:
   895     05FF                     l917:
   896     05FF  0871               	movf	___lwmod@divisor+1,w
   897     0600  0273               	subwf	___lwmod@dividend+1,w
   898     0601  1D03               	skipz
   899     0602  2E05               	goto	u625
   900     0603  0870               	movf	___lwmod@divisor,w
   901     0604  0272               	subwf	___lwmod@dividend,w
   902     0605                     u625:
   903     0605  1C03               	skipc
   904     0606  2E08               	goto	u621
   905     0607  2E09               	goto	u620
   906     0608                     u621:
   907     0608  2E0F               	goto	l921
   908     0609                     u620:
   909     0609                     l919:
   910     0609  0870               	movf	___lwmod@divisor,w
   911     060A  02F2               	subwf	___lwmod@dividend,f
   912     060B  0871               	movf	___lwmod@divisor+1,w
   913     060C  1C03               	skipc
   914     060D  03F3               	decf	___lwmod@dividend+1,f
   915     060E  02F3               	subwf	___lwmod@dividend+1,f
   916     060F                     l921:
   917     060F  3001               	movlw	1
   918     0610                     u635:
   919     0610  1003               	clrc
   920     0611  0CF1               	rrf	___lwmod@divisor+1,f
   921     0612  0CF0               	rrf	___lwmod@divisor,f
   922     0613  3EFF               	addlw	-1
   923     0614  1D03               	skipz
   924     0615  2E10               	goto	u635
   925     0616                     l923:
   926     0616  3001               	movlw	1
   927     0617  02F4               	subwf	___lwmod@counter,f
   928     0618  1D03               	btfss	3,2
   929     0619  2E1B               	goto	u641
   930     061A  2E1C               	goto	u640
   931     061B                     u641:
   932     061B  2DFF               	goto	l917
   933     061C                     u640:
   934     061C                     l925:
   935     061C  0873               	movf	___lwmod@dividend+1,w
   936     061D  00F1               	movwf	?___lwmod+1
   937     061E  0872               	movf	___lwmod@dividend,w
   938     061F  00F0               	movwf	?___lwmod
   939     0620                     l425:
   940     0620  0008               	return
   941     0621                     __end_of___lwmod:
   942                           
   943                           	psect	text5
   944     0621                     __ptext5:	
   945 ;; *************** function ___lwdiv *****************
   946 ;; Defined at:
   947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  divisor         2    0[COMMON] unsigned int 
   950 ;;  dividend        2    2[COMMON] unsigned int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  quotient        2    4[COMMON] unsigned int 
   953 ;;  counter         1    6[COMMON] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2    0[COMMON] unsigned int 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, btemp+1
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         4       0       0       0       0
   964 ;;      Locals:         3       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         7       0       0       0       0
   967 ;;Total ram usage:        7 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_display_Seg
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     0621                     ___lwdiv:	
   977                           ;psect for function ___lwdiv
   978                           
   979     0621                     l881:	
   980                           ;incstack = 0
   981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   982                           
   983     0621  01F4               	clrf	___lwdiv@quotient
   984     0622  01F5               	clrf	___lwdiv@quotient+1
   985     0623                     l883:
   986     0623  0870               	movf	___lwdiv@divisor,w
   987     0624  0471               	iorwf	___lwdiv@divisor+1,w
   988     0625  1903               	btfsc	3,2
   989     0626  2E28               	goto	u521
   990     0627  2E29               	goto	u520
   991     0628                     u521:
   992     0628  2E60               	goto	l903
   993     0629                     u520:
   994     0629                     l885:
   995     0629  01F6               	clrf	___lwdiv@counter
   996     062A  0AF6               	incf	___lwdiv@counter,f
   997     062B  2E37               	goto	l891
   998     062C                     l887:
   999     062C  3001               	movlw	1
  1000     062D                     u535:
  1001     062D  1003               	clrc
  1002     062E  0DF0               	rlf	___lwdiv@divisor,f
  1003     062F  0DF1               	rlf	___lwdiv@divisor+1,f
  1004     0630  3EFF               	addlw	-1
  1005     0631  1D03               	skipz
  1006     0632  2E2D               	goto	u535
  1007     0633                     l889:
  1008     0633  3001               	movlw	1
  1009     0634  00FF               	movwf	btemp+1
  1010     0635  087F               	movf	btemp+1,w
  1011     0636  07F6               	addwf	___lwdiv@counter,f
  1012     0637                     l891:
  1013     0637  1FF1               	btfss	___lwdiv@divisor+1,7
  1014     0638  2E3A               	goto	u541
  1015     0639  2E3B               	goto	u540
  1016     063A                     u541:
  1017     063A  2E2C               	goto	l887
  1018     063B                     u540:
  1019     063B                     l893:
  1020     063B  3001               	movlw	1
  1021     063C                     u555:
  1022     063C  1003               	clrc
  1023     063D  0DF4               	rlf	___lwdiv@quotient,f
  1024     063E  0DF5               	rlf	___lwdiv@quotient+1,f
  1025     063F  3EFF               	addlw	-1
  1026     0640  1D03               	skipz
  1027     0641  2E3C               	goto	u555
  1028     0642  0871               	movf	___lwdiv@divisor+1,w
  1029     0643  0273               	subwf	___lwdiv@dividend+1,w
  1030     0644  1D03               	skipz
  1031     0645  2E48               	goto	u565
  1032     0646  0870               	movf	___lwdiv@divisor,w
  1033     0647  0272               	subwf	___lwdiv@dividend,w
  1034     0648                     u565:
  1035     0648  1C03               	skipc
  1036     0649  2E4B               	goto	u561
  1037     064A  2E4C               	goto	u560
  1038     064B                     u561:
  1039     064B  2E53               	goto	l899
  1040     064C                     u560:
  1041     064C                     l895:
  1042     064C  0870               	movf	___lwdiv@divisor,w
  1043     064D  02F2               	subwf	___lwdiv@dividend,f
  1044     064E  0871               	movf	___lwdiv@divisor+1,w
  1045     064F  1C03               	skipc
  1046     0650  03F3               	decf	___lwdiv@dividend+1,f
  1047     0651  02F3               	subwf	___lwdiv@dividend+1,f
  1048     0652                     l897:
  1049     0652  1474               	bsf	___lwdiv@quotient,0
  1050     0653                     l899:
  1051     0653  3001               	movlw	1
  1052     0654                     u575:
  1053     0654  1003               	clrc
  1054     0655  0CF1               	rrf	___lwdiv@divisor+1,f
  1055     0656  0CF0               	rrf	___lwdiv@divisor,f
  1056     0657  3EFF               	addlw	-1
  1057     0658  1D03               	skipz
  1058     0659  2E54               	goto	u575
  1059     065A                     l901:
  1060     065A  3001               	movlw	1
  1061     065B  02F6               	subwf	___lwdiv@counter,f
  1062     065C  1D03               	btfss	3,2
  1063     065D  2E5F               	goto	u581
  1064     065E  2E60               	goto	u580
  1065     065F                     u581:
  1066     065F  2E3B               	goto	l893
  1067     0660                     u580:
  1068     0660                     l903:
  1069     0660  0875               	movf	___lwdiv@quotient+1,w
  1070     0661  00F1               	movwf	?___lwdiv+1
  1071     0662  0874               	movf	___lwdiv@quotient,w
  1072     0663  00F0               	movwf	?___lwdiv
  1073     0664                     l415:
  1074     0664  0008               	return
  1075     0665                     __end_of___lwdiv:
  1076                           
  1077                           	psect	text6
  1078     06B8                     __ptext6:	
  1079 ;; *************** function ___awmod *****************
  1080 ;; Defined at:
  1081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  divisor         2    0[COMMON] int 
  1084 ;;  dividend        2    2[COMMON] int 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  sign            1    5[COMMON] unsigned char 
  1087 ;;  counter         1    4[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    0[COMMON] int 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, btemp+1
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         4       0       0       0       0
  1098 ;;      Locals:         2       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         6       0       0       0       0
  1101 ;;Total ram usage:        6 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_display_Seg
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     06B8                     ___awmod:	
  1111                           ;psect for function ___awmod
  1112                           
  1113     06B8                     l843:	
  1114                           ;incstack = 0
  1115                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1116                           
  1117     06B8  01F5               	clrf	___awmod@sign
  1118     06B9                     l845:
  1119     06B9  1FF3               	btfss	___awmod@dividend+1,7
  1120     06BA  2EBC               	goto	u431
  1121     06BB  2EBD               	goto	u430
  1122     06BC                     u431:
  1123     06BC  2EC4               	goto	l851
  1124     06BD                     u430:
  1125     06BD                     l847:
  1126     06BD  09F2               	comf	___awmod@dividend,f
  1127     06BE  09F3               	comf	___awmod@dividend+1,f
  1128     06BF  0AF2               	incf	___awmod@dividend,f
  1129     06C0  1903               	skipnz
  1130     06C1  0AF3               	incf	___awmod@dividend+1,f
  1131     06C2                     l849:
  1132     06C2  01F5               	clrf	___awmod@sign
  1133     06C3  0AF5               	incf	___awmod@sign,f
  1134     06C4                     l851:
  1135     06C4  1FF1               	btfss	___awmod@divisor+1,7
  1136     06C5  2EC7               	goto	u441
  1137     06C6  2EC8               	goto	u440
  1138     06C7                     u441:
  1139     06C7  2ECD               	goto	l855
  1140     06C8                     u440:
  1141     06C8                     l853:
  1142     06C8  09F0               	comf	___awmod@divisor,f
  1143     06C9  09F1               	comf	___awmod@divisor+1,f
  1144     06CA  0AF0               	incf	___awmod@divisor,f
  1145     06CB  1903               	skipnz
  1146     06CC  0AF1               	incf	___awmod@divisor+1,f
  1147     06CD                     l855:
  1148     06CD  0870               	movf	___awmod@divisor,w
  1149     06CE  0471               	iorwf	___awmod@divisor+1,w
  1150     06CF  1903               	btfsc	3,2
  1151     06D0  2ED2               	goto	u451
  1152     06D1  2ED3               	goto	u450
  1153     06D2                     u451:
  1154     06D2  2F02               	goto	l873
  1155     06D3                     u450:
  1156     06D3                     l857:
  1157     06D3  01F4               	clrf	___awmod@counter
  1158     06D4  0AF4               	incf	___awmod@counter,f
  1159     06D5  2EE1               	goto	l863
  1160     06D6                     l859:
  1161     06D6  3001               	movlw	1
  1162     06D7                     u465:
  1163     06D7  1003               	clrc
  1164     06D8  0DF0               	rlf	___awmod@divisor,f
  1165     06D9  0DF1               	rlf	___awmod@divisor+1,f
  1166     06DA  3EFF               	addlw	-1
  1167     06DB  1D03               	skipz
  1168     06DC  2ED7               	goto	u465
  1169     06DD                     l861:
  1170     06DD  3001               	movlw	1
  1171     06DE  00FF               	movwf	btemp+1
  1172     06DF  087F               	movf	btemp+1,w
  1173     06E0  07F4               	addwf	___awmod@counter,f
  1174     06E1                     l863:
  1175     06E1  1FF1               	btfss	___awmod@divisor+1,7
  1176     06E2  2EE4               	goto	u471
  1177     06E3  2EE5               	goto	u470
  1178     06E4                     u471:
  1179     06E4  2ED6               	goto	l859
  1180     06E5                     u470:
  1181     06E5                     l865:
  1182     06E5  0871               	movf	___awmod@divisor+1,w
  1183     06E6  0273               	subwf	___awmod@dividend+1,w
  1184     06E7  1D03               	skipz
  1185     06E8  2EEB               	goto	u485
  1186     06E9  0870               	movf	___awmod@divisor,w
  1187     06EA  0272               	subwf	___awmod@dividend,w
  1188     06EB                     u485:
  1189     06EB  1C03               	skipc
  1190     06EC  2EEE               	goto	u481
  1191     06ED  2EEF               	goto	u480
  1192     06EE                     u481:
  1193     06EE  2EF5               	goto	l869
  1194     06EF                     u480:
  1195     06EF                     l867:
  1196     06EF  0870               	movf	___awmod@divisor,w
  1197     06F0  02F2               	subwf	___awmod@dividend,f
  1198     06F1  0871               	movf	___awmod@divisor+1,w
  1199     06F2  1C03               	skipc
  1200     06F3  03F3               	decf	___awmod@dividend+1,f
  1201     06F4  02F3               	subwf	___awmod@dividend+1,f
  1202     06F5                     l869:
  1203     06F5  3001               	movlw	1
  1204     06F6                     u495:
  1205     06F6  1003               	clrc
  1206     06F7  0CF1               	rrf	___awmod@divisor+1,f
  1207     06F8  0CF0               	rrf	___awmod@divisor,f
  1208     06F9  3EFF               	addlw	-1
  1209     06FA  1D03               	skipz
  1210     06FB  2EF6               	goto	u495
  1211     06FC                     l871:
  1212     06FC  3001               	movlw	1
  1213     06FD  02F4               	subwf	___awmod@counter,f
  1214     06FE  1D03               	btfss	3,2
  1215     06FF  2F01               	goto	u501
  1216     0700  2F02               	goto	u500
  1217     0701                     u501:
  1218     0701  2EE5               	goto	l865
  1219     0702                     u500:
  1220     0702                     l873:
  1221     0702  0875               	movf	___awmod@sign,w
  1222     0703  1903               	btfsc	3,2
  1223     0704  2F06               	goto	u511
  1224     0705  2F07               	goto	u510
  1225     0706                     u511:
  1226     0706  2F0C               	goto	l877
  1227     0707                     u510:
  1228     0707                     l875:
  1229     0707  09F2               	comf	___awmod@dividend,f
  1230     0708  09F3               	comf	___awmod@dividend+1,f
  1231     0709  0AF2               	incf	___awmod@dividend,f
  1232     070A  1903               	skipnz
  1233     070B  0AF3               	incf	___awmod@dividend+1,f
  1234     070C                     l877:
  1235     070C  0873               	movf	___awmod@dividend+1,w
  1236     070D  00F1               	movwf	?___awmod+1
  1237     070E  0872               	movf	___awmod@dividend,w
  1238     070F  00F0               	movwf	?___awmod
  1239     0710                     l309:
  1240     0710  0008               	return
  1241     0711                     __end_of___awmod:
  1242                           
  1243                           	psect	text7
  1244     0711                     __ptext7:	
  1245 ;; *************** function ___awdiv *****************
  1246 ;; Defined at:
  1247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  divisor         2    0[COMMON] int 
  1250 ;;  dividend        2    2[COMMON] int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  quotient        2    6[COMMON] int 
  1253 ;;  sign            1    5[COMMON] unsigned char 
  1254 ;;  counter         1    4[COMMON] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    0[COMMON] int 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, btemp+1
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         4       0       0       0       0
  1265 ;;      Locals:         4       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0
  1267 ;;      Totals:         8       0       0       0       0
  1268 ;;Total ram usage:        8 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_display_Seg
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277     0711                     ___awdiv:	
  1278                           ;psect for function ___awdiv
  1279                           
  1280     0711                     l799:	
  1281                           ;incstack = 0
  1282                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1283                           
  1284     0711  01F5               	clrf	___awdiv@sign
  1285     0712                     l801:
  1286     0712  1FF1               	btfss	___awdiv@divisor+1,7
  1287     0713  2F15               	goto	u331
  1288     0714  2F16               	goto	u330
  1289     0715                     u331:
  1290     0715  2F1D               	goto	l807
  1291     0716                     u330:
  1292     0716                     l803:
  1293     0716  09F0               	comf	___awdiv@divisor,f
  1294     0717  09F1               	comf	___awdiv@divisor+1,f
  1295     0718  0AF0               	incf	___awdiv@divisor,f
  1296     0719  1903               	skipnz
  1297     071A  0AF1               	incf	___awdiv@divisor+1,f
  1298     071B                     l805:
  1299     071B  01F5               	clrf	___awdiv@sign
  1300     071C  0AF5               	incf	___awdiv@sign,f
  1301     071D                     l807:
  1302     071D  1FF3               	btfss	___awdiv@dividend+1,7
  1303     071E  2F20               	goto	u341
  1304     071F  2F21               	goto	u340
  1305     0720                     u341:
  1306     0720  2F2A               	goto	l813
  1307     0721                     u340:
  1308     0721                     l809:
  1309     0721  09F2               	comf	___awdiv@dividend,f
  1310     0722  09F3               	comf	___awdiv@dividend+1,f
  1311     0723  0AF2               	incf	___awdiv@dividend,f
  1312     0724  1903               	skipnz
  1313     0725  0AF3               	incf	___awdiv@dividend+1,f
  1314     0726                     l811:
  1315     0726  3001               	movlw	1
  1316     0727  00FF               	movwf	btemp+1
  1317     0728  087F               	movf	btemp+1,w
  1318     0729  06F5               	xorwf	___awdiv@sign,f
  1319     072A                     l813:
  1320     072A  01F6               	clrf	___awdiv@quotient
  1321     072B  01F7               	clrf	___awdiv@quotient+1
  1322     072C                     l815:
  1323     072C  0870               	movf	___awdiv@divisor,w
  1324     072D  0471               	iorwf	___awdiv@divisor+1,w
  1325     072E  1903               	btfsc	3,2
  1326     072F  2F31               	goto	u351
  1327     0730  2F32               	goto	u350
  1328     0731                     u351:
  1329     0731  2F69               	goto	l835
  1330     0732                     u350:
  1331     0732                     l817:
  1332     0732  01F4               	clrf	___awdiv@counter
  1333     0733  0AF4               	incf	___awdiv@counter,f
  1334     0734  2F40               	goto	l823
  1335     0735                     l819:
  1336     0735  3001               	movlw	1
  1337     0736                     u365:
  1338     0736  1003               	clrc
  1339     0737  0DF0               	rlf	___awdiv@divisor,f
  1340     0738  0DF1               	rlf	___awdiv@divisor+1,f
  1341     0739  3EFF               	addlw	-1
  1342     073A  1D03               	skipz
  1343     073B  2F36               	goto	u365
  1344     073C                     l821:
  1345     073C  3001               	movlw	1
  1346     073D  00FF               	movwf	btemp+1
  1347     073E  087F               	movf	btemp+1,w
  1348     073F  07F4               	addwf	___awdiv@counter,f
  1349     0740                     l823:
  1350     0740  1FF1               	btfss	___awdiv@divisor+1,7
  1351     0741  2F43               	goto	u371
  1352     0742  2F44               	goto	u370
  1353     0743                     u371:
  1354     0743  2F35               	goto	l819
  1355     0744                     u370:
  1356     0744                     l825:
  1357     0744  3001               	movlw	1
  1358     0745                     u385:
  1359     0745  1003               	clrc
  1360     0746  0DF6               	rlf	___awdiv@quotient,f
  1361     0747  0DF7               	rlf	___awdiv@quotient+1,f
  1362     0748  3EFF               	addlw	-1
  1363     0749  1D03               	skipz
  1364     074A  2F45               	goto	u385
  1365     074B  0871               	movf	___awdiv@divisor+1,w
  1366     074C  0273               	subwf	___awdiv@dividend+1,w
  1367     074D  1D03               	skipz
  1368     074E  2F51               	goto	u395
  1369     074F  0870               	movf	___awdiv@divisor,w
  1370     0750  0272               	subwf	___awdiv@dividend,w
  1371     0751                     u395:
  1372     0751  1C03               	skipc
  1373     0752  2F54               	goto	u391
  1374     0753  2F55               	goto	u390
  1375     0754                     u391:
  1376     0754  2F5C               	goto	l831
  1377     0755                     u390:
  1378     0755                     l827:
  1379     0755  0870               	movf	___awdiv@divisor,w
  1380     0756  02F2               	subwf	___awdiv@dividend,f
  1381     0757  0871               	movf	___awdiv@divisor+1,w
  1382     0758  1C03               	skipc
  1383     0759  03F3               	decf	___awdiv@dividend+1,f
  1384     075A  02F3               	subwf	___awdiv@dividend+1,f
  1385     075B                     l829:
  1386     075B  1476               	bsf	___awdiv@quotient,0
  1387     075C                     l831:
  1388     075C  3001               	movlw	1
  1389     075D                     u405:
  1390     075D  1003               	clrc
  1391     075E  0CF1               	rrf	___awdiv@divisor+1,f
  1392     075F  0CF0               	rrf	___awdiv@divisor,f
  1393     0760  3EFF               	addlw	-1
  1394     0761  1D03               	skipz
  1395     0762  2F5D               	goto	u405
  1396     0763                     l833:
  1397     0763  3001               	movlw	1
  1398     0764  02F4               	subwf	___awdiv@counter,f
  1399     0765  1D03               	btfss	3,2
  1400     0766  2F68               	goto	u411
  1401     0767  2F69               	goto	u410
  1402     0768                     u411:
  1403     0768  2F44               	goto	l825
  1404     0769                     u410:
  1405     0769                     l835:
  1406     0769  0875               	movf	___awdiv@sign,w
  1407     076A  1903               	btfsc	3,2
  1408     076B  2F6D               	goto	u421
  1409     076C  2F6E               	goto	u420
  1410     076D                     u421:
  1411     076D  2F73               	goto	l839
  1412     076E                     u420:
  1413     076E                     l837:
  1414     076E  09F6               	comf	___awdiv@quotient,f
  1415     076F  09F7               	comf	___awdiv@quotient+1,f
  1416     0770  0AF6               	incf	___awdiv@quotient,f
  1417     0771  1903               	skipnz
  1418     0772  0AF7               	incf	___awdiv@quotient+1,f
  1419     0773                     l839:
  1420     0773  0877               	movf	___awdiv@quotient+1,w
  1421     0774  00F1               	movwf	?___awdiv+1
  1422     0775  0876               	movf	___awdiv@quotient,w
  1423     0776  00F0               	movwf	?___awdiv
  1424     0777                     l296:
  1425     0777  0008               	return
  1426     0778                     __end_of___awdiv:
  1427     007E                     btemp	set	126	;btemp
  1428     007E                     wtemp0	set	126
  1429                           
  1430                           	psect	idloc
  1431                           
  1432                           ;Config register IDLOC0 @ 0x2000
  1433                           ;	unspecified, using default values
  1434     2000                     	org	8192
  1435     2000  3FFF               	dw	16383
  1436                           
  1437                           ;Config register IDLOC1 @ 0x2001
  1438                           ;	unspecified, using default values
  1439     2001                     	org	8193
  1440     2001  3FFF               	dw	16383
  1441                           
  1442                           ;Config register IDLOC2 @ 0x2002
  1443                           ;	unspecified, using default values
  1444     2002                     	org	8194
  1445     2002  3FFF               	dw	16383
  1446                           
  1447                           ;Config register IDLOC3 @ 0x2003
  1448                           ;	unspecified, using default values
  1449     2003                     	org	8195
  1450     2003  3FFF               	dw	16383
  1451                           
  1452                           	psect	config
  1453                           
  1454                           ;Config register CONFIG @ 0x2007
  1455                           ;	Oscillator Selection bits
  1456                           ;	FOSC = EXTRC, RC oscillator
  1457                           ;	Watchdog Timer Enable bit
  1458                           ;	WDTE = OFF, WDT disabled
  1459                           ;	Power-up Timer Enable bit
  1460                           ;	PWRTE = OFF, PWRT disabled
  1461                           ;	Brown-out Reset Enable bit
  1462                           ;	BOREN = ON, BOR enabled
  1463                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1464                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1465                           ;	Data EEPROM Memory Code Protection bit
  1466                           ;	CPD = OFF, Data EEPROM code protection off
  1467                           ;	Flash Program Memory Write Enable bits
  1468                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1469                           ;	In-Circuit Debugger Mode bit
  1470                           ;	DEBUG = 0x1, unprogrammed default
  1471                           ;	Flash Program Memory Code Protection bit
  1472                           ;	CP = OFF, Code protection off
  1473     2007                     	org	8199
  1474     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         3
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display_Seg
    _display_Seg->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2645
                                             12 COMMON     2     2      0
                        _display_Seg
                           _int_Port
                         _select_Seg
 ---------------------------------------------------------------------------------
 (1) _select_Seg                                           8     0      8     696
                                              0 COMMON     8     0      8
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_Seg                                          4     2      2    1949
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_Seg
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _int_Port
   _select_Seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 20:22:34 2023

                      _L 002E                        _R 0031                        _i 0033  
                      _j 0032                        pc 0002             ?_display_Seg 0078  
                     l51 05B0                       l54 07EA                       l57 05E6  
                     _Ld 002D                       _Rd 0030                       _Lu 002C  
           ___awdiv@sign 0075                       _Ru 002F                       _nb 002A  
                     fsr 0004                      l309 0710                      l415 0664  
                    l425 0620                      l296 0777                      l801 0712  
                    l811 0726                      l803 0716                      l821 073C  
                    l813 072A                      l805 071B                      l901 065A  
                    l831 075C                      l823 0740                      l815 072C  
                    l807 071D                      l903 0660                      l911 05F0  
                    l833 0763                      l825 0744                      l817 0732  
                    l809 0721                      l921 060F                      l913 05F7  
                    l827 0755                      l819 0735                      l835 0769  
                    l851 06C4                      l843 06B8                      l923 0616  
                    l915 05FB                      l907 05E7                      l931 0778  
                    l837 076E                      l829 075B                      l861 06DD  
                    l853 06C8                      l845 06B9                      l917 05FF  
                    l909 05ED                      l925 061C                      l933 05D0  
                    l941 0687                      l839 0773                      l871 06FC  
                    l863 06E1                      l855 06CD                      l847 06BD  
                    l919 0609                      l943 068F                      l935 0665  
                    l865 06E5                      l857 06D3                      l873 0702  
                    l849 06C2                      l881 0621                      l929 05A8  
                    l945 0698                      l937 066A                      l875 0707  
                    l867 06EF                      l859 06D6                      l891 0637  
                    l883 0623                      l947 06AC                      l939 0673  
                    l877 070C                      l869 06F5                      l893 063B  
                    l885 0629                      l799 0711                      l895 064C  
                    l887 062C                      l897 0652                      l889 0633  
                    l899 0653                      u410 0769                      u330 0716  
                    u411 0768                      u331 0715                      u420 076E  
                    u340 0721                      u500 0702                      u421 076D  
                    u405 075D                      u341 0720                      u501 0701  
                    u350 0732                      u510 0707                      u430 06BD  
                    u351 0731                      u511 0706                      u431 06BC  
                    u440 06C8                      u520 0629                      u441 06C7  
                    u521 0628                      u370 0744                      u450 06D3  
                    u610 05FF                      u371 0743                      u451 06D2  
                    u611 05FE                      u540 063B                      u620 0609  
                    u365 0736                      u541 063A                      u621 0608  
                    u605 05F1                      u390 0755                      u470 06E5  
                    u391 0754                      u471 06E4                      u535 062D  
                    u480 06EF                      u560 064C                      u640 061C  
                    u385 0745                      u481 06EE                      u465 06D7  
                    u561 064B                      u641 061B                      u625 0605  
                    u395 0751                      u555 063C                      u635 0610  
                    u580 0660                      u485 06EB                      u581 065F  
                    u565 0648                      u590 05ED                      u495 06F6  
                    u575 0654                      u591 05EC                      u657 0693  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   _main 0665                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awdiv 0778          __end_of___awmod 0711  
        ___awdiv@divisor 0070          __end_of___lwdiv 0665          __end_of___lwmod 0621  
        ___awdiv@counter 0074                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087             display_Seg@a 0078  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EB             __end_of_main 06B8                   ??_main 007C  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
              ??___lwdiv 0074                ??___lwmod 0074         __end_of_int_Port 05B1  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05B1  
             __pbssBANK0 0032               __pmaintext 0665                ?_int_Port 0070  
                ___awdiv 0711                  ___awmod 06B8                  ___lwdiv 0621  
                ___lwmod 05E7                  __ptext1 05D0                  __ptext2 05A8  
                __ptext3 0778                  __ptext4 05E7                  __ptext5 0621  
                __ptext6 06B8                  __ptext7 0711         ___awmod@dividend 0072  
                _segment 0020     end_of_initialization 07FC               ??_int_Port 0070  
             _select_Seg 05D0                _PORTCbits 0007            select_Seg@rc0 0070  
          select_Seg@rc1 0072            select_Seg@rc2 0074            select_Seg@rc3 0076  
          ??_display_Seg 007A      start_initialization 07EB              ?_select_Seg 0070  
             init_fetch0 05BD              __pdataBANK0 0020      __end_of_display_Seg 07EB  
              ___latbits 0002                __pnvBANK0 002C         ___lwdiv@dividend 0072  
               ?___awdiv 0070                 ?___awmod 0070                 ?___lwdiv 0070  
               ?___lwmod 0070         ___lwdiv@quotient 0074              _display_Seg 0778  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076             ??_select_Seg 0078  
               _int_Port 05A8       __end_of_select_Seg 05E7                 init_ram0 05C1  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0074  
            _timer_count 0034  
