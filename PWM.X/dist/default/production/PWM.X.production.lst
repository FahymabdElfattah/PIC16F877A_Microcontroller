

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 23:33:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 09/02/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0015                     _CCPR1L	set	21
   170     0012                     _T2CON	set	18
   171     0007                     _PORTCbits	set	7
   172     0017                     _CCP1CON	set	23
   173     0092                     _PR2	set	146
   174     0087                     _TRISC	set	135
   175                           
   176                           	psect	cinit
   177     07FB                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FB                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2F7D   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192     0077                     __pbssCOMMON:
   193     0077                     _timer_count:
   194     0077                     	ds	1
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_int_Port:
   199     0070                     ??_int_Port:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_int_PWM:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_int_PWM:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_setPWMDutyCycle1:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     setPWMDutyCycle1@DutyCycle:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 2 bytes @ 0x0
   219     0070                     	ds	2
   220     0072                     ??_setPWMDutyCycle1:
   221                           
   222                           ; 1 bytes @ 0x2
   223     0072                     	ds	2
   224     0074                     ??_main:
   225                           
   226                           ; 1 bytes @ 0x4
   227     0074                     	ds	3
   228                           
   229                           	psect	maintext
   230     077D                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 23 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          3       0       0       0       0
   253 ;;      Totals:         3       0       0       0       0
   254 ;;Total ram usage:        3 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_int_PWM
   258 ;;		_int_Port
   259 ;;		_setPWMDutyCycle1
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     077D                     _main:	
   266                           ;psect for function _main
   267                           
   268     077D                     l681:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271                           
   272                           
   273                           ;main.c: 25:         CCP1CON = 0x0C ;
   274     077D  120A  118A  274D  120A  118A  	fcall	_int_Port
   275     0782                     l683:
   276                           
   277                           ;main.c: 26:         setPWMDutyCycle1(512);
   278     0782  120A  118A  2751  120A  118A  	fcall	_int_PWM
   279     0787                     l685:
   280                           
   281                           ;main.c: 28:         CCP1CON = 0x00 ;
   282     0787  3000               	movlw	0
   283     0788  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   284     0789  3002               	movlw	2
   285     078A  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   286     078B  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   287     0790                     l687:
   288                           
   289                           ;main.c: 29:         PORTCbits.RC2 = 0;
   290     0790  301A               	movlw	26
   291     0791  00F6               	movwf	??_main+2
   292     0792  305E               	movlw	94
   293     0793  00F5               	movwf	??_main+1
   294     0794  306E               	movlw	110
   295     0795  00F4               	movwf	??_main
   296     0796                     u37:
   297     0796  0BF4               	decfsz	??_main,f
   298     0797  2F96               	goto	u37
   299     0798  0BF5               	decfsz	??_main+1,f
   300     0799  2F96               	goto	u37
   301     079A  0BF6               	decfsz	??_main+2,f
   302     079B  2F96               	goto	u37
   303     079C  0000               	nop
   304     079D                     l689:
   305                           
   306                           ;main.c: 30:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   307     079D  1283               	bcf	3,5	;RP0=0, select bank0
   308     079E  1303               	bcf	3,6	;RP1=0, select bank0
   309     079F  0197               	clrf	23	;volatile
   310     07A0                     l691:
   311                           
   312                           ;main.c: 31:         }
   313     07A0  1107               	bcf	7,2	;volatile
   314     07A1                     l693:
   315                           
   316                           ;main.c: 33:     return;
   317     07A1  300C               	movlw	12
   318     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   319     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   320     07A4  0097               	movwf	23	;volatile
   321     07A5                     l695:
   322                           
   323                           ;main.c: 34: }
   324     07A5  3000               	movlw	0
   325     07A6  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   326     07A7  3002               	movlw	2
   327     07A8  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   328     07A9  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   329     07AE                     l697:
   330                           
   331                           ;main.c: 35: void int_Port(){
   332     07AE  301A               	movlw	26
   333     07AF  00F6               	movwf	??_main+2
   334     07B0  305E               	movlw	94
   335     07B1  00F5               	movwf	??_main+1
   336     07B2  306E               	movlw	110
   337     07B3  00F4               	movwf	??_main
   338     07B4                     u47:
   339     07B4  0BF4               	decfsz	??_main,f
   340     07B5  2FB4               	goto	u47
   341     07B6  0BF5               	decfsz	??_main+1,f
   342     07B7  2FB4               	goto	u47
   343     07B8  0BF6               	decfsz	??_main+2,f
   344     07B9  2FB4               	goto	u47
   345     07BA  0000               	nop
   346                           
   347                           ;main.c: 36:     TRISC = 0x00;
   348     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   349     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   350     07BD  0197               	clrf	23	;volatile
   351     07BE                     l699:
   352                           
   353                           ;main.c: 37: }
   354     07BE  1107               	bcf	7,2	;volatile
   355     07BF                     l701:
   356                           
   357                           ;main.c: 38: void int_PWM(){
   358     07BF  301A               	movlw	26
   359     07C0  00F6               	movwf	??_main+2
   360     07C1  305E               	movlw	94
   361     07C2  00F5               	movwf	??_main+1
   362     07C3  306E               	movlw	110
   363     07C4  00F4               	movwf	??_main
   364     07C5                     u57:
   365     07C5  0BF4               	decfsz	??_main,f
   366     07C6  2FC5               	goto	u57
   367     07C7  0BF5               	decfsz	??_main+1,f
   368     07C8  2FC5               	goto	u57
   369     07C9  0BF6               	decfsz	??_main+2,f
   370     07CA  2FC5               	goto	u57
   371     07CB  0000               	nop
   372     07CC                     l703:
   373                           
   374                           ;main.c: 39: 
   375     07CC  300C               	movlw	12
   376     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   377     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   378     07CF  0097               	movwf	23	;volatile
   379     07D0                     l705:
   380                           
   381                           ;main.c: 40: 
   382     07D0  3000               	movlw	0
   383     07D1  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   384     07D2  3002               	movlw	2
   385     07D3  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   386     07D4  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   387     07D9                     l707:
   388                           
   389                           ;main.c: 41: 
   390     07D9  301A               	movlw	26
   391     07DA  00F6               	movwf	??_main+2
   392     07DB  305E               	movlw	94
   393     07DC  00F5               	movwf	??_main+1
   394     07DD  306E               	movlw	110
   395     07DE  00F4               	movwf	??_main
   396     07DF                     u67:
   397     07DF  0BF4               	decfsz	??_main,f
   398     07E0  2FDF               	goto	u67
   399     07E1  0BF5               	decfsz	??_main+1,f
   400     07E2  2FDF               	goto	u67
   401     07E3  0BF6               	decfsz	??_main+2,f
   402     07E4  2FDF               	goto	u67
   403     07E5  0000               	nop
   404     07E6                     l709:
   405                           
   406                           ;main.c: 42:     CCP1CON = 0x0C ;
   407     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   408     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   409     07E8  0197               	clrf	23	;volatile
   410     07E9                     l711:
   411                           
   412                           ;main.c: 43:     PR2 = 0xFF ;
   413     07E9  1107               	bcf	7,2	;volatile
   414     07EA                     l713:
   415                           
   416                           ;main.c: 44: 
   417     07EA  301A               	movlw	26
   418     07EB  00F6               	movwf	??_main+2
   419     07EC  305E               	movlw	94
   420     07ED  00F5               	movwf	??_main+1
   421     07EE  306E               	movlw	110
   422     07EF  00F4               	movwf	??_main
   423     07F0                     u77:
   424     07F0  0BF4               	decfsz	??_main,f
   425     07F1  2FF0               	goto	u77
   426     07F2  0BF5               	decfsz	??_main+1,f
   427     07F3  2FF0               	goto	u77
   428     07F4  0BF6               	decfsz	??_main+2,f
   429     07F5  2FF0               	goto	u77
   430     07F6  0000               	nop
   431     07F7  2FA1               	goto	l693
   432     07F8  120A  118A  2800   	ljmp	start
   433     07FB                     __end_of_main:
   434                           
   435                           	psect	text1
   436     075E                     __ptext1:	
   437 ;; *************** function _setPWMDutyCycle1 *****************
   438 ;; Defined at:
   439 ;;		line 62 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  DutyCycle       2    0[COMMON] unsigned int 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         2       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          2       0       0       0       0
   456 ;;      Totals:         4       0       0       0       0
   457 ;;Total ram usage:        4 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466     075E                     _setPWMDutyCycle1:	
   467                           ;psect for function _setPWMDutyCycle1
   468                           
   469     075E                     l675:	
   470                           ;incstack = 0
   471                           ; Regs used in _setPWMDutyCycle1: [wreg+status,2+status,0]
   472                           
   473     075E  0871               	movf	setPWMDutyCycle1@DutyCycle+1,w
   474     075F  00F3               	movwf	??_setPWMDutyCycle1+1
   475     0760  0870               	movf	setPWMDutyCycle1@DutyCycle,w
   476     0761  00F2               	movwf	??_setPWMDutyCycle1
   477     0762  1003               	clrc
   478     0763  0CF3               	rrf	??_setPWMDutyCycle1+1,f
   479     0764  0CF2               	rrf	??_setPWMDutyCycle1,f
   480     0765  1003               	clrc
   481     0766  0CF3               	rrf	??_setPWMDutyCycle1+1,f
   482     0767  0CF2               	rrf	??_setPWMDutyCycle1,f
   483     0768  0872               	movf	??_setPWMDutyCycle1,w
   484     0769  1283               	bcf	3,5	;RP0=0, select bank0
   485     076A  1303               	bcf	3,6	;RP1=0, select bank0
   486     076B  0095               	movwf	21	;volatile
   487     076C                     l677:
   488     076C  0817               	movf	23,w	;volatile
   489     076D  39CF               	andlw	207
   490     076E  0097               	movwf	23	;volatile
   491     076F                     l679:
   492     076F  0870               	movf	setPWMDutyCycle1@DutyCycle,w
   493     0770  00F2               	movwf	??_setPWMDutyCycle1
   494     0771  3003               	movlw	3
   495     0772                     u25:
   496     0772  1003               	clrc
   497     0773  0DF2               	rlf	??_setPWMDutyCycle1,f
   498     0774  3EFF               	addlw	-1
   499     0775  1D03               	skipz
   500     0776  2F72               	goto	u25
   501     0777  1003               	clrc
   502     0778  0D72               	rlf	??_setPWMDutyCycle1,w
   503     0779  3930               	andlw	48
   504     077A  0417               	iorwf	23,w
   505     077B  0097               	movwf	23	;volatile
   506     077C                     l39:
   507     077C  0008               	return
   508     077D                     __end_of_setPWMDutyCycle1:
   509                           
   510                           	psect	text2
   511     074D                     __ptext2:	
   512 ;; *************** function _int_Port *****************
   513 ;; Defined at:
   514 ;;		line 49 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		status,2
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541     074D                     _int_Port:	
   542                           ;psect for function _int_Port
   543                           
   544     074D                     l631:	
   545                           ;incstack = 0
   546                           ; Regs used in _int_Port: [status,2]
   547                           
   548                           
   549                           ;main.c: 50:     CCP1CON = CCP1CON & 0xCF ;
   550     074D  1683               	bsf	3,5	;RP0=1, select bank1
   551     074E  1303               	bcf	3,6	;RP1=0, select bank1
   552     074F  0187               	clrf	7	;volatile
   553     0750                     l33:
   554     0750  0008               	return
   555     0751                     __end_of_int_Port:
   556                           
   557                           	psect	text3
   558     0751                     __ptext3:	
   559 ;; *************** function _int_PWM *****************
   560 ;; Defined at:
   561 ;;		line 52 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     0751                     _int_PWM:	
   589                           ;psect for function _int_PWM
   590                           
   591     0751                     l633:	
   592                           ;incstack = 0
   593                           ; Regs used in _int_PWM: [wreg]
   594                           
   595     0751  300C               	movlw	12
   596     0752  1283               	bcf	3,5	;RP0=0, select bank0
   597     0753  1303               	bcf	3,6	;RP1=0, select bank0
   598     0754  0097               	movwf	23	;volatile
   599     0755  30FF               	movlw	255
   600     0756  1683               	bsf	3,5	;RP0=1, select bank1
   601     0757  1303               	bcf	3,6	;RP1=0, select bank1
   602     0758  0092               	movwf	18	;volatile
   603     0759  3004               	movlw	4
   604     075A  1283               	bcf	3,5	;RP0=0, select bank0
   605     075B  1303               	bcf	3,6	;RP1=0, select bank0
   606     075C  0092               	movwf	18	;volatile
   607     075D                     l36:
   608     075D  0008               	return
   609     075E                     __end_of_int_PWM:
   610     007E                     btemp	set	126	;btemp
   611     007E                     wtemp0	set	126
   612                           
   613                           	psect	idloc
   614                           
   615                           ;Config register IDLOC0 @ 0x2000
   616                           ;	unspecified, using default values
   617     2000                     	org	8192
   618     2000  3FFF               	dw	16383
   619                           
   620                           ;Config register IDLOC1 @ 0x2001
   621                           ;	unspecified, using default values
   622     2001                     	org	8193
   623     2001  3FFF               	dw	16383
   624                           
   625                           ;Config register IDLOC2 @ 0x2002
   626                           ;	unspecified, using default values
   627     2002                     	org	8194
   628     2002  3FFF               	dw	16383
   629                           
   630                           ;Config register IDLOC3 @ 0x2003
   631                           ;	unspecified, using default values
   632     2003                     	org	8195
   633     2003  3FFF               	dw	16383
   634                           
   635                           	psect	config
   636                           
   637                           ;Config register CONFIG @ 0x2007
   638                           ;	Oscillator Selection bits
   639                           ;	FOSC = EXTRC, RC oscillator
   640                           ;	Watchdog Timer Enable bit
   641                           ;	WDTE = OFF, WDT disabled
   642                           ;	Power-up Timer Enable bit
   643                           ;	PWRTE = OFF, PWRT disabled
   644                           ;	Brown-out Reset Enable bit
   645                           ;	BOREN = ON, BOR enabled
   646                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   647                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   648                           ;	Data EEPROM Memory Code Protection bit
   649                           ;	CPD = OFF, Data EEPROM code protection off
   650                           ;	Flash Program Memory Write Enable bits
   651                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   652                           ;	In-Circuit Debugger Mode bit
   653                           ;	DEBUG = 0x1, unprogrammed default
   654                           ;	Flash Program Memory Code Protection bit
   655                           ;	CP = OFF, Code protection off
   656     2007                     	org	8199
   657     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setPWMDutyCycle1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     272
                                              4 COMMON     3     3      0
                            _int_PWM
                           _int_Port
                   _setPWMDutyCycle1
 ---------------------------------------------------------------------------------
 (1) _setPWMDutyCycle1                                     4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_PWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_PWM
   _int_Port
   _setPWMDutyCycle1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 23:33:43 2023

                       l33 0750                         l36 075D                         l39 077C  
                       u25 0772                         u37 0796                         u47 07B4  
                       u57 07C5                         u67 07DF                         u77 07F0  
                      l701 07BF                        l631 074D                        l711 07E9  
                      l703 07CC                        l633 0751                        l713 07EA  
                      l705 07D0                        l707 07D9                        l709 07E6  
                      l681 077D                        l675 075E                        l691 07A0  
                      l683 0782                        l677 076C                        l693 07A1  
                      l685 0787                        l679 076F                        l695 07A5  
                      l687 0790                        l697 07AE                        l689 079D  
                      l699 07BE                        _PR2 0092                       _main 077D  
                     btemp 007E                       start 0000                      ?_main 0070  
                    _T2CON 0012                      _TRISC 0087            __end_of_int_PWM 075E  
                    status 0003                      wtemp0 007E            __initialization 07FB  
             __end_of_main 07FB                     ??_main 0074  setPWMDutyCycle1@DutyCycle 0070  
                   _CCPR1L 0015           __end_of_int_Port 0751                  ??_int_PWM 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                 __pmaintext 077D  
                  _CCP1CON 0017                  ?_int_Port 0070                    __ptext1 075E  
                  __ptext2 074D                    __ptext3 0751                    _int_PWM 0751  
     end_of_initialization 07FC                 ??_int_Port 0070           _setPWMDutyCycle1 075E  
                _PORTCbits 0007        start_initialization 07FB                __pbssCOMMON 0077  
                ___latbits 0002                   ?_int_PWM 0070   __end_of_setPWMDutyCycle1 077D  
                 _int_Port 074D                _timer_count 0077          ?_setPWMDutyCycle1 0070  
       ??_setPWMDutyCycle1 0072  
