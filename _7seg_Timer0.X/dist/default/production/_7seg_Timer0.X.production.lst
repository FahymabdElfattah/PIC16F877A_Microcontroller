

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 23:27:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 09/02/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000E                     	;# 
   138     000F                     	;# 
   139     0010                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001D                     	;# 
   155     001E                     	;# 
   156     001F                     	;# 
   157     0081                     	;# 
   158     0085                     	;# 
   159     0086                     	;# 
   160     0087                     	;# 
   161     0088                     	;# 
   162     0089                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0094                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182                           
   183                           	psect	idataBANK0
   184     02E9                     __pidataBANK0:
   185                           
   186                           ;initializer for _segment
   187     02E9  343F               	retlw	63
   188     02EA  3406               	retlw	6
   189     02EB  345B               	retlw	91
   190     02EC  344F               	retlw	79
   191     02ED  3466               	retlw	102
   192     02EE  346D               	retlw	109
   193     02EF  347D               	retlw	125
   194     02F0  3407               	retlw	7
   195     02F1  347F               	retlw	127
   196     02F2  346F               	retlw	111
   197                           
   198                           ;initializer for _nb
   199     02F3  34FC               	retlw	252
   200     02F4  3426               	retlw	38
   201                           
   202                           	psect	nvBANK0
   203     003B                     __pnvBANK0:
   204     003B                     _Lu:
   205     003B                     	ds	1
   206     003C                     _Ld:
   207     003C                     	ds	1
   208     003D                     _L:
   209     003D                     	ds	1
   210     003E                     _Ru:
   211     003E                     	ds	1
   212     003F                     _Rd:
   213     003F                     	ds	1
   214     0040                     _R:
   215     0040                     	ds	1
   216     0007                     _PORTCbits	set	7
   217     0001                     _TMR0	set	1
   218     0007                     _PORTC	set	7
   219     0006                     _PORTB	set	6
   220     000B                     _INTCONbits	set	11
   221     0081                     _OPTION_REG	set	129
   222     0087                     _TRISC	set	135
   223     0086                     _TRISB	set	134
   224                           
   225                           	psect	cinit
   226     0013                     start_initialization:	
   227                           ; #config settings
   228                           
   229     0013                     __initialization:
   230                           
   231                           ; Initialize objects allocated to BANK0
   232     0013  1383               	bcf	3,7	;select IRP bank0
   233     0014  303B               	movlw	low (__pdataBANK0+12)
   234     0015  00FD               	movwf	btemp+-1
   235     0016  3002               	movlw	high __pidataBANK0
   236     0017  00FE               	movwf	btemp
   237     0018  30E9               	movlw	low __pidataBANK0
   238     0019  00FF               	movwf	btemp+1
   239     001A  302F               	movlw	low __pdataBANK0
   240     001B  0084               	movwf	4
   241     001C  120A  118A  22DA  120A  118A  	fcall	init_ram0
   242                           
   243                           ; Clear objects allocated to BANK0
   244     0021  01C1               	clrf	__pbssBANK0& (0+127)
   245                           
   246                           ; Clear objects allocated to COMMON
   247     0022  01FC               	clrf	__pbssCOMMON& (0+127)
   248     0023  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   249     0024                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252     0024                     __end_of__initialization:
   253     0024  0183               	clrf	3
   254     0025  120A  118A  2A84   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257     007C                     __pbssCOMMON:
   258     007C                     _i:
   259     007C                     	ds	1
   260     007D                     _timer_count:
   261     007D                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264     0041                     __pbssBANK0:
   265     0041                     _j:
   266     0041                     	ds	1
   267                           
   268                           	psect	dataBANK0
   269     002F                     __pdataBANK0:
   270     002F                     _segment:
   271     002F                     	ds	10
   272     0039                     _nb:
   273     0039                     	ds	2
   274                           
   275                           	psect	inittext
   276     02D6                     init_fetch0:	
   277                           ;	Called with low address in FSR and high address in W
   278                           
   279     02D6  087E               	movf	btemp,w
   280     02D7  008A               	movwf	10
   281     02D8  087F               	movf	btemp+1,w
   282     02D9  0082               	movwf	2
   283     02DA                     init_ram0:	
   284                           ;Called with:
   285                           ;	high address of idata address in btemp 
   286                           ;	low address of idata address in btemp+1 
   287                           ;	low address of data in FSR
   288                           ;	high address + 1 of data in btemp-1
   289                           
   290     02DA  120A  118A  22D6  120A  118A  	fcall	init_fetch0
   291     02DF  0080               	movwf	0
   292     02E0  0A84               	incf	4,f
   293     02E1  0804               	movf	4,w
   294     02E2  067D               	xorwf	btemp+-1,w
   295     02E3  1903               	btfsc	3,2
   296     02E4  3400               	retlw	0
   297     02E5  0AFF               	incf	btemp+1,f
   298     02E6  1903               	btfsc	3,2
   299     02E7  0AFE               	incf	btemp,f
   300     02E8  2ADA               	goto	init_ram0
   301                           
   302                           	psect	cstackCOMMON
   303     0070                     __pcstackCOMMON:
   304     0070                     ?_select_Seg:
   305     0070                     ?_int_Port:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_int_Timer:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_timer_0:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     select_Seg@rc0:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 2 bytes @ 0x0
   322     0070                     	ds	2
   323     0072                     select_Seg@rc1:
   324                           
   325                           ; 2 bytes @ 0x2
   326     0072                     	ds	2
   327     0074                     select_Seg@rc2:
   328                           
   329                           ; 2 bytes @ 0x4
   330     0074                     	ds	2
   331     0076                     select_Seg@rc3:
   332                           
   333                           ; 2 bytes @ 0x6
   334     0076                     	ds	2
   335     0078                     ??_select_Seg:
   336     0078                     ??_timer_0:	
   337                           ; 1 bytes @ 0x8
   338                           
   339                           
   340                           ; 1 bytes @ 0x8
   341     0078                     	ds	4
   342                           
   343                           	psect	cstackBANK0
   344     0020                     __pcstackBANK0:
   345     0020                     ??_int_Port:
   346     0020                     ??_int_Timer:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0020                     ?___awdiv:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0020                     ?___awmod:	
   353                           ; 2 bytes @ 0x0
   354                           
   355     0020                     ?___lwdiv:	
   356                           ; 2 bytes @ 0x0
   357                           
   358     0020                     ?___lwmod:	
   359                           ; 2 bytes @ 0x0
   360                           
   361     0020                     ___awdiv@divisor:	
   362                           ; 2 bytes @ 0x0
   363                           
   364     0020                     ___awmod@divisor:	
   365                           ; 2 bytes @ 0x0
   366                           
   367     0020                     ___lwdiv@divisor:	
   368                           ; 2 bytes @ 0x0
   369                           
   370     0020                     ___lwmod@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373                           
   374                           ; 2 bytes @ 0x0
   375     0020                     	ds	2
   376     0022                     ___awdiv@dividend:
   377     0022                     ___awmod@dividend:	
   378                           ; 2 bytes @ 0x2
   379                           
   380     0022                     ___lwdiv@dividend:	
   381                           ; 2 bytes @ 0x2
   382                           
   383     0022                     ___lwmod@dividend:	
   384                           ; 2 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388     0022                     	ds	2
   389     0024                     ??___awdiv:
   390     0024                     ??___awmod:	
   391                           ; 1 bytes @ 0x4
   392                           
   393     0024                     ??___lwdiv:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0024                     ??___lwmod:	
   397                           ; 1 bytes @ 0x4
   398                           
   399     0024                     ___awdiv@counter:	
   400                           ; 1 bytes @ 0x4
   401                           
   402     0024                     ___awmod@counter:	
   403                           ; 1 bytes @ 0x4
   404                           
   405     0024                     ___lwmod@counter:	
   406                           ; 1 bytes @ 0x4
   407                           
   408     0024                     ___lwdiv@quotient:	
   409                           ; 1 bytes @ 0x4
   410                           
   411                           
   412                           ; 2 bytes @ 0x4
   413     0024                     	ds	1
   414     0025                     ___awdiv@sign:
   415     0025                     ___awmod@sign:	
   416                           ; 1 bytes @ 0x5
   417                           
   418                           
   419                           ; 1 bytes @ 0x5
   420     0025                     	ds	1
   421     0026                     ___lwdiv@counter:
   422     0026                     ___awdiv@quotient:	
   423                           ; 1 bytes @ 0x6
   424                           
   425                           
   426                           ; 2 bytes @ 0x6
   427     0026                     	ds	2
   428     0028                     ?_display_Seg:
   429     0028                     display_Seg@a:	
   430                           ; 1 bytes @ 0x8
   431                           
   432                           
   433                           ; 2 bytes @ 0x8
   434     0028                     	ds	2
   435     002A                     ??_display_Seg:
   436                           
   437                           ; 1 bytes @ 0xA
   438     002A                     	ds	2
   439     002C                     ??_main:
   440                           
   441                           ; 1 bytes @ 0xC
   442     002C                     	ds	3
   443                           
   444                           	psect	maintext
   445     0284                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 55 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       3       0       0       0
   468 ;;      Totals:         0       3       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		_display_Seg
   473 ;;		_int_Port
   474 ;;		_int_Timer
   475 ;; This function is called by:
   476 ;;		Startup code after reset
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480     0284                     _main:	
   481                           ;psect for function _main
   482                           
   483     0284                     l1034:	
   484                           ;incstack = 0
   485                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   486                           
   487                           
   488                           ;main.c: 57: int_Port();
   489     0284  120A  118A  2301  120A  118A  	fcall	_int_Port
   490     0289                     l1036:
   491                           
   492                           ;main.c: 58: int_Timer();
   493     0289  120A  118A  22F5  120A  118A  	fcall	_int_Timer
   494     028E                     l1038:
   495                           
   496                           ;main.c: 60: display_Seg(nb);
   497     028E  1283               	bcf	3,5	;RP0=0, select bank0
   498     028F  1303               	bcf	3,6	;RP1=0, select bank0
   499     0290  083A               	movf	_nb+1,w
   500     0291  00A9               	movwf	display_Seg@a+1
   501     0292  0839               	movf	_nb,w
   502     0293  00A8               	movwf	display_Seg@a
   503     0294  120A  118A  20C9  120A  118A  	fcall	_display_Seg
   504     0299                     l1040:
   505                           
   506                           ;main.c: 61: nb++;
   507     0299  3001               	movlw	1
   508     029A  1283               	bcf	3,5	;RP0=0, select bank0
   509     029B  1303               	bcf	3,6	;RP1=0, select bank0
   510     029C  07B9               	addwf	_nb,f
   511     029D  1803               	skipnc
   512     029E  0ABA               	incf	_nb+1,f
   513     029F  3000               	movlw	0
   514     02A0  07BA               	addwf	_nb+1,f
   515     02A1                     l1042:
   516                           
   517                           ;main.c: 62: if (nb>9999){
   518     02A1  3027               	movlw	39
   519     02A2  023A               	subwf	_nb+1,w
   520     02A3  3010               	movlw	16
   521     02A4  1903               	skipnz
   522     02A5  0239               	subwf	_nb,w
   523     02A6  1C03               	skipc
   524     02A7  2AA9               	goto	u781
   525     02A8  2AAA               	goto	u780
   526     02A9                     u781:
   527     02A9  2AAC               	goto	l1046
   528     02AA                     u780:
   529     02AA                     l1044:
   530                           
   531                           ;main.c: 63: nb = 0;
   532     02AA  01B9               	clrf	_nb
   533     02AB  01BA               	clrf	_nb+1
   534     02AC                     l1046:
   535                           
   536                           ;main.c: 64: };main.c: 65: _delay((unsigned long)((1000)*(20000000/4000.0)));
   537     02AC  301A               	movlw	26
   538     02AD  1283               	bcf	3,5	;RP0=0, select bank0
   539     02AE  1303               	bcf	3,6	;RP1=0, select bank0
   540     02AF  00AE               	movwf	??_main+2
   541     02B0  305E               	movlw	94
   542     02B1  00AD               	movwf	??_main+1
   543     02B2  306D               	movlw	109
   544     02B3  00AC               	movwf	??_main
   545     02B4                     u797:
   546     02B4  0BAC               	decfsz	??_main,f
   547     02B5  2AB4               	goto	u797
   548     02B6  0BAD               	decfsz	??_main+1,f
   549     02B7  2AB4               	goto	u797
   550     02B8  0BAE               	decfsz	??_main+2,f
   551     02B9  2AB4               	goto	u797
   552     02BA  2ABB               	nop2
   553     02BB  2A8E               	goto	l1038
   554     02BC  120A  118A  2810   	ljmp	start
   555     02BF                     __end_of_main:
   556                           
   557                           	psect	text1
   558     02F5                     __ptext1:	
   559 ;; *************** function _int_Timer *****************
   560 ;; Defined at:
   561 ;;		line 79 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 2
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     02F5                     _int_Timer:	
   590                           ;psect for function _int_Timer
   591                           
   592     02F5                     l994:	
   593                           ;incstack = 0
   594                           ; Regs used in _int_Timer: [wreg]
   595                           
   596                           
   597                           ;main.c: 80: INTCONbits.GIE = 1;
   598     02F5  178B               	bsf	11,7	;volatile
   599                           
   600                           ;main.c: 81: INTCONbits.PEIE = 1;
   601     02F6  170B               	bsf	11,6	;volatile
   602                           
   603                           ;main.c: 82: INTCONbits.TMR0IE = 1;
   604     02F7  168B               	bsf	11,5	;volatile
   605     02F8                     l996:
   606                           
   607                           ;main.c: 84: OPTION_REG = 0x07;
   608     02F8  3007               	movlw	7
   609     02F9  1683               	bsf	3,5	;RP0=1, select bank1
   610     02FA  1303               	bcf	3,6	;RP1=0, select bank1
   611     02FB  0081               	movwf	1	;volatile
   612                           
   613                           ;main.c: 85: TMR0 = 59 ;
   614     02FC  303B               	movlw	59
   615     02FD  1283               	bcf	3,5	;RP0=0, select bank0
   616     02FE  1303               	bcf	3,6	;RP1=0, select bank0
   617     02FF  0081               	movwf	1	;volatile
   618     0300                     l74:
   619     0300  0008               	return
   620     0301                     __end_of_int_Timer:
   621                           
   622                           	psect	text2
   623     0301                     __ptext2:	
   624 ;; *************** function _int_Port *****************
   625 ;; Defined at:
   626 ;;		line 73 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 2
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     0301                     _int_Port:	
   655                           ;psect for function _int_Port
   656                           
   657     0301                     l992:	
   658                           ;incstack = 0
   659                           ; Regs used in _int_Port: [status,2]
   660                           
   661                           
   662                           ;main.c: 74: TRISB = 0x00;
   663     0301  1683               	bsf	3,5	;RP0=1, select bank1
   664     0302  1303               	bcf	3,6	;RP1=0, select bank1
   665     0303  0186               	clrf	6	;volatile
   666                           
   667                           ;main.c: 75: TRISC = 0x00;
   668     0304  0187               	clrf	7	;volatile
   669                           
   670                           ;main.c: 76: PORTC = 0x00;
   671     0305  1283               	bcf	3,5	;RP0=0, select bank0
   672     0306  1303               	bcf	3,6	;RP1=0, select bank0
   673     0307  0187               	clrf	7	;volatile
   674                           
   675                           ;main.c: 77: PORTB = 0x00;
   676     0308  0186               	clrf	6	;volatile
   677     0309                     l71:
   678     0309  0008               	return
   679     030A                     __end_of_int_Port:
   680                           
   681                           	psect	text3
   682     00C9                     __ptext3:	
   683 ;; *************** function _display_Seg *****************
   684 ;; Defined at:
   685 ;;		line 87 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  a               2    8[BANK0 ] unsigned short 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       2       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       2       0       0       0
   702 ;;      Totals:         0       4       0       0       0
   703 ;;Total ram usage:        4 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 3
   706 ;; This function calls:
   707 ;;		___awdiv
   708 ;;		___awmod
   709 ;;		___lwdiv
   710 ;;		___lwmod
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716     00C9                     _display_Seg:	
   717                           ;psect for function _display_Seg
   718                           
   719     00C9                     l998:	
   720                           ;incstack = 0
   721                           ; Regs used in _display_Seg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   722                           
   723                           
   724                           ;main.c: 88: R = a/100;
   725     00C9  3064               	movlw	100
   726     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   727     00CB  1303               	bcf	3,6	;RP1=0, select bank0
   728     00CC  00A0               	movwf	___lwdiv@divisor
   729     00CD  3000               	movlw	0
   730     00CE  00A1               	movwf	___lwdiv@divisor+1
   731     00CF  0829               	movf	display_Seg@a+1,w
   732     00D0  00A3               	movwf	___lwdiv@dividend+1
   733     00D1  0828               	movf	display_Seg@a,w
   734     00D2  00A2               	movwf	___lwdiv@dividend
   735     00D3  120A  118A  2202  120A  118A  	fcall	___lwdiv
   736     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   737     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   738     00DA  0820               	movf	?___lwdiv,w
   739     00DB  00C0               	movwf	_R
   740                           
   741                           ;main.c: 89: Rd = R/10;
   742     00DC  300A               	movlw	10
   743     00DD  00A0               	movwf	___awdiv@divisor
   744     00DE  3000               	movlw	0
   745     00DF  00A1               	movwf	___awdiv@divisor+1
   746     00E0  0840               	movf	_R,w
   747     00E1  00AA               	movwf	??_display_Seg
   748     00E2  01AB               	clrf	??_display_Seg+1
   749     00E3  082A               	movf	??_display_Seg,w
   750     00E4  00A2               	movwf	___awdiv@dividend
   751     00E5  082B               	movf	??_display_Seg+1,w
   752     00E6  00A3               	movwf	___awdiv@dividend+1
   753     00E7  120A  118A  213E  120A  118A  	fcall	___awdiv
   754     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   755     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   756     00EE  0820               	movf	?___awdiv,w
   757     00EF  00BF               	movwf	_Rd
   758                           
   759                           ;main.c: 90: Ru = R%10;
   760     00F0  300A               	movlw	10
   761     00F1  00A0               	movwf	___awmod@divisor
   762     00F2  3000               	movlw	0
   763     00F3  00A1               	movwf	___awmod@divisor+1
   764     00F4  0840               	movf	_R,w
   765     00F5  00AA               	movwf	??_display_Seg
   766     00F6  01AB               	clrf	??_display_Seg+1
   767     00F7  082A               	movf	??_display_Seg,w
   768     00F8  00A2               	movwf	___awmod@dividend
   769     00F9  082B               	movf	??_display_Seg+1,w
   770     00FA  00A3               	movwf	___awmod@dividend+1
   771     00FB  120A  118A  21A7  120A  118A  	fcall	___awmod
   772     0100  1283               	bcf	3,5	;RP0=0, select bank0
   773     0101  1303               	bcf	3,6	;RP1=0, select bank0
   774     0102  0820               	movf	?___awmod,w
   775     0103  00BE               	movwf	_Ru
   776                           
   777                           ;main.c: 91: L = a%100;
   778     0104  3064               	movlw	100
   779     0105  00A0               	movwf	___lwmod@divisor
   780     0106  3000               	movlw	0
   781     0107  00A1               	movwf	___lwmod@divisor+1
   782     0108  0829               	movf	display_Seg@a+1,w
   783     0109  00A3               	movwf	___lwmod@dividend+1
   784     010A  0828               	movf	display_Seg@a,w
   785     010B  00A2               	movwf	___lwmod@dividend
   786     010C  120A  118A  2248  120A  118A  	fcall	___lwmod
   787     0111  1283               	bcf	3,5	;RP0=0, select bank0
   788     0112  1303               	bcf	3,6	;RP1=0, select bank0
   789     0113  0820               	movf	?___lwmod,w
   790     0114  00BD               	movwf	_L
   791                           
   792                           ;main.c: 92: Ld = L/10;
   793     0115  300A               	movlw	10
   794     0116  00A0               	movwf	___awdiv@divisor
   795     0117  3000               	movlw	0
   796     0118  00A1               	movwf	___awdiv@divisor+1
   797     0119  083D               	movf	_L,w
   798     011A  00AA               	movwf	??_display_Seg
   799     011B  01AB               	clrf	??_display_Seg+1
   800     011C  082A               	movf	??_display_Seg,w
   801     011D  00A2               	movwf	___awdiv@dividend
   802     011E  082B               	movf	??_display_Seg+1,w
   803     011F  00A3               	movwf	___awdiv@dividend+1
   804     0120  120A  118A  213E  120A  118A  	fcall	___awdiv
   805     0125  1283               	bcf	3,5	;RP0=0, select bank0
   806     0126  1303               	bcf	3,6	;RP1=0, select bank0
   807     0127  0820               	movf	?___awdiv,w
   808     0128  00BC               	movwf	_Ld
   809                           
   810                           ;main.c: 93: Lu = L%10;
   811     0129  300A               	movlw	10
   812     012A  00A0               	movwf	___awmod@divisor
   813     012B  3000               	movlw	0
   814     012C  00A1               	movwf	___awmod@divisor+1
   815     012D  083D               	movf	_L,w
   816     012E  00AA               	movwf	??_display_Seg
   817     012F  01AB               	clrf	??_display_Seg+1
   818     0130  082A               	movf	??_display_Seg,w
   819     0131  00A2               	movwf	___awmod@dividend
   820     0132  082B               	movf	??_display_Seg+1,w
   821     0133  00A3               	movwf	___awmod@dividend+1
   822     0134  120A  118A  21A7  120A  118A  	fcall	___awmod
   823     0139  1283               	bcf	3,5	;RP0=0, select bank0
   824     013A  1303               	bcf	3,6	;RP1=0, select bank0
   825     013B  0820               	movf	?___awmod,w
   826     013C  00BB               	movwf	_Lu
   827     013D                     l77:
   828     013D  0008               	return
   829     013E                     __end_of_display_Seg:
   830                           
   831                           	psect	text4
   832     0248                     __ptext4:	
   833 ;; *************** function ___lwmod *****************
   834 ;; Defined at:
   835 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  divisor         2    0[BANK0 ] unsigned int 
   838 ;;  dividend        2    2[BANK0 ] unsigned int 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  counter         1    4[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2    0[BANK0 ] unsigned int 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, btemp+1
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       4       0       0       0
   851 ;;      Locals:         0       1       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       5       0       0       0
   854 ;;Total ram usage:        5 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 2
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_display_Seg
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864     0248                     ___lwmod:	
   865                           ;psect for function ___lwmod
   866                           
   867     0248                     l968:	
   868                           ;incstack = 0
   869                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   870                           
   871     0248  1283               	bcf	3,5	;RP0=0, select bank0
   872     0249  1303               	bcf	3,6	;RP1=0, select bank0
   873     024A  0820               	movf	___lwmod@divisor,w
   874     024B  0421               	iorwf	___lwmod@divisor+1,w
   875     024C  1903               	btfsc	3,2
   876     024D  2A4F               	goto	u661
   877     024E  2A50               	goto	u660
   878     024F                     u661:
   879     024F  2A7F               	goto	l986
   880     0250                     u660:
   881     0250                     l970:
   882     0250  01A4               	clrf	___lwmod@counter
   883     0251  0AA4               	incf	___lwmod@counter,f
   884     0252  2A5E               	goto	l976
   885     0253                     l972:
   886     0253  3001               	movlw	1
   887     0254                     u675:
   888     0254  1003               	clrc
   889     0255  0DA0               	rlf	___lwmod@divisor,f
   890     0256  0DA1               	rlf	___lwmod@divisor+1,f
   891     0257  3EFF               	addlw	-1
   892     0258  1D03               	skipz
   893     0259  2A54               	goto	u675
   894     025A                     l974:
   895     025A  3001               	movlw	1
   896     025B  00FF               	movwf	btemp+1
   897     025C  087F               	movf	btemp+1,w
   898     025D  07A4               	addwf	___lwmod@counter,f
   899     025E                     l976:
   900     025E  1FA1               	btfss	___lwmod@divisor+1,7
   901     025F  2A61               	goto	u681
   902     0260  2A62               	goto	u680
   903     0261                     u681:
   904     0261  2A53               	goto	l972
   905     0262                     u680:
   906     0262                     l978:
   907     0262  0821               	movf	___lwmod@divisor+1,w
   908     0263  0223               	subwf	___lwmod@dividend+1,w
   909     0264  1D03               	skipz
   910     0265  2A68               	goto	u695
   911     0266  0820               	movf	___lwmod@divisor,w
   912     0267  0222               	subwf	___lwmod@dividend,w
   913     0268                     u695:
   914     0268  1C03               	skipc
   915     0269  2A6B               	goto	u691
   916     026A  2A6C               	goto	u690
   917     026B                     u691:
   918     026B  2A72               	goto	l982
   919     026C                     u690:
   920     026C                     l980:
   921     026C  0820               	movf	___lwmod@divisor,w
   922     026D  02A2               	subwf	___lwmod@dividend,f
   923     026E  0821               	movf	___lwmod@divisor+1,w
   924     026F  1C03               	skipc
   925     0270  03A3               	decf	___lwmod@dividend+1,f
   926     0271  02A3               	subwf	___lwmod@dividend+1,f
   927     0272                     l982:
   928     0272  3001               	movlw	1
   929     0273                     u705:
   930     0273  1003               	clrc
   931     0274  0CA1               	rrf	___lwmod@divisor+1,f
   932     0275  0CA0               	rrf	___lwmod@divisor,f
   933     0276  3EFF               	addlw	-1
   934     0277  1D03               	skipz
   935     0278  2A73               	goto	u705
   936     0279                     l984:
   937     0279  3001               	movlw	1
   938     027A  02A4               	subwf	___lwmod@counter,f
   939     027B  1D03               	btfss	3,2
   940     027C  2A7E               	goto	u711
   941     027D  2A7F               	goto	u710
   942     027E                     u711:
   943     027E  2A62               	goto	l978
   944     027F                     u710:
   945     027F                     l986:
   946     027F  0823               	movf	___lwmod@dividend+1,w
   947     0280  00A1               	movwf	?___lwmod+1
   948     0281  0822               	movf	___lwmod@dividend,w
   949     0282  00A0               	movwf	?___lwmod
   950     0283                     l448:
   951     0283  0008               	return
   952     0284                     __end_of___lwmod:
   953                           
   954                           	psect	text5
   955     0202                     __ptext5:	
   956 ;; *************** function ___lwdiv *****************
   957 ;; Defined at:
   958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  divisor         2    0[BANK0 ] unsigned int 
   961 ;;  dividend        2    2[BANK0 ] unsigned int 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  quotient        2    4[BANK0 ] unsigned int 
   964 ;;  counter         1    6[BANK0 ] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    0[BANK0 ] unsigned int 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, btemp+1
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       4       0       0       0
   975 ;;      Locals:         0       3       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       7       0       0       0
   978 ;;Total ram usage:        7 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 2
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_display_Seg
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     0202                     ___lwdiv:	
   989                           ;psect for function ___lwdiv
   990                           
   991     0202                     l942:	
   992                           ;incstack = 0
   993                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   994                           
   995     0202  1283               	bcf	3,5	;RP0=0, select bank0
   996     0203  1303               	bcf	3,6	;RP1=0, select bank0
   997     0204  01A4               	clrf	___lwdiv@quotient
   998     0205  01A5               	clrf	___lwdiv@quotient+1
   999     0206                     l944:
  1000     0206  0820               	movf	___lwdiv@divisor,w
  1001     0207  0421               	iorwf	___lwdiv@divisor+1,w
  1002     0208  1903               	btfsc	3,2
  1003     0209  2A0B               	goto	u591
  1004     020A  2A0C               	goto	u590
  1005     020B                     u591:
  1006     020B  2A43               	goto	l964
  1007     020C                     u590:
  1008     020C                     l946:
  1009     020C  01A6               	clrf	___lwdiv@counter
  1010     020D  0AA6               	incf	___lwdiv@counter,f
  1011     020E  2A1A               	goto	l952
  1012     020F                     l948:
  1013     020F  3001               	movlw	1
  1014     0210                     u605:
  1015     0210  1003               	clrc
  1016     0211  0DA0               	rlf	___lwdiv@divisor,f
  1017     0212  0DA1               	rlf	___lwdiv@divisor+1,f
  1018     0213  3EFF               	addlw	-1
  1019     0214  1D03               	skipz
  1020     0215  2A10               	goto	u605
  1021     0216                     l950:
  1022     0216  3001               	movlw	1
  1023     0217  00FF               	movwf	btemp+1
  1024     0218  087F               	movf	btemp+1,w
  1025     0219  07A6               	addwf	___lwdiv@counter,f
  1026     021A                     l952:
  1027     021A  1FA1               	btfss	___lwdiv@divisor+1,7
  1028     021B  2A1D               	goto	u611
  1029     021C  2A1E               	goto	u610
  1030     021D                     u611:
  1031     021D  2A0F               	goto	l948
  1032     021E                     u610:
  1033     021E                     l954:
  1034     021E  3001               	movlw	1
  1035     021F                     u625:
  1036     021F  1003               	clrc
  1037     0220  0DA4               	rlf	___lwdiv@quotient,f
  1038     0221  0DA5               	rlf	___lwdiv@quotient+1,f
  1039     0222  3EFF               	addlw	-1
  1040     0223  1D03               	skipz
  1041     0224  2A1F               	goto	u625
  1042     0225  0821               	movf	___lwdiv@divisor+1,w
  1043     0226  0223               	subwf	___lwdiv@dividend+1,w
  1044     0227  1D03               	skipz
  1045     0228  2A2B               	goto	u635
  1046     0229  0820               	movf	___lwdiv@divisor,w
  1047     022A  0222               	subwf	___lwdiv@dividend,w
  1048     022B                     u635:
  1049     022B  1C03               	skipc
  1050     022C  2A2E               	goto	u631
  1051     022D  2A2F               	goto	u630
  1052     022E                     u631:
  1053     022E  2A36               	goto	l960
  1054     022F                     u630:
  1055     022F                     l956:
  1056     022F  0820               	movf	___lwdiv@divisor,w
  1057     0230  02A2               	subwf	___lwdiv@dividend,f
  1058     0231  0821               	movf	___lwdiv@divisor+1,w
  1059     0232  1C03               	skipc
  1060     0233  03A3               	decf	___lwdiv@dividend+1,f
  1061     0234  02A3               	subwf	___lwdiv@dividend+1,f
  1062     0235                     l958:
  1063     0235  1424               	bsf	___lwdiv@quotient,0
  1064     0236                     l960:
  1065     0236  3001               	movlw	1
  1066     0237                     u645:
  1067     0237  1003               	clrc
  1068     0238  0CA1               	rrf	___lwdiv@divisor+1,f
  1069     0239  0CA0               	rrf	___lwdiv@divisor,f
  1070     023A  3EFF               	addlw	-1
  1071     023B  1D03               	skipz
  1072     023C  2A37               	goto	u645
  1073     023D                     l962:
  1074     023D  3001               	movlw	1
  1075     023E  02A6               	subwf	___lwdiv@counter,f
  1076     023F  1D03               	btfss	3,2
  1077     0240  2A42               	goto	u651
  1078     0241  2A43               	goto	u650
  1079     0242                     u651:
  1080     0242  2A1E               	goto	l954
  1081     0243                     u650:
  1082     0243                     l964:
  1083     0243  0825               	movf	___lwdiv@quotient+1,w
  1084     0244  00A1               	movwf	?___lwdiv+1
  1085     0245  0824               	movf	___lwdiv@quotient,w
  1086     0246  00A0               	movwf	?___lwdiv
  1087     0247                     l438:
  1088     0247  0008               	return
  1089     0248                     __end_of___lwdiv:
  1090                           
  1091                           	psect	text6
  1092     01A7                     __ptext6:	
  1093 ;; *************** function ___awmod *****************
  1094 ;; Defined at:
  1095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  divisor         2    0[BANK0 ] int 
  1098 ;;  dividend        2    2[BANK0 ] int 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  sign            1    5[BANK0 ] unsigned char 
  1101 ;;  counter         1    4[BANK0 ] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  2    0[BANK0 ] int 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, btemp+1
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       4       0       0       0
  1112 ;;      Locals:         0       2       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       6       0       0       0
  1115 ;;Total ram usage:        6 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 2
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_display_Seg
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125     01A7                     ___awmod:	
  1126                           ;psect for function ___awmod
  1127                           
  1128     01A7                     l904:	
  1129                           ;incstack = 0
  1130                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1131                           
  1132     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1133     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1134     01A9  01A5               	clrf	___awmod@sign
  1135     01AA                     l906:
  1136     01AA  1FA3               	btfss	___awmod@dividend+1,7
  1137     01AB  29AD               	goto	u501
  1138     01AC  29AE               	goto	u500
  1139     01AD                     u501:
  1140     01AD  29B5               	goto	l912
  1141     01AE                     u500:
  1142     01AE                     l908:
  1143     01AE  09A2               	comf	___awmod@dividend,f
  1144     01AF  09A3               	comf	___awmod@dividend+1,f
  1145     01B0  0AA2               	incf	___awmod@dividend,f
  1146     01B1  1903               	skipnz
  1147     01B2  0AA3               	incf	___awmod@dividend+1,f
  1148     01B3                     l910:
  1149     01B3  01A5               	clrf	___awmod@sign
  1150     01B4  0AA5               	incf	___awmod@sign,f
  1151     01B5                     l912:
  1152     01B5  1FA1               	btfss	___awmod@divisor+1,7
  1153     01B6  29B8               	goto	u511
  1154     01B7  29B9               	goto	u510
  1155     01B8                     u511:
  1156     01B8  29BE               	goto	l916
  1157     01B9                     u510:
  1158     01B9                     l914:
  1159     01B9  09A0               	comf	___awmod@divisor,f
  1160     01BA  09A1               	comf	___awmod@divisor+1,f
  1161     01BB  0AA0               	incf	___awmod@divisor,f
  1162     01BC  1903               	skipnz
  1163     01BD  0AA1               	incf	___awmod@divisor+1,f
  1164     01BE                     l916:
  1165     01BE  0820               	movf	___awmod@divisor,w
  1166     01BF  0421               	iorwf	___awmod@divisor+1,w
  1167     01C0  1903               	btfsc	3,2
  1168     01C1  29C3               	goto	u521
  1169     01C2  29C4               	goto	u520
  1170     01C3                     u521:
  1171     01C3  29F3               	goto	l934
  1172     01C4                     u520:
  1173     01C4                     l918:
  1174     01C4  01A4               	clrf	___awmod@counter
  1175     01C5  0AA4               	incf	___awmod@counter,f
  1176     01C6  29D2               	goto	l924
  1177     01C7                     l920:
  1178     01C7  3001               	movlw	1
  1179     01C8                     u535:
  1180     01C8  1003               	clrc
  1181     01C9  0DA0               	rlf	___awmod@divisor,f
  1182     01CA  0DA1               	rlf	___awmod@divisor+1,f
  1183     01CB  3EFF               	addlw	-1
  1184     01CC  1D03               	skipz
  1185     01CD  29C8               	goto	u535
  1186     01CE                     l922:
  1187     01CE  3001               	movlw	1
  1188     01CF  00FF               	movwf	btemp+1
  1189     01D0  087F               	movf	btemp+1,w
  1190     01D1  07A4               	addwf	___awmod@counter,f
  1191     01D2                     l924:
  1192     01D2  1FA1               	btfss	___awmod@divisor+1,7
  1193     01D3  29D5               	goto	u541
  1194     01D4  29D6               	goto	u540
  1195     01D5                     u541:
  1196     01D5  29C7               	goto	l920
  1197     01D6                     u540:
  1198     01D6                     l926:
  1199     01D6  0821               	movf	___awmod@divisor+1,w
  1200     01D7  0223               	subwf	___awmod@dividend+1,w
  1201     01D8  1D03               	skipz
  1202     01D9  29DC               	goto	u555
  1203     01DA  0820               	movf	___awmod@divisor,w
  1204     01DB  0222               	subwf	___awmod@dividend,w
  1205     01DC                     u555:
  1206     01DC  1C03               	skipc
  1207     01DD  29DF               	goto	u551
  1208     01DE  29E0               	goto	u550
  1209     01DF                     u551:
  1210     01DF  29E6               	goto	l930
  1211     01E0                     u550:
  1212     01E0                     l928:
  1213     01E0  0820               	movf	___awmod@divisor,w
  1214     01E1  02A2               	subwf	___awmod@dividend,f
  1215     01E2  0821               	movf	___awmod@divisor+1,w
  1216     01E3  1C03               	skipc
  1217     01E4  03A3               	decf	___awmod@dividend+1,f
  1218     01E5  02A3               	subwf	___awmod@dividend+1,f
  1219     01E6                     l930:
  1220     01E6  3001               	movlw	1
  1221     01E7                     u565:
  1222     01E7  1003               	clrc
  1223     01E8  0CA1               	rrf	___awmod@divisor+1,f
  1224     01E9  0CA0               	rrf	___awmod@divisor,f
  1225     01EA  3EFF               	addlw	-1
  1226     01EB  1D03               	skipz
  1227     01EC  29E7               	goto	u565
  1228     01ED                     l932:
  1229     01ED  3001               	movlw	1
  1230     01EE  02A4               	subwf	___awmod@counter,f
  1231     01EF  1D03               	btfss	3,2
  1232     01F0  29F2               	goto	u571
  1233     01F1  29F3               	goto	u570
  1234     01F2                     u571:
  1235     01F2  29D6               	goto	l926
  1236     01F3                     u570:
  1237     01F3                     l934:
  1238     01F3  0825               	movf	___awmod@sign,w
  1239     01F4  1903               	btfsc	3,2
  1240     01F5  29F7               	goto	u581
  1241     01F6  29F8               	goto	u580
  1242     01F7                     u581:
  1243     01F7  29FD               	goto	l938
  1244     01F8                     u580:
  1245     01F8                     l936:
  1246     01F8  09A2               	comf	___awmod@dividend,f
  1247     01F9  09A3               	comf	___awmod@dividend+1,f
  1248     01FA  0AA2               	incf	___awmod@dividend,f
  1249     01FB  1903               	skipnz
  1250     01FC  0AA3               	incf	___awmod@dividend+1,f
  1251     01FD                     l938:
  1252     01FD  0823               	movf	___awmod@dividend+1,w
  1253     01FE  00A1               	movwf	?___awmod+1
  1254     01FF  0822               	movf	___awmod@dividend,w
  1255     0200  00A0               	movwf	?___awmod
  1256     0201                     l332:
  1257     0201  0008               	return
  1258     0202                     __end_of___awmod:
  1259                           
  1260                           	psect	text7
  1261     013E                     __ptext7:	
  1262 ;; *************** function ___awdiv *****************
  1263 ;; Defined at:
  1264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  divisor         2    0[BANK0 ] int 
  1267 ;;  dividend        2    2[BANK0 ] int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  quotient        2    6[BANK0 ] int 
  1270 ;;  sign            1    5[BANK0 ] unsigned char 
  1271 ;;  counter         1    4[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    0[BANK0 ] int 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, btemp+1
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       4       0       0       0
  1282 ;;      Locals:         0       4       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         0       8       0       0       0
  1285 ;;Total ram usage:        8 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 2
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_display_Seg
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295     013E                     ___awdiv:	
  1296                           ;psect for function ___awdiv
  1297                           
  1298     013E                     l860:	
  1299                           ;incstack = 0
  1300                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1301                           
  1302     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1303     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0140  01A5               	clrf	___awdiv@sign
  1305     0141                     l862:
  1306     0141  1FA1               	btfss	___awdiv@divisor+1,7
  1307     0142  2944               	goto	u401
  1308     0143  2945               	goto	u400
  1309     0144                     u401:
  1310     0144  294C               	goto	l868
  1311     0145                     u400:
  1312     0145                     l864:
  1313     0145  09A0               	comf	___awdiv@divisor,f
  1314     0146  09A1               	comf	___awdiv@divisor+1,f
  1315     0147  0AA0               	incf	___awdiv@divisor,f
  1316     0148  1903               	skipnz
  1317     0149  0AA1               	incf	___awdiv@divisor+1,f
  1318     014A                     l866:
  1319     014A  01A5               	clrf	___awdiv@sign
  1320     014B  0AA5               	incf	___awdiv@sign,f
  1321     014C                     l868:
  1322     014C  1FA3               	btfss	___awdiv@dividend+1,7
  1323     014D  294F               	goto	u411
  1324     014E  2950               	goto	u410
  1325     014F                     u411:
  1326     014F  2959               	goto	l874
  1327     0150                     u410:
  1328     0150                     l870:
  1329     0150  09A2               	comf	___awdiv@dividend,f
  1330     0151  09A3               	comf	___awdiv@dividend+1,f
  1331     0152  0AA2               	incf	___awdiv@dividend,f
  1332     0153  1903               	skipnz
  1333     0154  0AA3               	incf	___awdiv@dividend+1,f
  1334     0155                     l872:
  1335     0155  3001               	movlw	1
  1336     0156  00FF               	movwf	btemp+1
  1337     0157  087F               	movf	btemp+1,w
  1338     0158  06A5               	xorwf	___awdiv@sign,f
  1339     0159                     l874:
  1340     0159  01A6               	clrf	___awdiv@quotient
  1341     015A  01A7               	clrf	___awdiv@quotient+1
  1342     015B                     l876:
  1343     015B  0820               	movf	___awdiv@divisor,w
  1344     015C  0421               	iorwf	___awdiv@divisor+1,w
  1345     015D  1903               	btfsc	3,2
  1346     015E  2960               	goto	u421
  1347     015F  2961               	goto	u420
  1348     0160                     u421:
  1349     0160  2998               	goto	l896
  1350     0161                     u420:
  1351     0161                     l878:
  1352     0161  01A4               	clrf	___awdiv@counter
  1353     0162  0AA4               	incf	___awdiv@counter,f
  1354     0163  296F               	goto	l884
  1355     0164                     l880:
  1356     0164  3001               	movlw	1
  1357     0165                     u435:
  1358     0165  1003               	clrc
  1359     0166  0DA0               	rlf	___awdiv@divisor,f
  1360     0167  0DA1               	rlf	___awdiv@divisor+1,f
  1361     0168  3EFF               	addlw	-1
  1362     0169  1D03               	skipz
  1363     016A  2965               	goto	u435
  1364     016B                     l882:
  1365     016B  3001               	movlw	1
  1366     016C  00FF               	movwf	btemp+1
  1367     016D  087F               	movf	btemp+1,w
  1368     016E  07A4               	addwf	___awdiv@counter,f
  1369     016F                     l884:
  1370     016F  1FA1               	btfss	___awdiv@divisor+1,7
  1371     0170  2972               	goto	u441
  1372     0171  2973               	goto	u440
  1373     0172                     u441:
  1374     0172  2964               	goto	l880
  1375     0173                     u440:
  1376     0173                     l886:
  1377     0173  3001               	movlw	1
  1378     0174                     u455:
  1379     0174  1003               	clrc
  1380     0175  0DA6               	rlf	___awdiv@quotient,f
  1381     0176  0DA7               	rlf	___awdiv@quotient+1,f
  1382     0177  3EFF               	addlw	-1
  1383     0178  1D03               	skipz
  1384     0179  2974               	goto	u455
  1385     017A  0821               	movf	___awdiv@divisor+1,w
  1386     017B  0223               	subwf	___awdiv@dividend+1,w
  1387     017C  1D03               	skipz
  1388     017D  2980               	goto	u465
  1389     017E  0820               	movf	___awdiv@divisor,w
  1390     017F  0222               	subwf	___awdiv@dividend,w
  1391     0180                     u465:
  1392     0180  1C03               	skipc
  1393     0181  2983               	goto	u461
  1394     0182  2984               	goto	u460
  1395     0183                     u461:
  1396     0183  298B               	goto	l892
  1397     0184                     u460:
  1398     0184                     l888:
  1399     0184  0820               	movf	___awdiv@divisor,w
  1400     0185  02A2               	subwf	___awdiv@dividend,f
  1401     0186  0821               	movf	___awdiv@divisor+1,w
  1402     0187  1C03               	skipc
  1403     0188  03A3               	decf	___awdiv@dividend+1,f
  1404     0189  02A3               	subwf	___awdiv@dividend+1,f
  1405     018A                     l890:
  1406     018A  1426               	bsf	___awdiv@quotient,0
  1407     018B                     l892:
  1408     018B  3001               	movlw	1
  1409     018C                     u475:
  1410     018C  1003               	clrc
  1411     018D  0CA1               	rrf	___awdiv@divisor+1,f
  1412     018E  0CA0               	rrf	___awdiv@divisor,f
  1413     018F  3EFF               	addlw	-1
  1414     0190  1D03               	skipz
  1415     0191  298C               	goto	u475
  1416     0192                     l894:
  1417     0192  3001               	movlw	1
  1418     0193  02A4               	subwf	___awdiv@counter,f
  1419     0194  1D03               	btfss	3,2
  1420     0195  2997               	goto	u481
  1421     0196  2998               	goto	u480
  1422     0197                     u481:
  1423     0197  2973               	goto	l886
  1424     0198                     u480:
  1425     0198                     l896:
  1426     0198  0825               	movf	___awdiv@sign,w
  1427     0199  1903               	btfsc	3,2
  1428     019A  299C               	goto	u491
  1429     019B  299D               	goto	u490
  1430     019C                     u491:
  1431     019C  29A2               	goto	l900
  1432     019D                     u490:
  1433     019D                     l898:
  1434     019D  09A6               	comf	___awdiv@quotient,f
  1435     019E  09A7               	comf	___awdiv@quotient+1,f
  1436     019F  0AA6               	incf	___awdiv@quotient,f
  1437     01A0  1903               	skipnz
  1438     01A1  0AA7               	incf	___awdiv@quotient+1,f
  1439     01A2                     l900:
  1440     01A2  0827               	movf	___awdiv@quotient+1,w
  1441     01A3  00A1               	movwf	?___awdiv+1
  1442     01A4  0826               	movf	___awdiv@quotient,w
  1443     01A5  00A0               	movwf	?___awdiv
  1444     01A6                     l319:
  1445     01A6  0008               	return
  1446     01A7                     __end_of___awdiv:
  1447                           
  1448                           	psect	text8
  1449     0028                     __ptext8:	
  1450 ;; *************** function _timer_0 *****************
  1451 ;; Defined at:
  1452 ;;		line 25 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          4       0       0       0       0
  1469 ;;      Totals:         4       0       0       0       0
  1470 ;;Total ram usage:        4 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 1
  1473 ;; This function calls:
  1474 ;;		_select_Seg
  1475 ;; This function is called by:
  1476 ;;		Interrupt level 1
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480     0028                     _timer_0:	
  1481                           ;psect for function _timer_0
  1482                           
  1483     0028                     i1l1000:
  1484                           
  1485                           ;main.c: 26: if (INTCONbits.TMR0IF == 1) {
  1486     0028  1D0B               	btfss	11,2	;volatile
  1487     0029  282B               	goto	u72_21
  1488     002A  282C               	goto	u72_20
  1489     002B                     u72_21:
  1490     002B  28BE               	goto	i1l59
  1491     002C                     u72_20:
  1492     002C                     i1l1002:
  1493                           
  1494                           ;main.c: 27: if (timer_count >= 4) {
  1495     002C  3004               	movlw	4
  1496     002D  027D               	subwf	_timer_count,w
  1497     002E  1C03               	skipc
  1498     002F  2831               	goto	u73_21
  1499     0030  2832               	goto	u73_20
  1500     0031                     u73_21:
  1501     0031  2833               	goto	i1l1006
  1502     0032                     u73_20:
  1503     0032                     i1l1004:
  1504                           
  1505                           ;main.c: 28: timer_count = 0;
  1506     0032  01FD               	clrf	_timer_count
  1507     0033                     i1l1006:
  1508                           
  1509                           ;main.c: 29: };main.c: 31: if (timer_count == 0){
  1510     0033  087D               	movf	_timer_count,w
  1511     0034  1D03               	btfss	3,2
  1512     0035  2837               	goto	u74_21
  1513     0036  2838               	goto	u74_20
  1514     0037                     u74_21:
  1515     0037  2854               	goto	i1l1012
  1516     0038                     u74_20:
  1517     0038                     i1l1008:
  1518                           
  1519                           ;main.c: 32: select_Seg(0,1,1,1);
  1520     0038  3000               	movlw	0
  1521     0039  00F0               	movwf	select_Seg@rc0
  1522     003A  00F1               	movwf	select_Seg@rc0+1
  1523     003B  3001               	movlw	1
  1524     003C  00F2               	movwf	select_Seg@rc1
  1525     003D  3000               	movlw	0
  1526     003E  00F3               	movwf	select_Seg@rc1+1
  1527     003F  3001               	movlw	1
  1528     0040  00F4               	movwf	select_Seg@rc2
  1529     0041  3000               	movlw	0
  1530     0042  00F5               	movwf	select_Seg@rc2+1
  1531     0043  3001               	movlw	1
  1532     0044  00F6               	movwf	select_Seg@rc3
  1533     0045  3000               	movlw	0
  1534     0046  00F7               	movwf	select_Seg@rc3+1
  1535     0047  120A  118A  22BF  120A  118A  	fcall	_select_Seg
  1536     004C                     i1l1010:
  1537                           
  1538                           ;main.c: 33: PORTB = segment[Rd];
  1539     004C  1283               	bcf	3,5	;RP0=0, select bank0
  1540     004D  1303               	bcf	3,6	;RP1=0, select bank0
  1541     004E  083F               	movf	_Rd,w
  1542     004F  3E2F               	addlw	(low (_segment| 0))& (0+255)
  1543     0050  0084               	movwf	4
  1544     0051  1383               	bcf	3,7	;select IRP bank0
  1545     0052  0800               	movf	0,w
  1546     0053  0086               	movwf	6	;volatile
  1547     0054                     i1l1012:
  1548                           
  1549                           ;main.c: 34: };main.c: 35: if (timer_count == 1){
  1550     0054  037D               	decf	_timer_count,w
  1551     0055  1D03               	btfss	3,2
  1552     0056  2858               	goto	u75_21
  1553     0057  2859               	goto	u75_20
  1554     0058                     u75_21:
  1555     0058  2875               	goto	i1l1018
  1556     0059                     u75_20:
  1557     0059                     i1l1014:
  1558                           
  1559                           ;main.c: 36: select_Seg(1,0,1,1);
  1560     0059  3001               	movlw	1
  1561     005A  00F0               	movwf	select_Seg@rc0
  1562     005B  3000               	movlw	0
  1563     005C  00F1               	movwf	select_Seg@rc0+1
  1564     005D  3000               	movlw	0
  1565     005E  00F2               	movwf	select_Seg@rc1
  1566     005F  00F3               	movwf	select_Seg@rc1+1
  1567     0060  3001               	movlw	1
  1568     0061  00F4               	movwf	select_Seg@rc2
  1569     0062  3000               	movlw	0
  1570     0063  00F5               	movwf	select_Seg@rc2+1
  1571     0064  3001               	movlw	1
  1572     0065  00F6               	movwf	select_Seg@rc3
  1573     0066  3000               	movlw	0
  1574     0067  00F7               	movwf	select_Seg@rc3+1
  1575     0068  120A  118A  22BF  120A  118A  	fcall	_select_Seg
  1576     006D                     i1l1016:
  1577                           
  1578                           ;main.c: 37: PORTB = segment[Ru];
  1579     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1580     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1581     006F  083E               	movf	_Ru,w
  1582     0070  3E2F               	addlw	(low (_segment| 0))& (0+255)
  1583     0071  0084               	movwf	4
  1584     0072  1383               	bcf	3,7	;select IRP bank0
  1585     0073  0800               	movf	0,w
  1586     0074  0086               	movwf	6	;volatile
  1587     0075                     i1l1018:
  1588                           
  1589                           ;main.c: 38: };main.c: 39: if (timer_count == 2){
  1590     0075  3002               	movlw	2
  1591     0076  067D               	xorwf	_timer_count,w
  1592     0077  1D03               	btfss	3,2
  1593     0078  287A               	goto	u76_21
  1594     0079  287B               	goto	u76_20
  1595     007A                     u76_21:
  1596     007A  2897               	goto	i1l1024
  1597     007B                     u76_20:
  1598     007B                     i1l1020:
  1599                           
  1600                           ;main.c: 40: select_Seg(1,1,0,1);
  1601     007B  3001               	movlw	1
  1602     007C  00F0               	movwf	select_Seg@rc0
  1603     007D  3000               	movlw	0
  1604     007E  00F1               	movwf	select_Seg@rc0+1
  1605     007F  3001               	movlw	1
  1606     0080  00F2               	movwf	select_Seg@rc1
  1607     0081  3000               	movlw	0
  1608     0082  00F3               	movwf	select_Seg@rc1+1
  1609     0083  3000               	movlw	0
  1610     0084  00F4               	movwf	select_Seg@rc2
  1611     0085  00F5               	movwf	select_Seg@rc2+1
  1612     0086  3001               	movlw	1
  1613     0087  00F6               	movwf	select_Seg@rc3
  1614     0088  3000               	movlw	0
  1615     0089  00F7               	movwf	select_Seg@rc3+1
  1616     008A  120A  118A  22BF  120A  118A  	fcall	_select_Seg
  1617     008F                     i1l1022:
  1618                           
  1619                           ;main.c: 41: PORTB = segment[Ld];
  1620     008F  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0090  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0091  083C               	movf	_Ld,w
  1623     0092  3E2F               	addlw	(low (_segment| 0))& (0+255)
  1624     0093  0084               	movwf	4
  1625     0094  1383               	bcf	3,7	;select IRP bank0
  1626     0095  0800               	movf	0,w
  1627     0096  0086               	movwf	6	;volatile
  1628     0097                     i1l1024:
  1629                           
  1630                           ;main.c: 42: };main.c: 43: if (timer_count == 3){
  1631     0097  3003               	movlw	3
  1632     0098  067D               	xorwf	_timer_count,w
  1633     0099  1D03               	btfss	3,2
  1634     009A  289C               	goto	u77_21
  1635     009B  289D               	goto	u77_20
  1636     009C                     u77_21:
  1637     009C  28B9               	goto	i1l1030
  1638     009D                     u77_20:
  1639     009D                     i1l1026:
  1640                           
  1641                           ;main.c: 44: select_Seg(1,1,1,0);
  1642     009D  3001               	movlw	1
  1643     009E  00F0               	movwf	select_Seg@rc0
  1644     009F  3000               	movlw	0
  1645     00A0  00F1               	movwf	select_Seg@rc0+1
  1646     00A1  3001               	movlw	1
  1647     00A2  00F2               	movwf	select_Seg@rc1
  1648     00A3  3000               	movlw	0
  1649     00A4  00F3               	movwf	select_Seg@rc1+1
  1650     00A5  3001               	movlw	1
  1651     00A6  00F4               	movwf	select_Seg@rc2
  1652     00A7  3000               	movlw	0
  1653     00A8  00F5               	movwf	select_Seg@rc2+1
  1654     00A9  3000               	movlw	0
  1655     00AA  00F6               	movwf	select_Seg@rc3
  1656     00AB  00F7               	movwf	select_Seg@rc3+1
  1657     00AC  120A  118A  22BF  120A  118A  	fcall	_select_Seg
  1658     00B1                     i1l1028:
  1659                           
  1660                           ;main.c: 45: PORTB = segment[Lu];
  1661     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1662     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1663     00B3  083B               	movf	_Lu,w
  1664     00B4  3E2F               	addlw	(low (_segment| 0))& (0+255)
  1665     00B5  0084               	movwf	4
  1666     00B6  1383               	bcf	3,7	;select IRP bank0
  1667     00B7  0800               	movf	0,w
  1668     00B8  0086               	movwf	6	;volatile
  1669     00B9                     i1l1030:
  1670                           
  1671                           ;main.c: 46: };;main.c: 48: timer_count ++ ;
  1672     00B9  3001               	movlw	1
  1673     00BA  00FF               	movwf	btemp+1
  1674     00BB  087F               	movf	btemp+1,w
  1675     00BC  07FD               	addwf	_timer_count,f
  1676     00BD                     i1l1032:
  1677                           
  1678                           ;main.c: 49: INTCONbits.TMR0IF = 0;
  1679     00BD  110B               	bcf	11,2	;volatile
  1680     00BE                     i1l59:
  1681     00BE  087B               	movf	??_timer_0+3,w
  1682     00BF  00FF               	movwf	btemp+1
  1683     00C0  087A               	movf	??_timer_0+2,w
  1684     00C1  008A               	movwf	10
  1685     00C2  0879               	movf	??_timer_0+1,w
  1686     00C3  0084               	movwf	4
  1687     00C4  0E78               	swapf	??_timer_0,w
  1688     00C5  0083               	movwf	3
  1689     00C6  0EFE               	swapf	btemp,f
  1690     00C7  0E7E               	swapf	btemp,w
  1691     00C8  0009               	retfie
  1692     00C9                     __end_of_timer_0:
  1693                           
  1694                           	psect	intentry
  1695     0004                     __pintentry:	
  1696                           ;incstack = 0
  1697                           ; Regs used in _timer_0: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1698                           
  1699     0004                     interrupt_function:
  1700     007E                     saved_w	set	btemp
  1701     0004  00FE               	movwf	btemp
  1702     0005  0E03               	swapf	3,w
  1703     0006  00F8               	movwf	??_timer_0
  1704     0007  0804               	movf	4,w
  1705     0008  00F9               	movwf	??_timer_0+1
  1706     0009  080A               	movf	10,w
  1707     000A  00FA               	movwf	??_timer_0+2
  1708     000B  087F               	movf	btemp+1,w
  1709     000C  00FB               	movwf	??_timer_0+3
  1710     000D  120A  118A  2828   	ljmp	_timer_0
  1711                           
  1712                           	psect	text9
  1713     02BF                     __ptext9:	
  1714 ;; *************** function _select_Seg *****************
  1715 ;; Defined at:
  1716 ;;		line 95 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  rc0             2    0[COMMON] unsigned short 
  1719 ;;  rc1             2    2[COMMON] unsigned short 
  1720 ;;  rc2             2    4[COMMON] unsigned short 
  1721 ;;  rc3             2    6[COMMON] unsigned short 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         8       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0
  1736 ;;      Totals:         8       0       0       0       0
  1737 ;;Total ram usage:        8 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_timer_0
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746     02BF                     _select_Seg:	
  1747                           ;psect for function _select_Seg
  1748                           
  1749     02BF                     i1l990:	
  1750                           ;incstack = 0
  1751                           ; Regs used in _select_Seg: [wreg+status,0]
  1752                           
  1753                           
  1754                           ;main.c: 96: PORTCbits.RC0 = rc0 ;
  1755     02BF  0C70               	rrf	select_Seg@rc0,w
  1756     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1757     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1758     02C2  1C03               	skipc
  1759     02C3  1007               	bcf	7,0	;volatile
  1760     02C4  1803               	skipnc
  1761     02C5  1407               	bsf	7,0	;volatile
  1762                           
  1763                           ;main.c: 97: PORTCbits.RC1 = rc1 ;
  1764     02C6  0C72               	rrf	select_Seg@rc1,w
  1765     02C7  1C03               	skipc
  1766     02C8  1087               	bcf	7,1	;volatile
  1767     02C9  1803               	skipnc
  1768     02CA  1487               	bsf	7,1	;volatile
  1769                           
  1770                           ;main.c: 98: PORTCbits.RC2 = rc2 ;
  1771     02CB  0C74               	rrf	select_Seg@rc2,w
  1772     02CC  1C03               	skipc
  1773     02CD  1107               	bcf	7,2	;volatile
  1774     02CE  1803               	skipnc
  1775     02CF  1507               	bsf	7,2	;volatile
  1776                           
  1777                           ;main.c: 99: PORTCbits.RC3 = rc3 ;
  1778     02D0  0C76               	rrf	select_Seg@rc3,w
  1779     02D1  1C03               	skipc
  1780     02D2  1187               	bcf	7,3	;volatile
  1781     02D3  1803               	skipnc
  1782     02D4  1587               	bsf	7,3	;volatile
  1783     02D5                     i1l80:
  1784     02D5  0008               	return
  1785     02D6                     __end_of_select_Seg:
  1786     007E                     btemp	set	126	;btemp
  1787     007E                     wtemp0	set	126
  1788                           
  1789                           	psect	idloc
  1790                           
  1791                           ;Config register IDLOC0 @ 0x2000
  1792                           ;	unspecified, using default values
  1793     2000                     	org	8192
  1794     2000  3FFF               	dw	16383
  1795                           
  1796                           ;Config register IDLOC1 @ 0x2001
  1797                           ;	unspecified, using default values
  1798     2001                     	org	8193
  1799     2001  3FFF               	dw	16383
  1800                           
  1801                           ;Config register IDLOC2 @ 0x2002
  1802                           ;	unspecified, using default values
  1803     2002                     	org	8194
  1804     2002  3FFF               	dw	16383
  1805                           
  1806                           ;Config register IDLOC3 @ 0x2003
  1807                           ;	unspecified, using default values
  1808     2003                     	org	8195
  1809     2003  3FFF               	dw	16383
  1810                           
  1811                           	psect	config
  1812                           
  1813                           ;Config register CONFIG @ 0x2007
  1814                           ;	Oscillator Selection bits
  1815                           ;	FOSC = EXTRC, RC oscillator
  1816                           ;	Watchdog Timer Enable bit
  1817                           ;	WDTE = OFF, WDT disabled
  1818                           ;	Power-up Timer Enable bit
  1819                           ;	PWRTE = OFF, PWRT disabled
  1820                           ;	Brown-out Reset Enable bit
  1821                           ;	BOREN = ON, BOR enabled
  1822                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1823                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1824                           ;	Data EEPROM Memory Code Protection bit
  1825                           ;	CPD = OFF, Data EEPROM code protection off
  1826                           ;	Flash Program Memory Write Enable bits
  1827                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1828                           ;	In-Circuit Debugger Mode bit
  1829                           ;	DEBUG = 0x1, unprogrammed default
  1830                           ;	Flash Program Memory Code Protection bit
  1831                           ;	CP = OFF, Code protection off
  1832     2007                     	org	8199
  1833     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         3
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     15      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_0 in COMMON

    _timer_0->_select_Seg

Critical Paths under _main in BANK0

    _main->_display_Seg
    _display_Seg->___awdiv

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1949
                                             12 BANK0      3     3      0
                        _display_Seg
                           _int_Port
                          _int_Timer
 ---------------------------------------------------------------------------------
 (1) _int_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_Seg                                          4     2      2    1949
                                              8 BANK0      4     2      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _timer_0                                              4     4      0    1304
                                              8 COMMON     4     4      0
                         _select_Seg
 ---------------------------------------------------------------------------------
 (4) _select_Seg                                           8     0      8    1304
                                              0 COMMON     8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_Seg
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _int_Port
   _int_Timer

 _timer_0 (ROOT)
   _select_Seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 23:27:44 2023

                      _L 003D                        _R 0040                        _i 007C  
                      _j 0041                        pc 0002             ?_display_Seg 0028  
                     l71 0309                       l74 0300                       l77 013D  
                     _Ld 003C                       _Rd 003F                       _Lu 003B  
           ___awdiv@sign 0025                       _Ru 003E                       _nb 0039  
                     fsr 0004                      l332 0201                      l319 01A6  
                    l438 0247                      l448 0283                      l900 01A2  
                    l910 01B3                      l920 01C7                      l912 01B5  
                    l904 01A7                      l930 01E6                      l922 01CE  
                    l914 01B9                      l906 01AA                      l860 013E  
                    l932 01ED                      l924 01D2                      l916 01BE  
                    l908 01AE                      l870 0150                      l862 0141  
                    l926 01D6                      l918 01C4                      l934 01F3  
                    l950 0216                      l942 0202                      l880 0164  
                    l872 0155                      l864 0145                      l936 01F8  
                    l928 01E0                      l960 0236                      l952 021A  
                    l944 0206                      l890 018A                      l882 016B  
                    l874 0159                      l866 014A                      l938 01FD  
                    l962 023D                      l954 021E                      l946 020C  
                    l970 0250                      l892 018B                      l884 016F  
                    l876 015B                      l868 014C                      l956 022F  
                    l948 020F                      l964 0243                      l980 026C  
                    l972 0253                      l894 0192                      l886 0173  
                    l878 0161                      l958 0235                      l982 0272  
                    l974 025A                      l888 0184                      l896 0198  
                    l984 0279                      l976 025E                      l968 0248  
                    l992 0301                      l898 019D                      l978 0262  
                    l986 027F                      l994 02F5                      l996 02F8  
                    l998 00C9                      u400 0145                      u401 0144  
                    u410 0150                      u411 014F                      u420 0161  
                    u500 01AE                      u421 0160                      u501 01AD  
                    u510 01B9                      u511 01B8                      u440 0173  
                    u520 01C4                      u441 0172                      u521 01C3  
                    u610 021E                      u435 0165                      u611 021D  
                    u460 0184                      u540 01D6                      u461 0183  
                    u541 01D5                      u605 0210                      u550 01E0  
                    u630 022F                      u710 027F                      u455 0174  
                    u551 01DF                      u535 01C8                      u631 022E  
                    u711 027E                      u480 0198                      u481 0197  
                    u465 0180                      u625 021F                      u705 0273  
                    u490 019D                      u570 01F3                      u650 0243  
                    u491 019C                      u475 018C                      u571 01F2  
                    u555 01DC                      u651 0242                      u635 022B  
                    u580 01F8                      u660 0250                      u581 01F7  
                    u565 01E7                      u645 0237                      u661 024F  
                    u590 020C                      u591 020B                      u680 0262  
                    u681 0261                      u690 026C                      u691 026B  
                    u675 0254                      u780 02AA                      u781 02A9  
                    u695 0268                      u797 02B4                      fsr0 0004  
                    indf 0000             ___awmod@sign 0025                     l1040 0299  
                   l1042 02A1                     l1034 0284                     l1044 02AA  
                   l1036 0289                     l1046 02AC                     l1038 028E  
                   i1l80 02D5                     i1l59 00BE                     _TMR0 0001  
                   _main 0284                     btemp 007E                     start 0010  
                  ?_main 0070          __end_of___awdiv 01A7          __end_of___awmod 0202  
        ___awdiv@divisor 0020          __end_of___lwdiv 0248          __end_of___lwmod 0284  
                  i1l990 02BF          ___awdiv@counter 0024                    _PORTB 0006  
                  _PORTC 0007                    u72_20 002C                    u72_21 002B  
                  u73_20 0032                    u73_21 0031                    _TRISB 0086  
                  _TRISC 0087                    u74_20 0038                    u74_21 0037  
                  u75_20 0059                    u75_21 0058                    u76_20 007B  
                  u76_21 007A                    u77_20 009D                    u77_21 009C  
           display_Seg@a 0028                    pclath 000A          __end_of_timer_0 00C9  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 02BF                   ??_main 002C         ___awdiv@dividend 0022  
                 i1l1000 0028                   i1l1010 004C                   i1l1002 002C  
                 i1l1020 007B                   i1l1012 0054                   i1l1004 0032  
                 i1l1030 00B9                   i1l1022 008F                   i1l1014 0059  
                 i1l1006 0033                   i1l1032 00BD                   i1l1024 0097  
                 i1l1016 006D                   i1l1008 0038                   i1l1026 009D  
                 i1l1018 0075                   i1l1028 00B1                ??___awdiv 0024  
              ??___awmod 0024                ??___lwdiv 0024                ??___lwmod 0024  
       __end_of_int_Port 030A         ___awdiv@quotient 0026          ___awmod@divisor 0020  
        ___awmod@counter 0024                   saved_w 007E                ??_timer_0 0078  
__end_of__initialization 0024           __pcstackCOMMON 0070             __pidataBANK0 02E9  
             __pbssBANK0 0041               __pmaintext 0284               __pintentry 0004  
              ?_int_Port 0070                  ___awdiv 013E                  ___awmod 01A7  
                ___lwdiv 0202                  ___lwmod 0248                  __ptext1 02F5  
                __ptext2 0301                  __ptext3 00C9                  __ptext4 0248  
                __ptext5 0202                  __ptext6 01A7                  __ptext7 013E  
                __ptext8 0028                  __ptext9 02BF        __end_of_int_Timer 0301  
       ___awmod@dividend 0022                  _segment 002F                  _timer_0 0028  
   end_of_initialization 0024               ??_int_Port 0020               _select_Seg 02BF  
              _PORTCbits 0007            select_Seg@rc0 0070            select_Seg@rc1 0072  
          select_Seg@rc2 0074            select_Seg@rc3 0076            ??_display_Seg 002A  
    start_initialization 0013              ?_select_Seg 0070               init_fetch0 02D6  
            __pdataBANK0 002F      __end_of_display_Seg 013E              __pbssCOMMON 007C  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 003B  
       ___lwdiv@dividend 0022                 ?___awdiv 0020                 ?___awmod 0020  
               ?___lwdiv 0020                 ?___lwmod 0020                 ?_timer_0 0070  
              _int_Timer 02F5         ___lwdiv@quotient 0024        interrupt_function 0004  
            _display_Seg 00C9               ?_int_Timer 0070          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0026             ??_select_Seg 0078                 _int_Port 0301  
     __end_of_select_Seg 02D6               _INTCONbits 000B                 init_ram0 02DA  
            ??_int_Timer 0020                 intlevel1 0000         ___lwmod@dividend 0022  
             _OPTION_REG 0081          ___lwmod@divisor 0020          ___lwmod@counter 0024  
            _timer_count 007D  
